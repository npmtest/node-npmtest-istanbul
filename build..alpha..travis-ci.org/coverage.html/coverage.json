{"/home/travis/build/npmtest/node-npmtest-istanbul/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_istanbul */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/lib.npmtest_istanbul.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/lib.npmtest_istanbul.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":53}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":59}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_istanbul */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_istanbul = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_istanbul = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":52}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":66},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-istanbul && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_istanbul */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_istanbul","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_istanbul.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_istanbul.rollup.js'] =","            local.assetsDict['/assets.npmtest_istanbul.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_istanbul.__dirname + '/lib.npmtest_istanbul.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/index.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":10,"column":38}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"3":{"start":{"line":31,"column":0},"end":{"line":151,"column":2}}},"branchMap":{},"code":["/*","Copyright (c) 2012, Yahoo! Inc.  All rights reserved.","Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.","*/","","/*jslint nomen: true */","var path = require('path'),","    Store = require('./lib/store'),","    Report = require('./lib/report'),","    meta = require('./lib/util/meta');","","//register our standard plugins","require('./lib/register-plugins');","","/**"," * the top-level API for `istanbul`. provides access to the key libraries in"," * istanbul so you can write your own tools using `istanbul` as a library."," *"," * Usage"," * -----"," *"," *      var istanbul = require('istanbul');"," *"," *"," * @class Istanbul"," * @static"," * @module main"," * @main main"," */","","module.exports = {","    /**","     * the Instrumenter class.","     * @property Instrumenter","     * @type Instrumenter","     * @static","     */","    Instrumenter: require('./lib/instrumenter'),","    /**","     * the Store class.","     * @property  Store","     * @type Store","     * @static","     */","    Store: Store,","    /**","     * the Collector class","     * @property  Collector","     * @type Collector","     * @static","     */","    Collector: require('./lib/collector'),","    /**","     * the hook module","     * @property hook","     * @type Hook","     * @static","     */","    hook: require('./lib/hook'),","    /**","     * the Report class","     * @property Report","     * @type Report","     * @static","     */","    Report: Report,","    /**","     * the config module","     * @property config","     * @type Config","     * @static","     */","    config: require('./lib/config'),","    /**","     * the Reporter class","     * @property Reporter","     * @type Reporter","     * @static","     */","    Reporter: require('./lib/reporter'),","    /**","     * utility for processing coverage objects","     * @property utils","     * @type ObjectUtils","     * @static","     */","    utils: require('./lib/object-utils'),","    /**","     * asynchronously returns a function that can match filesystem paths.","     * The function returned in the callback may be passed directly as a `matcher`","     * to the functions in the `hook` module.","     *","     * When no options are passed, the match function is one that matches all JS","     * files under the current working directory except ones under `node_modules`","     *","     * Match patterns are `ant`-style patterns processed using the `glob` library.","     * Examples not provided due to limitations in putting asterisks inside","     * jsdoc comments. Please refer to tests under `test/other/test-matcher.js`","     * for examples.","     *","     * @method matcherFor","     * @static","     * @param {Object} options Optional. Lookup options.","     * @param {String} [options.root] the root of the filesystem tree under","     *     which to match files. Defaults to `process.cwd()`","     * @param {Array} [options.includes] an array of include patterns to match.","     *     Defaults to all JS files under the root.","     * @param {Array} [options.excludes] and array of exclude patterns. File paths","     *     matching these patterns will be excluded by the returned matcher.","     *     Defaults to files under `node_modules` found anywhere under root.","     * @param {Function(err, matchFunction)} callback  The callback that is","     *      called with two arguments. The first is an `Error` object in case","     *      of errors or a falsy value if there were no errors. The second","     *      is a function that may be use as a matcher.","     */","    matcherFor: require('./lib/util/file-matcher').matcherFor,","    /**","     * the version of the library","     * @property VERSION","     * @type String","     * @static","     */","    VERSION: meta.VERSION,","    /**","     * the abstract Writer class","     * @property Writer","     * @type Writer","     * @static","     */","    Writer: require('./lib/util/writer').Writer,","    /**","     * the abstract ContentWriter class","     * @property ContentWriter","     * @type ContentWriter","     * @static","     */","    ContentWriter: require('./lib/util/writer').ContentWriter,","    /**","     * the concrete FileWriter class","     * @property FileWriter","     * @type FileWriter","     * @static","     */","    FileWriter: require('./lib/util/file-writer'),","    //undocumented","    _yuiLoadHook: require('./lib/util/yui-load-hook'),","    //undocumented","    TreeSummarizer: require('./lib/util/tree-summarizer'),","    //undocumented","    assetsDir: path.resolve(__dirname, 'lib', 'assets')","};","","",""],"l":{"7":1,"13":1,"31":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/store/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/store/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"Store","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":30}}},"2":{"name":"(anonymous_2)","line":73,"loc":{"start":{"line":73,"column":9},"end":{"line":73,"column":40}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":9},"end":{"line":81,"column":30}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":87,"column":10},"end":{"line":87,"column":22}}},"5":{"name":"(anonymous_5)","line":94,"loc":{"start":{"line":94,"column":12},"end":{"line":94,"column":33}}},"6":{"name":"(anonymous_6)","line":99,"loc":{"start":{"line":99,"column":13},"end":{"line":99,"column":25}}},"7":{"name":"(anonymous_7)","line":107,"loc":{"start":{"line":107,"column":15},"end":{"line":107,"column":30}}},"8":{"name":"(anonymous_8)","line":116,"loc":{"start":{"line":116,"column":15},"end":{"line":116,"column":38}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":7,"column":53}},"2":{"start":{"line":42,"column":0},"end":{"line":42,"column":32}},"3":{"start":{"line":45,"column":0},"end":{"line":45,"column":32}},"4":{"start":{"line":63,"column":0},"end":{"line":119,"column":2}},"5":{"start":{"line":73,"column":42},"end":{"line":73,"column":85}},"6":{"start":{"line":81,"column":32},"end":{"line":81,"column":75}},"7":{"start":{"line":87,"column":24},"end":{"line":87,"column":68}},"8":{"start":{"line":94,"column":35},"end":{"line":94,"column":81}},"9":{"start":{"line":108,"column":8},"end":{"line":108,"column":41}},"10":{"start":{"line":117,"column":8},"end":{"line":117,"column":53}},"11":{"start":{"line":121,"column":0},"end":{"line":121,"column":23}}},"branchMap":{},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var Factory = require('../util/factory'),","    factory = new Factory('store', __dirname, false);","/**"," * An abstraction for keeping track of content against some keys (e.g."," * original source, instrumented source, coverage objects against file names)."," * This class is both the base class as well as a factory for `Store` implementations."," *"," * Usage"," * -----"," *"," *      var Store = require('istanbul').Store,"," *          store = Store.create('memory');"," *"," *      //basic use"," *      store.set('foo', 'foo-content');"," *      var content = store.get('foo');"," *"," *      //keys and values"," *      store.keys().forEach(function (key) {"," *          console.log(key + ':\\n' + store.get(key);"," *      });"," *      if (store.hasKey('bar') { console.log(store.get('bar'); }"," *"," *"," *      //syntactic sugar"," *      store.setObject('foo', { foo: true });"," *      console.log(store.getObject('foo').foo);"," *"," *      store.dispose();"," *"," * @class Store"," * @constructor"," * @module store"," * @param {Object} options Optional. The options supported by a specific store implementation."," * @main store"," */","function Store(/* options */) {}","","//add register, create, mix, loadAll, getStoreList as class methods","factory.bindClassMethods(Store);","","/**"," * registers a new store implementation."," * @method register"," * @static"," * @param {Function} constructor the constructor function for the store. This function must have a"," *  `TYPE` property of type String, that will be used in `Store.create()`"," */","/**"," * returns a store implementation of the specified type."," * @method create"," * @static"," * @param {String} type the type of store to create"," * @param {Object} opts Optional. Options specific to the store implementation"," * @return {Store} a new store of the specified type"," */","","Store.prototype = {","    /**","     * sets some content associated with a specific key. The manner in which","     * duplicate keys are handled for multiple `set()` calls with the same","     * key is implementation-specific.","     *","     * @method set","     * @param {String} key the key for the content","     * @param {String} contents the contents for the key","     */","    set: function (/* key, contents */) { throw new Error(\"set: must be overridden\"); },","    /**","     * returns the content associated to a specific key or throws if the key","     * was not `set`","     * @method get","     * @param {String} key the key for which to get the content","     * @return {String} the content for the specified key","     */","    get: function (/* key */) { throw new Error(\"get: must be overridden\"); },","    /**","     * returns a list of all known keys","     * @method keys","     * @return {Array} an array of seen keys","     */","    keys: function () { throw new Error(\"keys: must be overridden\"); },","    /**","     * returns true if the key is one for which a `get()` call would work.","     * @method hasKey","     * @param {String} key","     * @return true if the key is valid for this store, false otherwise","     */","    hasKey: function (/* key */) { throw new Error(\"hasKey: must be overridden\"); },","    /**","     * lifecycle method to dispose temporary resources associated with the store","     * @method dispose","     */","    dispose: function () {},","    /**","     * sugar method to return an object associated with a specific key. Throws","     * if the content set against the key was not a valid JSON string.","     * @method getObject","     * @param {String} key the key for which to return the associated object","     * @return {Object} the object corresponding to the key","     */","    getObject: function (key) {","        return JSON.parse(this.get(key));","    },","    /**","     * sugar method to set an object against a specific key.","     * @method setObject","     * @param {String} key the key for the object","     * @param {Object} object the object to be stored","     */","    setObject: function (key, object) {","        return this.set(key, JSON.stringify(object));","    }","};","","module.exports = Store;","","",""],"l":{"6":1,"42":1,"45":1,"63":1,"73":0,"81":0,"87":0,"94":0,"108":0,"117":0,"121":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/factory.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/factory.js","s":{"1":1,"2":1,"3":3,"4":3,"5":3,"6":3,"7":3,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":21,"16":21,"17":0,"18":21,"19":21,"20":0,"21":0,"22":0,"23":0,"24":0,"25":3,"26":3,"27":27,"28":21,"29":21,"30":0,"31":0,"32":0,"33":3,"34":3,"35":3,"36":3,"37":3,"38":3,"39":3,"40":1,"41":1,"42":21,"43":72,"44":1},"b":{"1":[0,0],"2":[0,21],"3":[0,0],"4":[0,0],"5":[0,0],"6":[21,6],"7":[27,24],"8":[1,2]},"f":{"1":3,"2":0,"3":0,"4":21,"5":0,"6":3,"7":27,"8":3,"9":21,"10":72},"fnMap":{"1":{"name":"Factory","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":16},"end":{"line":21,"column":28}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":13},"end":{"line":27,"column":40}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":14},"end":{"line":34,"column":37}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":12},"end":{"line":41,"column":34}}},"6":{"name":"(anonymous_6)","line":51,"loc":{"start":{"line":51,"column":18},"end":{"line":51,"column":33}}},"7":{"name":"(anonymous_7)","line":53,"loc":{"start":{"line":53,"column":36},"end":{"line":53,"column":52}}},"8":{"name":"(anonymous_8)","line":66,"loc":{"start":{"line":66,"column":22},"end":{"line":66,"column":38}}},"9":{"name":"(anonymous_9)","line":81,"loc":{"start":{"line":81,"column":14},"end":{"line":81,"column":37}}},"10":{"name":"(anonymous_10)","line":82,"loc":{"start":{"line":82,"column":31},"end":{"line":82,"column":46}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":9,"column":31}},"2":{"start":{"line":11,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":19}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":49}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":23}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":30}},"8":{"start":{"line":19,"column":0},"end":{"line":79,"column":2}},"9":{"start":{"line":22,"column":8},"end":{"line":22,"column":46}},"10":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"11":{"start":{"line":24,"column":8},"end":{"line":24,"column":20}},"12":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"13":{"start":{"line":29,"column":12},"end":{"line":29,"column":59}},"14":{"start":{"line":31,"column":8},"end":{"line":31,"column":51}},"15":{"start":{"line":35,"column":8},"end":{"line":35,"column":36}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":140}},"17":{"start":{"line":36,"column":21},"end":{"line":36,"column":138}},"18":{"start":{"line":37,"column":8},"end":{"line":37,"column":42}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":34}},"20":{"start":{"line":42,"column":8},"end":{"line":44,"column":17}},"21":{"start":{"line":46,"column":8},"end":{"line":46,"column":57}},"22":{"start":{"line":47,"column":8},"end":{"line":47,"column":135}},"23":{"start":{"line":47,"column":21},"end":{"line":47,"column":133}},"24":{"start":{"line":48,"column":8},"end":{"line":48,"column":30}},"25":{"start":{"line":52,"column":8},"end":{"line":52,"column":24}},"26":{"start":{"line":53,"column":8},"end":{"line":63,"column":11}},"27":{"start":{"line":54,"column":12},"end":{"line":62,"column":13}},"28":{"start":{"line":55,"column":16},"end":{"line":61,"column":17}},"29":{"start":{"line":56,"column":20},"end":{"line":56,"column":68}},"30":{"start":{"line":58,"column":20},"end":{"line":58,"column":46}},"31":{"start":{"line":59,"column":20},"end":{"line":59,"column":44}},"32":{"start":{"line":60,"column":20},"end":{"line":60,"column":94}},"33":{"start":{"line":67,"column":8},"end":{"line":68,"column":50}},"34":{"start":{"line":70,"column":8},"end":{"line":70,"column":31}},"35":{"start":{"line":71,"column":8},"end":{"line":71,"column":49}},"36":{"start":{"line":72,"column":8},"end":{"line":72,"column":45}},"37":{"start":{"line":73,"column":8},"end":{"line":73,"column":62}},"38":{"start":{"line":74,"column":8},"end":{"line":74,"column":68}},"39":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"40":{"start":{"line":76,"column":12},"end":{"line":76,"column":73}},"41":{"start":{"line":81,"column":0},"end":{"line":85,"column":2}},"42":{"start":{"line":82,"column":4},"end":{"line":84,"column":7}},"43":{"start":{"line":83,"column":8},"end":{"line":83,"column":41}},"44":{"start":{"line":87,"column":0},"end":{"line":87,"column":25}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"3":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":37},"end":{"line":43,"column":55}},{"start":{"line":43,"column":58},"end":{"line":43,"column":62}}]},"4":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":26},"end":{"line":46,"column":49}},{"start":{"line":46,"column":52},"end":{"line":46,"column":56}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":12}},{"start":{"line":54,"column":12},"end":{"line":54,"column":12}}]},"7":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":16},"end":{"line":54,"column":35}},{"start":{"line":54,"column":39},"end":{"line":54,"column":78}}]},"8":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var util = require('util'),","    path = require('path'),","    fs = require('fs'),","    abbrev = require('abbrev');","","function Factory(kind, dir, allowAbbreviations) {","    this.kind = kind;","    this.dir = dir;","    this.allowAbbreviations = allowAbbreviations;","    this.classMap = {};","    this.abbreviations = null;","}","","Factory.prototype = {","","    knownTypes: function () {","        var keys = Object.keys(this.classMap);","        keys.sort();","        return keys;","    },","","    resolve: function (abbreviatedType) {","        if (!this.abbreviations) {","            this.abbreviations = abbrev(this.knownTypes());","        }","        return this.abbreviations[abbreviatedType];","    },","","    register: function (constructor) {","        var type = constructor.TYPE;","        if (!type) { throw new Error('Could not register ' + this.kind + ' constructor [no TYPE property]: ' + util.inspect(constructor)); }","        this.classMap[type] = constructor;","        this.abbreviations = null;","    },","","    create: function (type, opts) {","        var allowAbbrev = this.allowAbbreviations,","            realType = allowAbbrev ? this.resolve(type) : type,","            Cons;","","        Cons = realType ? this.classMap[realType] : null;","        if (!Cons) { throw new Error('Invalid ' + this.kind + ' [' + type + '], allowed values are ' + this.knownTypes().join(', ')); }","        return new Cons(opts);","    },","","    loadStandard: function (dir) {","        var that = this;","        fs.readdirSync(dir).forEach(function (file) {","            if (file !== 'index.js' && file.indexOf('.js') === file.length - 3) {","                try {","                    that.register(require(path.resolve(dir, file)));","                } catch (ex) {","                    console.error(ex.message);","                    console.error(ex.stack);","                    throw new Error('Could not register ' + that.kind + ' from file ' + file);","                }","            }","        });","    },","","    bindClassMethods: function (Cons) {","        var tmpKind = this.kind.charAt(0).toUpperCase() + this.kind.substring(1), //ucfirst","            allowAbbrev = this.allowAbbreviations;","","        Cons.mix = Factory.mix;","        Cons.register = this.register.bind(this);","        Cons.create = this.create.bind(this);","        Cons.loadAll = this.loadStandard.bind(this, this.dir);","        Cons['get' + tmpKind + 'List'] = this.knownTypes.bind(this);","        if (allowAbbrev) {","            Cons['resolve' + tmpKind + 'Name'] = this.resolve.bind(this);","        }","    }","};","","Factory.mix = function (cons, proto) {","    Object.keys(proto).forEach(function (key) {","        cons.prototype[key] = proto[key];","    });","};","","module.exports = Factory;","",""],"l":{"6":1,"11":1,"12":3,"13":3,"14":3,"15":3,"16":3,"19":1,"22":0,"23":0,"24":0,"28":0,"29":0,"31":0,"35":21,"36":21,"37":21,"38":21,"42":0,"46":0,"47":0,"48":0,"52":3,"53":3,"54":27,"55":21,"56":21,"58":0,"59":0,"60":0,"67":3,"70":3,"71":3,"72":3,"73":3,"74":3,"75":3,"76":1,"81":1,"82":21,"83":72,"87":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/index.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":3,"12":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":3},"fnMap":{"1":{"name":"Report","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":31}}},"2":{"name":"(anonymous_2)","line":74,"loc":{"start":{"line":74,"column":14},"end":{"line":74,"column":26}}},"3":{"name":"(anonymous_3)","line":84,"loc":{"start":{"line":84,"column":22},"end":{"line":84,"column":34}}},"4":{"name":"(anonymous_4)","line":93,"loc":{"start":{"line":93,"column":17},"end":{"line":93,"column":50}}},"5":{"name":"(anonymous_5)","line":98,"loc":{"start":{"line":98,"column":27},"end":{"line":98,"column":40}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":9,"column":54}},"2":{"start":{"line":37,"column":0},"end":{"line":39,"column":1}},"3":{"start":{"line":38,"column":4},"end":{"line":38,"column":28}},"4":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}},"5":{"start":{"line":44,"column":0},"end":{"line":44,"column":33}},"6":{"start":{"line":68,"column":0},"end":{"line":96,"column":2}},"7":{"start":{"line":75,"column":8},"end":{"line":75,"column":55}},"8":{"start":{"line":85,"column":8},"end":{"line":85,"column":20}},"9":{"start":{"line":94,"column":8},"end":{"line":94,"column":59}},"10":{"start":{"line":98,"column":0},"end":{"line":100,"column":3}},"11":{"start":{"line":99,"column":4},"end":{"line":99,"column":35}},"12":{"start":{"line":102,"column":0},"end":{"line":102,"column":24}}},"branchMap":{},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var util = require('util'),","    EventEmitter = require('events').EventEmitter,","    Factory = require('../util/factory'),","    factory = new Factory('report', __dirname, false);","/**"," * An abstraction for producing coverage reports."," * This class is both the base class as well as a factory for `Report` implementations."," * All reports are event emitters and are expected to emit a `done` event when"," * the report writing is complete."," *"," * See also the `Reporter` class for easily producing multiple coverage reports"," * with a single call."," *"," * Usage"," * -----"," *"," *      var Report = require('istanbul').Report,"," *          report = Report.create('html'),"," *          collector = new require('istanbul').Collector;"," *"," *      collector.add(coverageObject);"," *      report.on('done', function () { console.log('done'); });"," *      report.writeReport(collector);"," *"," * @class Report"," * @module report"," * @main report"," * @constructor"," * @protected"," * @param {Object} options Optional. The options supported by a specific store implementation."," */","function Report(/* options */) {","    EventEmitter.call(this);","}","","util.inherits(Report, EventEmitter);","","//add register, create, mix, loadAll, getReportList as class methods","factory.bindClassMethods(Report);","","/**"," * registers a new report implementation."," * @method register"," * @static"," * @param {Function} constructor the constructor function for the report. This function must have a"," *  `TYPE` property of type String, that will be used in `Report.create()`"," */","/**"," * returns a report implementation of the specified type."," * @method create"," * @static"," * @param {String} type the type of report to create"," * @param {Object} opts Optional. Options specific to the report implementation"," * @return {Report} a new store of the specified type"," */","/**"," * returns the list of available reports as an array of strings"," * @method getReportList"," * @static"," * @return an array of supported report formats"," */","","var proto = {","    /**","     * returns a one-line summary of the report","     * @method synopsis","     * @return {String} a description of what the report is about","     */","    synopsis: function () {","        throw new Error('synopsis must be overridden');","    },","    /**","     * returns a config object that has override-able keys settable via config","     * @method getDefaultConfig","     * @return {Object|null} an object representing keys that can be overridden via","     *  the istanbul configuration where the values are the defaults used when","     *  not specified. A null return implies no config attributes","     */","    getDefaultConfig: function () {","        return null;","    },","    /**","     * writes the report for a set of coverage objects added to a collector.","     * @method writeReport","     * @param {Collector} collector the collector for getting the set of files and coverage","     * @param {Boolean} sync true if reports must be written synchronously, false if they can be written using asynchronous means (e.g. stream.write)","     */","    writeReport: function (/* collector, sync */) {","        throw new Error('writeReport: must be overridden');","    }","};","","Object.keys(proto).forEach(function (k) {","    Report.prototype[k] = proto[k];","});","","module.exports = Report;","","",""],"l":{"6":1,"37":1,"38":0,"41":1,"44":1,"68":1,"75":0,"85":0,"94":0,"98":1,"99":3,"102":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/meta.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/meta.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":99}},"2":{"start":{"line":9,"column":0},"end":{"line":12,"column":2}}},"branchMap":{},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","var path = require('path'),","    fs = require('fs'),","    pkg = JSON.parse(fs.readFileSync(path.resolve(__dirname, '..', '..', 'package.json'), 'utf8'));","","module.exports = {","    NAME: pkg.name,","    VERSION: pkg.version","};","",""],"l":{"5":1,"9":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/register-plugins.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/register-plugins.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":8,"column":35}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":16}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":17}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":18}}},"branchMap":{},"code":["","/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","var Store = require('./store'),","    Report = require('./report'),","    Command = require('./command');","","Store.loadAll();","Report.loadAll();","Command.loadAll();","","","",""],"l":{"6":1,"10":1,"11":1,"12":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"Command","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":19}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":26}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":10},"end":{"line":18,"column":22}}},"4":{"name":"(anonymous_4)","line":21,"loc":{"start":{"line":21,"column":54},"end":{"line":21,"column":66}},"skip":true},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":51},"end":{"line":24,"column":63}},"skip":true},"6":{"name":"(anonymous_6)","line":27,"loc":{"start":{"line":27,"column":53},"end":{"line":27,"column":79}},"skip":true}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":7,"column":54}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":21}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"4":{"start":{"line":13,"column":0},"end":{"line":30,"column":2}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":44}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":37}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":101},"skip":true},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":100},"skip":true},"9":{"start":{"line":28,"column":8},"end":{"line":28,"column":98},"skip":true},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":25}}},"branchMap":{},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var Factory = require('../util/factory'),","    factory = new Factory('command', __dirname, true);","","function Command() {}","// add register, create, mix, loadAll, getCommandList, resolveCommandName to the Command object","factory.bindClassMethods(Command);","","Command.prototype = {","    toolName: function () {","        return require('../util/meta').NAME;","    },","","    type: function () {","        return this.constructor.TYPE;","    },","    synopsis: /* istanbul ignore next: base method */ function () {","        return \"the developer has not written a one-line summary of the \" + this.type() + \" command\";","    },","    usage: /* istanbul ignore next: base method */ function () {","        console.error(\"the developer has not provided a usage for the \" + this.type() + \" command\");","    },","    run: /* istanbul ignore next: abstract method */ function (args, callback) {","        return callback(new Error(\"run: must be overridden for the \" + this.type() + \" command\"));","    }","};","","module.exports = Command;","",""],"l":{"6":1,"9":1,"11":1,"13":1,"15":0,"19":0,"22":1,"25":1,"28":1,"32":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/store/fslookup.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/store/fslookup.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"LookupStore","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":27}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":10},"end":{"line":36,"column":22}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":9},"end":{"line":39,"column":24}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":12},"end":{"line":42,"column":27}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":9},"end":{"line":51,"column":40}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":8,"column":31}},"2":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"3":{"start":{"line":29,"column":4},"end":{"line":29,"column":27}},"4":{"start":{"line":32,"column":0},"end":{"line":32,"column":30}},"5":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}},"6":{"start":{"line":35,"column":0},"end":{"line":57,"column":3}},"7":{"start":{"line":37,"column":8},"end":{"line":37,"column":18}},"8":{"start":{"line":40,"column":8},"end":{"line":40,"column":44}},"9":{"start":{"line":43,"column":8},"end":{"line":43,"column":18}},"10":{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},"11":{"start":{"line":45,"column":12},"end":{"line":45,"column":37}},"12":{"start":{"line":46,"column":12},"end":{"line":46,"column":34}},"13":{"start":{"line":48,"column":12},"end":{"line":48,"column":25}},"14":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"15":{"start":{"line":53,"column":12},"end":{"line":53,"column":111}},"16":{"start":{"line":55,"column":8},"end":{"line":55,"column":19}},"17":{"start":{"line":60,"column":0},"end":{"line":60,"column":29}}},"branchMap":{"1":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var util = require('util'),","    fs = require('fs'),","    Store = require('./index');","","/**"," * a `Store` implementation that doesn't actually store anything. It assumes that keys"," * are absolute file paths, and contents are contents of those files."," * Thus, `set` for this store is no-op, `get` returns the"," * contents of the filename that the key represents, `hasKey` returns true if the key"," * supplied is a valid file path and `keys` always returns an empty array."," *"," * Usage"," * -----"," *"," *      var store = require('istanbul').Store.create('fslookup');"," *"," *"," * @class LookupStore"," * @extends Store"," * @module store"," * @constructor"," */","function LookupStore(opts) {","    Store.call(this, opts);","}","","LookupStore.TYPE = 'fslookup';","util.inherits(LookupStore, Store);","","Store.mix(LookupStore, {","    keys: function () {","        return [];","    },","    get: function (key) {","        return fs.readFileSync(key, 'utf8');","    },","    hasKey: function (key) {","        var stats;","        try {","            stats = fs.statSync(key);","            return stats.isFile();","        } catch (ex) {","            return false;","        }","    },","    set: function (key /*, contents */) {","        if (!this.hasKey(key)) {","            throw new Error('Attempt to set contents for non-existent file [' + key + '] on a fslookup store');","        }","        return key;","    }","});","","","module.exports = LookupStore;","",""],"l":{"6":1,"28":1,"29":0,"32":1,"33":1,"35":1,"37":0,"40":0,"43":0,"44":0,"45":0,"46":0,"48":0,"52":0,"53":0,"55":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/store/memory.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/store/memory.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"MemoryStore","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":23}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":9},"end":{"line":32,"column":34}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":24}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":27}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":10},"end":{"line":47,"column":22}}},"6":{"name":"(anonymous_6)","line":51,"loc":{"start":{"line":51,"column":13},"end":{"line":51,"column":25}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":7,"column":31}},"2":{"start":{"line":23,"column":0},"end":{"line":26,"column":1}},"3":{"start":{"line":24,"column":4},"end":{"line":24,"column":21}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":18}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":28}},"6":{"start":{"line":29,"column":0},"end":{"line":29,"column":34}},"7":{"start":{"line":31,"column":0},"end":{"line":54,"column":3}},"8":{"start":{"line":33,"column":8},"end":{"line":33,"column":33}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"10":{"start":{"line":38,"column":12},"end":{"line":38,"column":70}},"11":{"start":{"line":40,"column":8},"end":{"line":40,"column":29}},"12":{"start":{"line":44,"column":8},"end":{"line":44,"column":44}},"13":{"start":{"line":48,"column":8},"end":{"line":48,"column":37}},"14":{"start":{"line":52,"column":8},"end":{"line":52,"column":22}},"15":{"start":{"line":56,"column":0},"end":{"line":56,"column":29}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var util = require('util'),","    Store = require('./index');","","/**"," * a `Store` implementation using an in-memory object."," *"," * Usage"," * -----"," *"," *      var store = require('istanbul').Store.create('memory');"," *"," *"," * @class MemoryStore"," * @extends Store"," * @module store"," * @constructor"," */","function MemoryStore() {","    Store.call(this);","    this.map = {};","}","","MemoryStore.TYPE = 'memory';","util.inherits(MemoryStore, Store);","","Store.mix(MemoryStore, {","    set: function (key, contents) {","        this.map[key] = contents;","    },","","    get: function (key) {","        if (!this.hasKey(key)) {","            throw new Error('Unable to find entry for [' + key + ']');","        }","        return this.map[key];","    },","","    hasKey: function (key) {","        return this.map.hasOwnProperty(key);","    },","","    keys: function () {","        return Object.keys(this.map);","    },","","    dispose: function () {","        this.map = {};","    }","});","","module.exports = MemoryStore;",""],"l":{"6":1,"23":1,"24":0,"25":0,"28":1,"29":1,"31":1,"33":0,"37":0,"38":0,"40":0,"44":0,"48":0,"52":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/store/tmp.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/store/tmp.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"makeTempDir","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":23}}},"2":{"name":"TmpStore","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":24}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":25},"end":{"line":47,"column":37}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":9},"end":{"line":52,"column":34}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":9},"end":{"line":58,"column":24}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":12},"end":{"line":64,"column":27}}},"7":{"name":"(anonymous_7)","line":68,"loc":{"start":{"line":68,"column":10},"end":{"line":68,"column":22}}},"8":{"name":"(anonymous_8)","line":72,"loc":{"start":{"line":72,"column":13},"end":{"line":72,"column":25}}},"9":{"name":"(anonymous_9)","line":74,"loc":{"start":{"line":74,"column":33},"end":{"line":74,"column":48}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":11,"column":31}},"2":{"start":{"line":13,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":138}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":21}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":15}},"6":{"start":{"line":35,"column":0},"end":{"line":41,"column":1}},"7":{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":41}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":18}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":17}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":51}},"12":{"start":{"line":43,"column":0},"end":{"line":43,"column":22}},"13":{"start":{"line":44,"column":0},"end":{"line":44,"column":31}},"14":{"start":{"line":46,"column":0},"end":{"line":79,"column":3}},"15":{"start":{"line":48,"column":8},"end":{"line":48,"column":22}},"16":{"start":{"line":49,"column":8},"end":{"line":49,"column":68}},"17":{"start":{"line":53,"column":8},"end":{"line":53,"column":49}},"18":{"start":{"line":54,"column":8},"end":{"line":54,"column":52}},"19":{"start":{"line":55,"column":8},"end":{"line":55,"column":32}},"20":{"start":{"line":59,"column":8},"end":{"line":59,"column":36}},"21":{"start":{"line":60,"column":8},"end":{"line":60,"column":92}},"22":{"start":{"line":60,"column":24},"end":{"line":60,"column":90}},"23":{"start":{"line":61,"column":8},"end":{"line":61,"column":48}},"24":{"start":{"line":65,"column":8},"end":{"line":65,"column":31}},"25":{"start":{"line":69,"column":8},"end":{"line":69,"column":37}},"26":{"start":{"line":73,"column":8},"end":{"line":73,"column":27}},"27":{"start":{"line":74,"column":8},"end":{"line":76,"column":11}},"28":{"start":{"line":75,"column":12},"end":{"line":75,"column":36}},"29":{"start":{"line":77,"column":8},"end":{"line":77,"column":22}},"30":{"start":{"line":81,"column":0},"end":{"line":81,"column":26}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":36},"end":{"line":14,"column":47}},{"start":{"line":14,"column":78},"end":{"line":14,"column":106},"skip":true}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":78},"end":{"line":14,"column":96},"skip":true},{"start":{"line":14,"column":100},"end":{"line":14,"column":106},"skip":true}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":15}},{"start":{"line":36,"column":19},"end":{"line":36,"column":21}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":15},"end":{"line":37,"column":23}},{"start":{"line":37,"column":27},"end":{"line":37,"column":40}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var util = require('util'),","    path = require('path'),","    os = require('os'),","    fs = require('fs'),","    mkdirp = require('mkdirp'),","    Store = require('./index');","","function makeTempDir() {","    var dir = path.join(os.tmpdir ? os.tmpdir() : /* istanbul ignore next */ (process.env.TMPDIR || '/tmp'), 'ts' + new Date().getTime());","    mkdirp.sync(dir);","    return dir;","}","/**"," * a `Store` implementation using temporary files."," *"," * Usage"," * -----"," *"," *      var store = require('istanbul').Store.create('tmp');"," *"," *"," * @class TmpStore"," * @extends Store"," * @module store"," * @param {Object} opts Optional."," * @param {String} [opts.tmp] a pre-existing directory to use as the `tmp` directory. When not specified, a random directory"," *      is created under `os.tmpdir()`"," * @constructor"," */","function TmpStore(opts) {","    opts = opts || {};","    this.tmp = opts.tmp || makeTempDir();","    this.map = {};","    this.seq = 0;","    this.prefix = 't' + new Date().getTime() + '-';","}","","TmpStore.TYPE = 'tmp';","util.inherits(TmpStore, Store);","","Store.mix(TmpStore, {","    generateTmpFileName: function () {","        this.seq += 1;","        return path.join(this.tmp, this.prefix + this.seq + '.tmp');","    },","","    set: function (key, contents) {","        var tmpFile = this.generateTmpFileName();","        fs.writeFileSync(tmpFile, contents, 'utf8');","        this.map[key] = tmpFile;","    },","","    get: function (key) {","        var tmpFile = this.map[key];","        if (!tmpFile) { throw new Error('Unable to find tmp entry for [' + tmpFile + ']'); }","        return fs.readFileSync(tmpFile, 'utf8');","    },","","    hasKey: function (key) {","        return !!this.map[key];","    },","","    keys: function () {","        return Object.keys(this.map);","    },","","    dispose: function () {","        var map = this.map;","        Object.keys(map).forEach(function (key) {","            fs.unlinkSync(map[key]);","        });","        this.map = {};","    }","});","","module.exports = TmpStore;",""],"l":{"6":1,"13":1,"14":0,"15":0,"16":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"43":1,"44":1,"46":1,"48":0,"49":0,"53":0,"54":0,"55":0,"59":0,"60":0,"61":0,"65":0,"69":0,"73":0,"74":0,"75":0,"77":0,"81":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/clover.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/clover.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"CloverReport","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":28}}},"2":{"name":"asJavaPackage","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":29}}},"3":{"name":"asClassName","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":27}}},"4":{"name":"quote","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":22}}},"5":{"name":"attr","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":20}}},"6":{"name":"branchCoverageByLine","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":44}}},"7":{"name":"(anonymous_7)","line":60,"loc":{"start":{"line":60,"column":35},"end":{"line":60,"column":48}}},"8":{"name":"(anonymous_8)","line":66,"loc":{"start":{"line":66,"column":29},"end":{"line":66,"column":42}}},"9":{"name":"(anonymous_9)","line":68,"loc":{"start":{"line":68,"column":39},"end":{"line":68,"column":55}}},"10":{"name":"addClassStats","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":51}}},"11":{"name":"(anonymous_11)","line":99,"loc":{"start":{"line":99,"column":31},"end":{"line":99,"column":44}}},"12":{"name":"walk","line":118,"loc":{"start":{"line":118,"column":0},"end":{"line":118,"column":59}}},"13":{"name":"(anonymous_13)","line":136,"loc":{"start":{"line":136,"column":29},"end":{"line":136,"column":46}}},"14":{"name":"(anonymous_14)","line":137,"loc":{"start":{"line":137,"column":20},"end":{"line":137,"column":37}}},"15":{"name":"(anonymous_15)","line":139,"loc":{"start":{"line":139,"column":38},"end":{"line":139,"column":55}}},"16":{"name":"(anonymous_16)","line":140,"loc":{"start":{"line":140,"column":28},"end":{"line":140,"column":45}}},"17":{"name":"(anonymous_17)","line":141,"loc":{"start":{"line":141,"column":91},"end":{"line":141,"column":103}}},"18":{"name":"(anonymous_18)","line":181,"loc":{"start":{"line":181,"column":29},"end":{"line":181,"column":46}}},"19":{"name":"(anonymous_19)","line":182,"loc":{"start":{"line":182,"column":20},"end":{"line":182,"column":37}}},"20":{"name":"(anonymous_20)","line":187,"loc":{"start":{"line":187,"column":25},"end":{"line":187,"column":42}}},"21":{"name":"(anonymous_21)","line":188,"loc":{"start":{"line":188,"column":16},"end":{"line":188,"column":33}}},"22":{"name":"(anonymous_22)","line":199,"loc":{"start":{"line":199,"column":14},"end":{"line":199,"column":26}}},"23":{"name":"(anonymous_23)","line":202,"loc":{"start":{"line":202,"column":22},"end":{"line":202,"column":34}}},"24":{"name":"(anonymous_24)","line":205,"loc":{"start":{"line":205,"column":17},"end":{"line":205,"column":44}}},"25":{"name":"(anonymous_25)","line":214,"loc":{"start":{"line":214,"column":34},"end":{"line":214,"column":49}}},"26":{"name":"(anonymous_26)","line":219,"loc":{"start":{"line":219,"column":26},"end":{"line":219,"column":38}}},"27":{"name":"(anonymous_27)","line":220,"loc":{"start":{"line":220,"column":37},"end":{"line":220,"column":62}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":6,"column":39}},"2":{"start":{"line":24,"column":0},"end":{"line":31,"column":1}},"3":{"start":{"line":25,"column":4},"end":{"line":25,"column":22}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":22}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":37}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":44}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":58}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":21}},"9":{"start":{"line":33,"column":0},"end":{"line":33,"column":29}},"10":{"start":{"line":34,"column":0},"end":{"line":34,"column":36}},"11":{"start":{"line":36,"column":0},"end":{"line":41,"column":1}},"12":{"start":{"line":37,"column":4},"end":{"line":40,"column":27}},"13":{"start":{"line":43,"column":0},"end":{"line":46,"column":1}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":51}},"15":{"start":{"line":48,"column":0},"end":{"line":50,"column":1}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":29}},"17":{"start":{"line":52,"column":0},"end":{"line":54,"column":1}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":42}},"19":{"start":{"line":56,"column":0},"end":{"line":73,"column":1}},"20":{"start":{"line":57,"column":4},"end":{"line":59,"column":17}},"21":{"start":{"line":60,"column":4},"end":{"line":65,"column":7}},"22":{"start":{"line":61,"column":8},"end":{"line":62,"column":37}},"23":{"start":{"line":63,"column":8},"end":{"line":63,"column":36}},"24":{"start":{"line":64,"column":8},"end":{"line":64,"column":52}},"25":{"start":{"line":66,"column":4},"end":{"line":71,"column":7}},"26":{"start":{"line":67,"column":8},"end":{"line":69,"column":63}},"27":{"start":{"line":68,"column":57},"end":{"line":68,"column":73}},"28":{"start":{"line":70,"column":8},"end":{"line":70,"column":90}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":15}},"30":{"start":{"line":75,"column":0},"end":{"line":116,"column":1}},"31":{"start":{"line":76,"column":4},"end":{"line":76,"column":62}},"32":{"start":{"line":78,"column":4},"end":{"line":81,"column":14}},"33":{"start":{"line":83,"column":4},"end":{"line":86,"column":13}},"34":{"start":{"line":88,"column":4},"end":{"line":95,"column":14}},"35":{"start":{"line":97,"column":4},"end":{"line":97,"column":31}},"36":{"start":{"line":98,"column":4},"end":{"line":98,"column":27}},"37":{"start":{"line":99,"column":4},"end":{"line":113,"column":7}},"38":{"start":{"line":100,"column":8},"end":{"line":103,"column":43}},"39":{"start":{"line":105,"column":8},"end":{"line":111,"column":9}},"40":{"start":{"line":106,"column":12},"end":{"line":106,"column":35}},"41":{"start":{"line":108,"column":16},"end":{"line":110,"column":80}},"42":{"start":{"line":112,"column":8},"end":{"line":112,"column":35}},"43":{"start":{"line":115,"column":4},"end":{"line":115,"column":36}},"44":{"start":{"line":118,"column":0},"end":{"line":196,"column":1}},"45":{"start":{"line":119,"column":4},"end":{"line":123,"column":22}},"46":{"start":{"line":124,"column":4},"end":{"line":165,"column":5}},"47":{"start":{"line":125,"column":8},"end":{"line":125,"column":31}},"48":{"start":{"line":126,"column":8},"end":{"line":126,"column":65}},"49":{"start":{"line":127,"column":8},"end":{"line":129,"column":31}},"50":{"start":{"line":131,"column":8},"end":{"line":134,"column":17}},"51":{"start":{"line":136,"column":8},"end":{"line":147,"column":11}},"52":{"start":{"line":136,"column":48},"end":{"line":136,"column":76}},"53":{"start":{"line":138,"column":16},"end":{"line":138,"column":35}},"54":{"start":{"line":139,"column":16},"end":{"line":146,"column":19}},"55":{"start":{"line":139,"column":57},"end":{"line":139,"column":85}},"56":{"start":{"line":141,"column":24},"end":{"line":143,"column":27}},"57":{"start":{"line":142,"column":28},"end":{"line":142,"column":42}},"58":{"start":{"line":144,"column":24},"end":{"line":144,"column":56}},"59":{"start":{"line":145,"column":24},"end":{"line":145,"column":40}},"60":{"start":{"line":149,"column":8},"end":{"line":164,"column":18}},"61":{"start":{"line":166,"column":4},"end":{"line":186,"column":5}},"62":{"start":{"line":167,"column":8},"end":{"line":167,"column":38}},"63":{"start":{"line":168,"column":8},"end":{"line":170,"column":17}},"64":{"start":{"line":172,"column":8},"end":{"line":179,"column":18}},"65":{"start":{"line":181,"column":8},"end":{"line":184,"column":15}},"66":{"start":{"line":181,"column":48},"end":{"line":181,"column":76}},"67":{"start":{"line":183,"column":16},"end":{"line":183,"column":90}},"68":{"start":{"line":185,"column":8},"end":{"line":185,"column":41}},"69":{"start":{"line":187,"column":4},"end":{"line":190,"column":11}},"70":{"start":{"line":187,"column":44},"end":{"line":187,"column":72}},"71":{"start":{"line":189,"column":12},"end":{"line":189,"column":67}},"72":{"start":{"line":192,"column":4},"end":{"line":195,"column":5}},"73":{"start":{"line":193,"column":8},"end":{"line":193,"column":39}},"74":{"start":{"line":194,"column":8},"end":{"line":194,"column":38}},"75":{"start":{"line":198,"column":0},"end":{"line":225,"column":3}},"76":{"start":{"line":200,"column":8},"end":{"line":200,"column":77}},"77":{"start":{"line":203,"column":8},"end":{"line":203,"column":38}},"78":{"start":{"line":206,"column":8},"end":{"line":212,"column":17}},"79":{"start":{"line":214,"column":8},"end":{"line":216,"column":11}},"80":{"start":{"line":215,"column":12},"end":{"line":215,"column":112}},"81":{"start":{"line":217,"column":8},"end":{"line":217,"column":43}},"82":{"start":{"line":218,"column":8},"end":{"line":218,"column":25}},"83":{"start":{"line":219,"column":8},"end":{"line":219,"column":62}},"84":{"start":{"line":219,"column":40},"end":{"line":219,"column":58}},"85":{"start":{"line":220,"column":8},"end":{"line":223,"column":11}},"86":{"start":{"line":221,"column":12},"end":{"line":221,"column":65}},"87":{"start":{"line":222,"column":12},"end":{"line":222,"column":26}},"88":{"start":{"line":227,"column":0},"end":{"line":227,"column":30}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":11},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":21}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":15},"end":{"line":28,"column":23}},{"start":{"line":28,"column":27},"end":{"line":28,"column":43}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":16},"end":{"line":29,"column":25}},{"start":{"line":29,"column":29},"end":{"line":29,"column":57}}]},"4":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":20},"end":{"line":63,"column":29}},{"start":{"line":63,"column":33},"end":{"line":63,"column":35}}]},"5":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"6":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"7":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"8":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"9":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":21},"end":{"line":208,"column":37}},{"start":{"line":208,"column":41},"end":{"line":208,"column":61}}]}},"code":["var path = require('path'),","    util = require('util'),","    Report = require('./index'),","    FileWriter = require('../util/file-writer'),","    TreeSummarizer = require('../util/tree-summarizer'),","    utils = require('../object-utils');","","/**"," * a `Report` implementation that produces a clover-style XML file."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('clover');"," *"," * @class CloverReport"," * @module report"," * @extends Report"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.dir] the directory in which to the clover.xml will be written"," * @param {String} [opts.file] the file name, defaulted to config attribute or 'clover.xml'"," */","function CloverReport(opts) {","    Report.call(this);","    opts = opts || {};","    this.projectRoot = process.cwd();","    this.dir = opts.dir || this.projectRoot;","    this.file = opts.file || this.getDefaultConfig().file;","    this.opts = opts;","}","","CloverReport.TYPE = 'clover';","util.inherits(CloverReport, Report);","","function asJavaPackage(node) {","    return node.displayShortName().","        replace(/\\//g, '.').","        replace(/\\\\/g, '.').","        replace(/\\.$/, '');","}","","function asClassName(node) {","    /*jslint regexp: true */","    return node.fullPath().replace(/.*[\\\\\\/]/, '');","}","","function quote(thing) {","    return '\"' + thing + '\"';","}","","function attr(n, v) {","    return ' ' + n + '=' + quote(v) + ' ';","}","","function branchCoverageByLine(fileCoverage) {","    var branchMap = fileCoverage.branchMap,","        branches = fileCoverage.b,","        ret = {};","    Object.keys(branchMap).forEach(function (k) {","        var line = branchMap[k].line,","            branchData = branches[k];","        ret[line] = ret[line] || [];","        ret[line].push.apply(ret[line], branchData);","    });","    Object.keys(ret).forEach(function (k) {","        var dataArray = ret[k],","            covered = dataArray.filter(function (item) { return item > 0; }),","            coverage = covered.length / dataArray.length * 100;","        ret[k] = { covered: covered.length, total: dataArray.length, coverage: coverage };","    });","    return ret;","}","","function addClassStats(node, fileCoverage, writer) {","    fileCoverage = utils.incrementIgnoredTotals(fileCoverage);","","    var metrics = node.metrics,","        branchByLine = branchCoverageByLine(fileCoverage),","        fnMap,","        lines;","","    writer.println('\\t\\t\\t<file' +","        attr('name', asClassName(node)) +","        attr('path', node.fullPath()) +","        '>');","","    writer.println('\\t\\t\\t\\t<metrics' +","        attr('statements', metrics.lines.total) +","        attr('coveredstatements', metrics.lines.covered) +","        attr('conditionals', metrics.branches.total) +","        attr('coveredconditionals', metrics.branches.covered) +","        attr('methods', metrics.functions.total) +","        attr('coveredmethods', metrics.functions.covered) +","        '/>');","","    fnMap = fileCoverage.fnMap;","    lines = fileCoverage.l;","    Object.keys(lines).forEach(function (k) {","        var str = '\\t\\t\\t\\t<line' +","            attr('num', k) +","            attr('count', lines[k]),","            branchDetail = branchByLine[k];","","        if (!branchDetail) {","            str += ' type=\"stmt\" ';","        } else {","                str += ' type=\"cond\" ' +","                attr('truecount', branchDetail.covered) +","                attr('falsecount', (branchDetail.total - branchDetail.covered));","        }","        writer.println(str + '/>');","    });","","    writer.println('\\t\\t\\t</file>');","}","","function walk(node, collector, writer, level, projectRoot) {","    var metrics,","        totalFiles = 0,","        totalPackages = 0,","        totalLines = 0,","        tempLines = 0;","    if (level === 0) {","        metrics = node.metrics;","        writer.println('<?xml version=\"1.0\" encoding=\"UTF-8\"?>');","        writer.println('<coverage' +","            attr('generated', Date.now()) +","            'clover=\"3.2.0\">');","","        writer.println('\\t<project' +","            attr('timestamp', Date.now()) +","            attr('name', 'All Files') +","            '>');","","        node.children.filter(function (child) { return child.kind === 'dir'; }).","            forEach(function (child) {","                totalPackages += 1;","                child.children.filter(function (child) { return child.kind !== 'dir'; }).","                    forEach(function (child) {","                        Object.keys(collector.fileCoverageFor(child.fullPath()).l).forEach(function (k){","                            tempLines = k;","                        });","                        totalLines += Number(tempLines);","                        totalFiles += 1;","                });","        });","","        writer.println('\\t\\t<metrics' +","            attr('statements', metrics.lines.total) +","            attr('coveredstatements', metrics.lines.covered) +","            attr('conditionals', metrics.branches.total) +","            attr('coveredconditionals', metrics.branches.covered) +","            attr('methods', metrics.functions.total) +","            attr('coveredmethods', metrics.functions.covered) +","            attr('elements', metrics.lines.total + metrics.branches.total + metrics.functions.total) +","            attr('coveredelements', metrics.lines.covered + metrics.branches.covered + metrics.functions.covered) +","            attr('complexity', 0) +","            attr('packages', totalPackages) +","            attr('files', totalFiles) +","            attr('classes', totalFiles) +","            attr('loc', totalLines) +","            attr('ncloc', totalLines) +","            '/>');","    }","    if (node.packageMetrics) {","        metrics = node.packageMetrics;","        writer.println('\\t\\t<package' +","            attr('name', asJavaPackage(node)) +","            '>');","","        writer.println('\\t\\t\\t<metrics' +","            attr('statements', metrics.lines.total) +","            attr('coveredstatements', metrics.lines.covered) +","            attr('conditionals', metrics.branches.total) +","            attr('coveredconditionals', metrics.branches.covered) +","            attr('methods', metrics.functions.total) +","            attr('coveredmethods', metrics.functions.covered) +","            '/>');","","        node.children.filter(function (child) { return child.kind !== 'dir'; }).","            forEach(function (child) {","                addClassStats(child, collector.fileCoverageFor(child.fullPath()), writer);","            });","        writer.println('\\t\\t</package>');","    }","    node.children.filter(function (child) { return child.kind === 'dir'; }).","        forEach(function (child) {","            walk(child, collector, writer, level + 1, projectRoot);","        });","","    if (level === 0) {","        writer.println('\\t</project>');","        writer.println('</coverage>');","    }","}","","Report.mix(CloverReport, {","    synopsis: function () {","        return 'XML coverage report that can be consumed by the clover tool';","    },","    getDefaultConfig: function () {","        return { file: 'clover.xml' };","    },","    writeReport: function (collector, sync) {","        var summarizer = new TreeSummarizer(),","            outputFile = path.join(this.dir, this.file),","            writer = this.opts.writer || new FileWriter(sync),","            projectRoot = this.projectRoot,","            that = this,","            tree,","            root;","","        collector.files().forEach(function (key) {","            summarizer.addFileCoverageSummary(key, utils.summarizeFileCoverage(collector.fileCoverageFor(key)));","        });","        tree = summarizer.getTreeSummary();","        root = tree.root;","        writer.on('done', function () { that.emit('done'); });","        writer.writeFile(outputFile, function (contentWriter) {","            walk(root, collector, contentWriter, 0, projectRoot);","            writer.done();","        });","    }","});","","module.exports = CloverReport;",""],"l":{"1":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"33":1,"34":1,"36":1,"37":0,"43":1,"45":0,"48":1,"49":0,"52":1,"53":0,"56":1,"57":0,"60":0,"61":0,"63":0,"64":0,"66":0,"67":0,"68":0,"70":0,"72":0,"75":1,"76":0,"78":0,"83":0,"88":0,"97":0,"98":0,"99":0,"100":0,"105":0,"106":0,"108":0,"112":0,"115":0,"118":1,"119":0,"124":0,"125":0,"126":0,"127":0,"131":0,"136":0,"138":0,"139":0,"141":0,"142":0,"144":0,"145":0,"149":0,"166":0,"167":0,"168":0,"172":0,"181":0,"183":0,"185":0,"187":0,"189":0,"192":0,"193":0,"194":0,"198":1,"200":0,"203":0,"206":0,"214":0,"215":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"227":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/file-writer.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/file-writer.js","s":{"1":1,"2":1,"3":5,"4":12,"5":1,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":1,"16":1,"17":0,"18":1,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":1,"62":0,"63":0,"64":0,"65":0,"66":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":5,"2":12,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"extend","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":31},"end":{"line":16,"column":44}}},"3":{"name":"BufferedContentWriter","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":11},"end":{"line":28,"column":26}}},"5":{"name":"(anonymous_5)","line":31,"loc":{"start":{"line":31,"column":16},"end":{"line":31,"column":28}}},"6":{"name":"StreamContentWriter","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":37}}},"7":{"name":"(anonymous_7)","line":43,"loc":{"start":{"line":43,"column":11},"end":{"line":43,"column":26}}},"8":{"name":"SyncFileWriter","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":26}}},"9":{"name":"(anonymous_9)","line":54,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":41}}},"10":{"name":"(anonymous_10)","line":60,"loc":{"start":{"line":60,"column":10},"end":{"line":60,"column":22}}},"11":{"name":"AsyncFileWriter","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":27}}},"12":{"name":"(anonymous_12)","line":73,"loc":{"start":{"line":73,"column":15},"end":{"line":73,"column":41}}},"13":{"name":"(anonymous_13)","line":77,"loc":{"start":{"line":77,"column":17},"end":{"line":77,"column":37}}},"14":{"name":"(anonymous_14)","line":86,"loc":{"start":{"line":86,"column":27},"end":{"line":86,"column":39}}},"15":{"name":"(anonymous_15)","line":91,"loc":{"start":{"line":91,"column":27},"end":{"line":91,"column":42}}},"16":{"name":"(anonymous_16)","line":96,"loc":{"start":{"line":96,"column":10},"end":{"line":96,"column":22}}},"17":{"name":"(anonymous_17)","line":100,"loc":{"start":{"line":100,"column":15},"end":{"line":100,"column":27}}},"18":{"name":"FileWriter","line":131,"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":26}}},"19":{"name":"(anonymous_19)","line":135,"loc":{"start":{"line":135,"column":30},"end":{"line":135,"column":45}}},"20":{"name":"(anonymous_20)","line":136,"loc":{"start":{"line":136,"column":29},"end":{"line":136,"column":41}}},"21":{"name":"(anonymous_21)","line":142,"loc":{"start":{"line":142,"column":14},"end":{"line":142,"column":38}}},"22":{"name":"(anonymous_22)","line":146,"loc":{"start":{"line":146,"column":15},"end":{"line":146,"column":41}}},"23":{"name":"(anonymous_23)","line":149,"loc":{"start":{"line":149,"column":10},"end":{"line":149,"column":22}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":13,"column":41}},"2":{"start":{"line":15,"column":0},"end":{"line":19,"column":1}},"3":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":37}},"5":{"start":{"line":21,"column":0},"end":{"line":24,"column":1}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":29}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":22}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":52}},"9":{"start":{"line":27,"column":0},"end":{"line":34,"column":3}},"10":{"start":{"line":29,"column":8},"end":{"line":29,"column":28}},"11":{"start":{"line":32,"column":8},"end":{"line":32,"column":28}},"12":{"start":{"line":36,"column":0},"end":{"line":39,"column":1}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":29}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":25}},"15":{"start":{"line":40,"column":0},"end":{"line":40,"column":50}},"16":{"start":{"line":42,"column":0},"end":{"line":46,"column":3}},"17":{"start":{"line":44,"column":8},"end":{"line":44,"column":31}},"18":{"start":{"line":48,"column":0},"end":{"line":50,"column":1}},"19":{"start":{"line":49,"column":4},"end":{"line":49,"column":22}},"20":{"start":{"line":51,"column":0},"end":{"line":51,"column":38}},"21":{"start":{"line":53,"column":0},"end":{"line":63,"column":3}},"22":{"start":{"line":55,"column":8},"end":{"line":55,"column":40}},"23":{"start":{"line":56,"column":8},"end":{"line":56,"column":45}},"24":{"start":{"line":57,"column":8},"end":{"line":57,"column":21}},"25":{"start":{"line":58,"column":8},"end":{"line":58,"column":56}},"26":{"start":{"line":61,"column":8},"end":{"line":61,"column":26}},"27":{"start":{"line":65,"column":0},"end":{"line":68,"column":1}},"28":{"start":{"line":66,"column":4},"end":{"line":66,"column":62}},"29":{"start":{"line":67,"column":4},"end":{"line":67,"column":26}},"30":{"start":{"line":70,"column":0},"end":{"line":70,"column":39}},"31":{"start":{"line":72,"column":0},"end":{"line":106,"column":3}},"32":{"start":{"line":74,"column":8},"end":{"line":74,"column":38}},"33":{"start":{"line":75,"column":8},"end":{"line":75,"column":60}},"34":{"start":{"line":78,"column":8},"end":{"line":82,"column":26}},"35":{"start":{"line":84,"column":8},"end":{"line":84,"column":40}},"36":{"start":{"line":85,"column":8},"end":{"line":85,"column":44}},"37":{"start":{"line":86,"column":8},"end":{"line":90,"column":11}},"38":{"start":{"line":87,"column":12},"end":{"line":87,"column":42}},"39":{"start":{"line":88,"column":12},"end":{"line":88,"column":17}},"40":{"start":{"line":89,"column":12},"end":{"line":89,"column":29}},"41":{"start":{"line":91,"column":8},"end":{"line":91,"column":72}},"42":{"start":{"line":91,"column":44},"end":{"line":91,"column":68}},"43":{"start":{"line":92,"column":8},"end":{"line":92,"column":56}},"44":{"start":{"line":93,"column":8},"end":{"line":93,"column":36}},"45":{"start":{"line":94,"column":8},"end":{"line":94,"column":21}},"46":{"start":{"line":97,"column":8},"end":{"line":97,"column":31}},"47":{"start":{"line":98,"column":8},"end":{"line":98,"column":25}},"48":{"start":{"line":101,"column":8},"end":{"line":101,"column":41}},"49":{"start":{"line":101,"column":32},"end":{"line":101,"column":39}},"50":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"51":{"start":{"line":103,"column":12},"end":{"line":103,"column":30}},"52":{"start":{"line":131,"column":0},"end":{"line":137,"column":1}},"53":{"start":{"line":132,"column":4},"end":{"line":132,"column":22}},"54":{"start":{"line":133,"column":4},"end":{"line":133,"column":20}},"55":{"start":{"line":134,"column":4},"end":{"line":134,"column":72}},"56":{"start":{"line":135,"column":4},"end":{"line":135,"column":75}},"57":{"start":{"line":135,"column":47},"end":{"line":135,"column":71}},"58":{"start":{"line":136,"column":4},"end":{"line":136,"column":65}},"59":{"start":{"line":136,"column":43},"end":{"line":136,"column":61}},"60":{"start":{"line":139,"column":0},"end":{"line":139,"column":34}},"61":{"start":{"line":141,"column":0},"end":{"line":152,"column":3}},"62":{"start":{"line":143,"column":8},"end":{"line":143,"column":40}},"63":{"start":{"line":144,"column":8},"end":{"line":144,"column":56}},"64":{"start":{"line":147,"column":8},"end":{"line":147,"column":48}},"65":{"start":{"line":150,"column":8},"end":{"line":150,"column":29}},"66":{"start":{"line":154,"column":0},"end":{"line":154,"column":28}}},"branchMap":{"1":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"2":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":8}},{"start":{"line":102,"column":8},"end":{"line":102,"column":8}}]},"3":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":27},"end":{"line":134,"column":47}},{"start":{"line":134,"column":50},"end":{"line":134,"column":71}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    util = require('util'),","    fs = require('fs'),","    async = require('async'),","    mkdirp = require('mkdirp'),","    writer = require('./writer'),","    Writer = writer.Writer,","    ContentWriter = writer.ContentWriter;","","function extend(cons, proto) {","    Object.keys(proto).forEach(function (k) {","        cons.prototype[k] = proto[k];","    });","}","","function BufferedContentWriter() {","    ContentWriter.call(this);","    this.content = '';","}","util.inherits(BufferedContentWriter, ContentWriter);","","extend(BufferedContentWriter, {","    write: function (str) {","        this.content += str;","    },","    getContent: function () {","        return this.content;","    }","});","","function StreamContentWriter(stream) {","    ContentWriter.call(this);","    this.stream = stream;","}","util.inherits(StreamContentWriter, ContentWriter);","","extend(StreamContentWriter, {","    write: function (str) {","        this.stream.write(str);","    }","});","","function SyncFileWriter() {","    Writer.call(this);","}","util.inherits(SyncFileWriter, Writer);","","extend(SyncFileWriter, {","    writeFile: function (file, callback) {","        mkdirp.sync(path.dirname(file));","        var cw = new BufferedContentWriter();","        callback(cw);","        fs.writeFileSync(file, cw.getContent(), 'utf8');","    },","    done: function () {","        this.emit('done'); //everything already done","    }","});","","function AsyncFileWriter() {","    this.queue = async.queue(this.processFile.bind(this), 20);","    this.openFileMap = {};","}","","util.inherits(AsyncFileWriter, Writer);","","extend(AsyncFileWriter, {","    writeFile: function (file, callback) {","        this.openFileMap[file] = true;","        this.queue.push({ file: file, callback: callback });","    },","    processFile: function (task, cb) {","        var file = task.file,","            userCallback = task.callback,","            that = this,","            stream,","            contentWriter;","","        mkdirp.sync(path.dirname(file));","        stream = fs.createWriteStream(file);","        stream.on('close', function () {","            delete that.openFileMap[file];","            cb();","            that.checkDone();","        });","        stream.on('error', function (err) { that.emit('error', err); });","        contentWriter = new StreamContentWriter(stream);","        userCallback(contentWriter);","        stream.end();","    },","    done: function () {","        this.doneCalled = true;","        this.checkDone();","    },","    checkDone: function () {","        if (!this.doneCalled) { return; }","        if (Object.keys(this.openFileMap).length === 0) {","            this.emit('done');","        }","    }","});","/**"," * a concrete writer implementation that can write files synchronously or"," * asynchronously based on the constructor argument passed to it."," *"," * Usage"," * -----"," *"," *      var sync = true,"," *          fileWriter = new require('istanbul').FileWriter(sync);"," *"," *      fileWriter.on('done', function () { console.log('done'); });"," *      fileWriter.copyFile('/foo/bar.jpg', '/baz/bar.jpg');"," *      fileWriter.writeFile('/foo/index.html', function (contentWriter) {"," *          contentWriter.println('<html>');"," *          contentWriter.println('</html>');"," *      });"," *      fileWriter.done(); // will emit the `done` event when all files are written"," *"," * @class FileWriter"," * @extends Writer"," * @module io"," * @param sync"," * @constructor"," */","function FileWriter(sync) {","    Writer.call(this);","    var that = this;","    this.delegate = sync ? new SyncFileWriter() : new AsyncFileWriter();","    this.delegate.on('error', function (err) { that.emit('error', err); });","    this.delegate.on('done', function () { that.emit('done'); });","}","","util.inherits(FileWriter, Writer);","","extend(FileWriter, {","    copyFile: function (source, dest) {","        mkdirp.sync(path.dirname(dest));","        fs.writeFileSync(dest, fs.readFileSync(source));","    },","    writeFile: function (file, callback) {","        this.delegate.writeFile(file, callback);","    },","    done: function () {","        this.delegate.done();","    }","});","","module.exports = FileWriter;"],"l":{"6":1,"15":1,"16":5,"17":12,"21":1,"22":0,"23":0,"25":1,"27":1,"29":0,"32":0,"36":1,"37":0,"38":0,"40":1,"42":1,"44":0,"48":1,"49":0,"51":1,"53":1,"55":0,"56":0,"57":0,"58":0,"61":0,"65":1,"66":0,"67":0,"70":1,"72":1,"74":0,"75":0,"78":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"91":0,"92":0,"93":0,"94":0,"97":0,"98":0,"101":0,"102":0,"103":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"139":1,"141":1,"143":0,"144":0,"147":0,"150":0,"154":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/writer.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/writer.js","s":{"1":1,"2":1,"3":1,"4":3,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1},"b":{},"f":{"1":1,"2":3,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"extend","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":31},"end":{"line":10,"column":44}}},"3":{"name":"ContentWriter","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":25}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":55},"end":{"line":32,"column":76}},"skip":true},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":13},"end":{"line":40,"column":28}}},"6":{"name":"Writer","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":18}}},"7":{"name":"(anonymous_7)","line":65,"loc":{"start":{"line":65,"column":59},"end":{"line":65,"column":91}},"skip":true},"8":{"name":"(anonymous_8)","line":74,"loc":{"start":{"line":74,"column":58},"end":{"line":74,"column":88}},"skip":true},"9":{"name":"(anonymous_9)","line":83,"loc":{"start":{"line":83,"column":54},"end":{"line":83,"column":66}},"skip":true}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":7,"column":50}},"2":{"start":{"line":9,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":10,"column":4},"end":{"line":12,"column":7}},"4":{"start":{"line":11,"column":8},"end":{"line":11,"column":37}},"5":{"start":{"line":23,"column":0},"end":{"line":24,"column":1}},"6":{"start":{"line":26,"column":0},"end":{"line":41,"column":2}},"7":{"start":{"line":33,"column":8},"end":{"line":33,"column":53},"skip":true},"8":{"start":{"line":40,"column":30},"end":{"line":40,"column":53}},"9":{"start":{"line":52,"column":0},"end":{"line":54,"column":1}},"10":{"start":{"line":53,"column":4},"end":{"line":53,"column":28}},"11":{"start":{"line":56,"column":0},"end":{"line":56,"column":36}},"12":{"start":{"line":58,"column":0},"end":{"line":86,"column":3}},"13":{"start":{"line":66,"column":8},"end":{"line":66,"column":57},"skip":true},"14":{"start":{"line":75,"column":8},"end":{"line":75,"column":56},"skip":true},"15":{"start":{"line":84,"column":8},"end":{"line":84,"column":52},"skip":true},"16":{"start":{"line":88,"column":0},"end":{"line":91,"column":2}}},"branchMap":{},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var util = require('util'),","    EventEmitter = require('events').EventEmitter;","","function extend(cons, proto) {","    Object.keys(proto).forEach(function (k) {","        cons.prototype[k] = proto[k];","    });","}","","/**"," * abstract interfaces for writing content"," * @class ContentWriter"," * @module io"," * @main io"," * @constructor"," */","//abstract interface for writing content","function ContentWriter() {","}","","ContentWriter.prototype = {","    /**","     * writes the specified string as-is","     * @method write","     * @param {String} str the string to write","     */","    write: /* istanbul ignore next: abstract method */ function (/* str */) {","        throw new Error('write: must be overridden');","    },","    /**","     * writes the specified string with a newline at the end","     * @method println","     * @param {String} str the string to write","     */","    println: function (str) { this.write(str + '\\n'); }","};","","/**"," * abstract interface for writing files and assets. The caller is expected to"," * call `done` on the writer after it has finished writing all the required"," * files. The writer is an event-emitter that emits a `done` event when `done`"," * is called on it *and* all files have successfully been written."," *"," * @class Writer"," * @constructor"," */","function Writer() {","    EventEmitter.call(this);","}","","util.inherits(Writer, EventEmitter);","","extend(Writer, {","    /**","     * allows writing content to a file using a callback that is passed a content writer","     * @method writeFile","     * @param {String} file the name of the file to write","     * @param {Function} callback the callback that is called as `callback(contentWriter)`","     */","    writeFile: /* istanbul ignore next: abstract method */ function (/* file, callback */) {","        throw new Error('writeFile: must be overridden');","    },","    /**","     * copies a file from source to destination","     * @method copyFile","     * @param {String} source the file to copy, found on the file system","     * @param {String} dest the destination path","     */","    copyFile: /* istanbul ignore next: abstract method */ function (/* source, dest */) {","        throw new Error('copyFile: must be overridden');","    },","    /**","     * marker method to indicate that the caller is done with this writer object","     * The writer is expected to emit a `done` event only after this method is called","     * and it is truly done.","     * @method done","     */","    done: /* istanbul ignore next: abstract method */ function () {","        throw new Error('done: must be overridden');","    }","});","","module.exports = {","    Writer: Writer,","    ContentWriter: ContentWriter","};","",""],"l":{"6":1,"9":1,"10":1,"11":3,"23":1,"26":1,"33":1,"40":0,"52":1,"53":0,"56":1,"58":1,"66":1,"75":1,"84":1,"88":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/tree-summarizer.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/tree-summarizer.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":1,"107":0,"108":0,"109":0,"110":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"fnMap":{"1":{"name":"commonArrayPrefix","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}}},"2":{"name":"findCommonArrayPrefix","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":29},"end":{"line":29,"column":44}}},"4":{"name":"Node","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":39}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":22},"end":{"line":49,"column":34}}},"6":{"name":"(anonymous_6)","line":52,"loc":{"start":{"line":52,"column":14},"end":{"line":52,"column":26}}},"7":{"name":"(anonymous_7)","line":55,"loc":{"start":{"line":55,"column":14},"end":{"line":55,"column":31}}},"8":{"name":"(anonymous_8)","line":59,"loc":{"start":{"line":59,"column":12},"end":{"line":59,"column":24}}},"9":{"name":"(anonymous_9)","line":67,"loc":{"start":{"line":67,"column":40},"end":{"line":67,"column":56}}},"10":{"name":"TreeSummary","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":47}}},"11":{"name":"(anonymous_11)","line":78,"loc":{"start":{"line":78,"column":13},"end":{"line":78,"column":34}}},"12":{"name":"(anonymous_12)","line":81,"loc":{"start":{"line":81,"column":19},"end":{"line":81,"column":54}}},"13":{"name":"(anonymous_13)","line":91,"loc":{"start":{"line":91,"column":40},"end":{"line":91,"column":55}}},"14":{"name":"(anonymous_14)","line":120,"loc":{"start":{"line":120,"column":32},"end":{"line":120,"column":49}}},"15":{"name":"(anonymous_15)","line":135,"loc":{"start":{"line":135,"column":16},"end":{"line":135,"column":48}}},"16":{"name":"(anonymous_16)","line":152,"loc":{"start":{"line":152,"column":30},"end":{"line":152,"column":47}}},"17":{"name":"(anonymous_17)","line":156,"loc":{"start":{"line":156,"column":22},"end":{"line":156,"column":39}}},"18":{"name":"(anonymous_18)","line":160,"loc":{"start":{"line":160,"column":31},"end":{"line":160,"column":48}}},"19":{"name":"(anonymous_19)","line":165,"loc":{"start":{"line":165,"column":31},"end":{"line":165,"column":48}}},"20":{"name":"(anonymous_20)","line":169,"loc":{"start":{"line":169,"column":45},"end":{"line":169,"column":58}}},"21":{"name":"(anonymous_21)","line":173,"loc":{"start":{"line":173,"column":33},"end":{"line":173,"column":50}}},"22":{"name":"(anonymous_22)","line":179,"loc":{"start":{"line":179,"column":22},"end":{"line":179,"column":43}}},"23":{"name":"(anonymous_23)","line":182,"loc":{"start":{"line":182,"column":27},"end":{"line":182,"column":43}}},"24":{"name":"(anonymous_24)","line":187,"loc":{"start":{"line":187,"column":30},"end":{"line":187,"column":47}}},"25":{"name":"(anonymous_25)","line":191,"loc":{"start":{"line":191,"column":12},"end":{"line":191,"column":24}}},"26":{"name":"TreeSummarizer","line":199,"loc":{"start":{"line":199,"column":0},"end":{"line":199,"column":26}}},"27":{"name":"(anonymous_27)","line":204,"loc":{"start":{"line":204,"column":28},"end":{"line":204,"column":57}}},"28":{"name":"(anonymous_28)","line":207,"loc":{"start":{"line":207,"column":20},"end":{"line":207,"column":32}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":8,"column":39}},"2":{"start":{"line":10,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":11,"column":4},"end":{"line":13,"column":17}},"4":{"start":{"line":14,"column":4},"end":{"line":20,"column":5}},"5":{"start":{"line":15,"column":8},"end":{"line":19,"column":9}},"6":{"start":{"line":16,"column":12},"end":{"line":16,"column":31}},"7":{"start":{"line":18,"column":12},"end":{"line":18,"column":18}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":15}},"9":{"start":{"line":24,"column":0},"end":{"line":37,"column":1}},"10":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":18}},"12":{"start":{"line":29,"column":4},"end":{"line":30,"column":30}},"13":{"start":{"line":29,"column":46},"end":{"line":29,"column":68}},"14":{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},"15":{"start":{"line":33,"column":8},"end":{"line":33,"column":44}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":56}},"17":{"start":{"line":39,"column":0},"end":{"line":46,"column":1}},"18":{"start":{"line":40,"column":4},"end":{"line":40,"column":25}},"19":{"start":{"line":41,"column":4},"end":{"line":41,"column":29}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":21}},"21":{"start":{"line":43,"column":4},"end":{"line":43,"column":35}},"22":{"start":{"line":44,"column":4},"end":{"line":44,"column":23}},"23":{"start":{"line":45,"column":4},"end":{"line":45,"column":23}},"24":{"start":{"line":48,"column":0},"end":{"line":70,"column":2}},"25":{"start":{"line":50,"column":8},"end":{"line":50,"column":33}},"26":{"start":{"line":53,"column":8},"end":{"line":53,"column":29}},"27":{"start":{"line":56,"column":8},"end":{"line":56,"column":34}},"28":{"start":{"line":57,"column":8},"end":{"line":57,"column":28}},"29":{"start":{"line":60,"column":8},"end":{"line":68,"column":10}},"30":{"start":{"line":67,"column":58},"end":{"line":67,"column":79}},"31":{"start":{"line":72,"column":0},"end":{"line":75,"column":1}},"32":{"start":{"line":73,"column":4},"end":{"line":73,"column":31}},"33":{"start":{"line":74,"column":4},"end":{"line":74,"column":49}},"34":{"start":{"line":77,"column":0},"end":{"line":197,"column":2}},"35":{"start":{"line":79,"column":8},"end":{"line":79,"column":35}},"36":{"start":{"line":82,"column":8},"end":{"line":88,"column":35}},"37":{"start":{"line":90,"column":8},"end":{"line":90,"column":30}},"38":{"start":{"line":91,"column":8},"end":{"line":111,"column":11}},"39":{"start":{"line":92,"column":12},"end":{"line":95,"column":23}},"40":{"start":{"line":96,"column":12},"end":{"line":96,"column":50}},"41":{"start":{"line":97,"column":12},"end":{"line":97,"column":29}},"42":{"start":{"line":98,"column":12},"end":{"line":98,"column":29}},"43":{"start":{"line":99,"column":12},"end":{"line":99,"column":49}},"44":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"45":{"start":{"line":101,"column":16},"end":{"line":101,"column":52}},"46":{"start":{"line":103,"column":12},"end":{"line":103,"column":38}},"47":{"start":{"line":104,"column":12},"end":{"line":108,"column":13}},"48":{"start":{"line":105,"column":16},"end":{"line":105,"column":53}},"49":{"start":{"line":106,"column":16},"end":{"line":106,"column":38}},"50":{"start":{"line":107,"column":16},"end":{"line":107,"column":42}},"51":{"start":{"line":109,"column":12},"end":{"line":109,"column":34}},"52":{"start":{"line":110,"column":12},"end":{"line":110,"column":59}},"53":{"start":{"line":110,"column":35},"end":{"line":110,"column":57}},"54":{"start":{"line":113,"column":8},"end":{"line":127,"column":9}},"55":{"start":{"line":114,"column":12},"end":{"line":114,"column":30}},"56":{"start":{"line":115,"column":12},"end":{"line":115,"column":23}},"57":{"start":{"line":116,"column":12},"end":{"line":116,"column":39}},"58":{"start":{"line":117,"column":12},"end":{"line":117,"column":30}},"59":{"start":{"line":118,"column":12},"end":{"line":118,"column":64}},"60":{"start":{"line":119,"column":12},"end":{"line":119,"column":31}},"61":{"start":{"line":120,"column":12},"end":{"line":126,"column":15}},"62":{"start":{"line":121,"column":16},"end":{"line":125,"column":17}},"63":{"start":{"line":122,"column":20},"end":{"line":122,"column":41}},"64":{"start":{"line":124,"column":20},"end":{"line":124,"column":40}},"65":{"start":{"line":128,"column":8},"end":{"line":128,"column":59}},"66":{"start":{"line":129,"column":8},"end":{"line":129,"column":36}},"67":{"start":{"line":130,"column":8},"end":{"line":130,"column":25}},"68":{"start":{"line":131,"column":8},"end":{"line":131,"column":22}},"69":{"start":{"line":132,"column":8},"end":{"line":132,"column":46}},"70":{"start":{"line":136,"column":8},"end":{"line":136,"column":24}},"71":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"72":{"start":{"line":138,"column":12},"end":{"line":138,"column":59}},"73":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"74":{"start":{"line":141,"column":12},"end":{"line":141,"column":47}},"75":{"start":{"line":143,"column":8},"end":{"line":151,"column":9}},"76":{"start":{"line":144,"column":12},"end":{"line":148,"column":13}},"77":{"start":{"line":145,"column":16},"end":{"line":145,"column":76}},"78":{"start":{"line":147,"column":16},"end":{"line":147,"column":46}},"79":{"start":{"line":150,"column":12},"end":{"line":150,"column":67}},"80":{"start":{"line":152,"column":8},"end":{"line":154,"column":11}},"81":{"start":{"line":153,"column":12},"end":{"line":153,"column":49}},"82":{"start":{"line":157,"column":8},"end":{"line":158,"column":25}},"83":{"start":{"line":159,"column":8},"end":{"line":159,"column":44}},"84":{"start":{"line":159,"column":35},"end":{"line":159,"column":42}},"85":{"start":{"line":160,"column":8},"end":{"line":162,"column":11}},"86":{"start":{"line":161,"column":12},"end":{"line":161,"column":41}},"87":{"start":{"line":163,"column":8},"end":{"line":166,"column":10}},"88":{"start":{"line":165,"column":50},"end":{"line":165,"column":71}},"89":{"start":{"line":169,"column":8},"end":{"line":169,"column":88}},"90":{"start":{"line":169,"column":60},"end":{"line":169,"column":84}},"91":{"start":{"line":170,"column":8},"end":{"line":177,"column":9}},"92":{"start":{"line":171,"column":12},"end":{"line":174,"column":14}},"93":{"start":{"line":173,"column":52},"end":{"line":173,"column":73}},"94":{"start":{"line":176,"column":12},"end":{"line":176,"column":40}},"95":{"start":{"line":180,"column":8},"end":{"line":180,"column":24}},"96":{"start":{"line":181,"column":8},"end":{"line":181,"column":30}},"97":{"start":{"line":182,"column":8},"end":{"line":186,"column":11}},"98":{"start":{"line":183,"column":12},"end":{"line":183,"column":31}},"99":{"start":{"line":184,"column":12},"end":{"line":184,"column":31}},"100":{"start":{"line":185,"column":12},"end":{"line":185,"column":46}},"101":{"start":{"line":187,"column":8},"end":{"line":189,"column":11}},"102":{"start":{"line":188,"column":12},"end":{"line":188,"column":46}},"103":{"start":{"line":192,"column":8},"end":{"line":195,"column":10}},"104":{"start":{"line":199,"column":0},"end":{"line":201,"column":1}},"105":{"start":{"line":200,"column":4},"end":{"line":200,"column":25}},"106":{"start":{"line":203,"column":0},"end":{"line":211,"column":2}},"107":{"start":{"line":205,"column":8},"end":{"line":205,"column":44}},"108":{"start":{"line":208,"column":8},"end":{"line":208,"column":84}},"109":{"start":{"line":209,"column":8},"end":{"line":209,"column":67}},"110":{"start":{"line":213,"column":0},"end":{"line":213,"column":32}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":10},"end":{"line":7,"column":18}},{"start":{"line":7,"column":22},"end":{"line":7,"column":25}}]},"2":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":45},"end":{"line":11,"column":57}},{"start":{"line":11,"column":60},"end":{"line":11,"column":73}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":8}},{"start":{"line":15,"column":8},"end":{"line":15,"column":8}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"6":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":19},"end":{"line":43,"column":26}},{"start":{"line":43,"column":30},"end":{"line":43,"column":34}}]},"7":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":43},"end":{"line":66,"column":47}},{"start":{"line":66,"column":50},"end":{"line":66,"column":66}}]},"8":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":12}},{"start":{"line":100,"column":12},"end":{"line":100,"column":12}}]},"9":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":16},"end":{"line":100,"column":40}},{"start":{"line":100,"column":44},"end":{"line":100,"column":68}}]},"10":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":12}},{"start":{"line":104,"column":12},"end":{"line":104,"column":12}}]},"11":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":12}},{"start":{"line":110,"column":12},"end":{"line":110,"column":12}}]},"12":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":8}},{"start":{"line":113,"column":8},"end":{"line":113,"column":8}}]},"13":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":26}},{"start":{"line":113,"column":30},"end":{"line":113,"column":52}}]},"14":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":16},"end":{"line":121,"column":16}},{"start":{"line":121,"column":16},"end":{"line":121,"column":16}}]},"15":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8}},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]},"16":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":140,"column":8}},{"start":{"line":140,"column":8},"end":{"line":140,"column":8}}]},"17":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":8}},{"start":{"line":143,"column":8},"end":{"line":143,"column":8}}]},"18":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":12}},{"start":{"line":144,"column":12},"end":{"line":144,"column":12}}]},"19":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":8}},{"start":{"line":159,"column":8},"end":{"line":159,"column":8}}]},"20":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":8}},{"start":{"line":170,"column":8},"end":{"line":170,"column":8}}]},"21":{"line":185,"type":"cond-expr","locations":[{"start":{"line":185,"column":27},"end":{"line":185,"column":29}},{"start":{"line":185,"column":32},"end":{"line":185,"column":45}}]},"22":{"line":185,"type":"cond-expr","locations":[{"start":{"line":185,"column":40},"end":{"line":185,"column":41}},{"start":{"line":185,"column":44},"end":{"line":185,"column":45}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    SEP = path.sep || '/',","    utils = require('../object-utils');","","function commonArrayPrefix(first, second) {","    var len = first.length < second.length ? first.length : second.length,","        i,","        ret = [];","    for (i = 0; i < len; i += 1) {","        if (first[i] === second[i]) {","            ret.push(first[i]);","        } else {","            break;","        }","    }","    return ret;","}","","function findCommonArrayPrefix(args) {","    if (args.length === 0) {","        return [];","    }","","    var separated = args.map(function (arg) { return arg.split(SEP); }),","        ret = separated.pop();","","    if (separated.length === 0) {","        return ret.slice(0, ret.length - 1);","    } else {","        return separated.reduce(commonArrayPrefix, ret);","    }","}","","function Node(fullName, kind, metrics) {","    this.name = fullName;","    this.fullName = fullName;","    this.kind = kind;","    this.metrics = metrics || null;","    this.parent = null;","    this.children = [];","}","","Node.prototype = {","    displayShortName: function () {","        return this.relativeName;","    },","    fullPath: function () {","        return this.fullName;","    },","    addChild: function (child) {","        this.children.push(child);","        child.parent = this;","    },","    toJSON: function () {","        return {","            name: this.name,","            relativeName: this.relativeName,","            fullName: this.fullName,","            kind: this.kind,","            metrics: this.metrics,","            parent: this.parent === null ? null : this.parent.name,","            children: this.children.map(function (node) { return node.toJSON(); })","        };","    }","};","","function TreeSummary(summaryMap, commonPrefix) {","    this.prefix = commonPrefix;","    this.convertToTree(summaryMap, commonPrefix);","}","","TreeSummary.prototype = {","    getNode: function (shortName) {","        return this.map[shortName];","    },","    convertToTree: function (summaryMap, arrayPrefix) {","        var nodes = [],","            rootPath = arrayPrefix.join(SEP) + SEP,","            root = new Node(rootPath, 'dir'),","            tmp,","            tmpChildren,","            seen = {},","            filesUnderRoot = false;","","        seen[rootPath] = root;","        Object.keys(summaryMap).forEach(function (key) {","            var metrics = summaryMap[key],","                node,","                parentPath,","                parent;","            node = new Node(key, 'file', metrics);","            seen[key] = node;","            nodes.push(node);","            parentPath = path.dirname(key) + SEP;","            if (parentPath === SEP + SEP || parentPath === '.' + SEP) {","                parentPath = SEP + '__root__' + SEP;","            }","            parent = seen[parentPath];","            if (!parent) {","                parent = new Node(parentPath, 'dir');","                root.addChild(parent);","                seen[parentPath] = parent;","            }","            parent.addChild(node);","            if (parent === root) { filesUnderRoot = true; }","        });","","        if (filesUnderRoot && arrayPrefix.length > 0) {","            arrayPrefix.pop(); //start at one level above","            tmp = root;","            tmpChildren = tmp.children;","            tmp.children = [];","            root = new Node(arrayPrefix.join(SEP) + SEP, 'dir');","            root.addChild(tmp);","            tmpChildren.forEach(function (child) {","                if (child.kind === 'dir') {","                    root.addChild(child);","                } else {","                    tmp.addChild(child);","                }","            });","        }","        this.fixupNodes(root, arrayPrefix.join(SEP) + SEP);","        this.calculateMetrics(root);","        this.root = root;","        this.map = {};","        this.indexAndSortTree(root, this.map);","    },","","    fixupNodes: function (node, prefix, parent) {","        var that = this;","        if (node.name.indexOf(prefix) === 0) {","            node.name = node.name.substring(prefix.length);","        }","        if (node.name.charAt(0) === SEP) {","            node.name = node.name.substring(1);","        }","        if (parent) {","            if (parent.name !== '__root__' + SEP) {","                node.relativeName = node.name.substring(parent.name.length);","            } else {","                node.relativeName = node.name;","            }","        } else {","            node.relativeName = node.name.substring(prefix.length);","        }","        node.children.forEach(function (child) {","            that.fixupNodes(child, prefix, node);","        });","    },","    calculateMetrics: function (entry) {","        var that = this,","            fileChildren;","        if (entry.kind !== 'dir') {return; }","        entry.children.forEach(function (child) {","            that.calculateMetrics(child);","        });","        entry.metrics = utils.mergeSummaryObjects.apply(","            null,","            entry.children.map(function (child) { return child.metrics; })","        );","        // calclulate \"java-style\" package metrics where there is no hierarchy","        // across packages","        fileChildren = entry.children.filter(function (n) { return n.kind !== 'dir'; });","        if (fileChildren.length > 0) {","            entry.packageMetrics = utils.mergeSummaryObjects.apply(","                null,","                fileChildren.map(function (child) { return child.metrics; })","            );","        } else {","            entry.packageMetrics = null;","        }","    },","    indexAndSortTree: function (node, map) {","        var that = this;","        map[node.name] = node;","        node.children.sort(function (a, b) {","            a = a.relativeName;","            b = b.relativeName;","            return a < b ? -1 : a > b ? 1 : 0;","        });","        node.children.forEach(function (child) {","            that.indexAndSortTree(child, map);","        });","    },","    toJSON: function () {","        return {","            prefix: this.prefix,","            root: this.root.toJSON()","        };","    }","};","","function TreeSummarizer() {","    this.summaryMap = {};","}","","TreeSummarizer.prototype = {","    addFileCoverageSummary: function (filePath, metrics) {","        this.summaryMap[filePath] = metrics;","    },","    getTreeSummary: function () {","        var commonArrayPrefix = findCommonArrayPrefix(Object.keys(this.summaryMap));","        return new TreeSummary(this.summaryMap, commonArrayPrefix);","    }","};","","module.exports = TreeSummarizer;",""],"l":{"6":1,"10":1,"11":0,"14":0,"15":0,"16":0,"18":0,"21":0,"24":1,"25":0,"26":0,"29":0,"32":0,"33":0,"35":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"48":1,"50":0,"53":0,"56":0,"57":0,"60":0,"67":0,"72":1,"73":0,"74":0,"77":1,"79":0,"82":0,"90":0,"91":0,"92":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"107":0,"109":0,"110":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"124":0,"128":0,"129":0,"130":0,"131":0,"132":0,"136":0,"137":0,"138":0,"140":0,"141":0,"143":0,"144":0,"145":0,"147":0,"150":0,"152":0,"153":0,"157":0,"159":0,"160":0,"161":0,"163":0,"165":0,"169":0,"170":0,"171":0,"173":0,"176":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"187":0,"188":0,"192":0,"199":1,"200":0,"203":1,"205":0,"208":0,"209":0,"213":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/object-utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/object-utils.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":1,"128":1,"129":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[1,0],"28":[1,1,1]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"fnMap":{"1":{"name":"(anonymous_1)","line":39,"loc":{"start":{"line":39,"column":1},"end":{"line":39,"column":19}}},"2":{"name":"addDerivedInfoForFile","line":51,"loc":{"start":{"line":51,"column":4},"end":{"line":51,"column":49}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":44},"end":{"line":58,"column":58}}},"4":{"name":"addDerivedInfo","line":76,"loc":{"start":{"line":76,"column":4},"end":{"line":76,"column":38}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":38},"end":{"line":77,"column":51}}},"6":{"name":"removeDerivedInfo","line":87,"loc":{"start":{"line":87,"column":4},"end":{"line":87,"column":41}}},"7":{"name":"(anonymous_7)","line":88,"loc":{"start":{"line":88,"column":38},"end":{"line":88,"column":51}}},"8":{"name":"percent","line":93,"loc":{"start":{"line":93,"column":4},"end":{"line":93,"column":37}}},"9":{"name":"computeSimpleTotals","line":103,"loc":{"start":{"line":103,"column":4},"end":{"line":103,"column":70}}},"10":{"name":"(anonymous_10)","line":108,"loc":{"start":{"line":108,"column":35},"end":{"line":108,"column":50}}},"11":{"name":"computeBranchTotals","line":123,"loc":{"start":{"line":123,"column":4},"end":{"line":123,"column":47}}},"12":{"name":"(anonymous_12)","line":128,"loc":{"start":{"line":128,"column":35},"end":{"line":128,"column":50}}},"13":{"name":"blankSummary","line":173,"loc":{"start":{"line":173,"column":4},"end":{"line":173,"column":28}}},"14":{"name":"summarizeFileCoverage","line":211,"loc":{"start":{"line":211,"column":4},"end":{"line":211,"column":49}}},"15":{"name":"mergeFileCoverage","line":232,"loc":{"start":{"line":232,"column":4},"end":{"line":232,"column":46}}},"16":{"name":"(anonymous_16)","line":238,"loc":{"start":{"line":238,"column":38},"end":{"line":238,"column":51}}},"17":{"name":"(anonymous_17)","line":241,"loc":{"start":{"line":241,"column":38},"end":{"line":241,"column":51}}},"18":{"name":"(anonymous_18)","line":244,"loc":{"start":{"line":244,"column":38},"end":{"line":244,"column":51}}},"19":{"name":"mergeSummaryObjects","line":264,"loc":{"start":{"line":264,"column":4},"end":{"line":264,"column":35}}},"20":{"name":"(anonymous_20)","line":268,"loc":{"start":{"line":268,"column":24},"end":{"line":268,"column":39}}},"21":{"name":"(anonymous_21)","line":270,"loc":{"start":{"line":270,"column":33},"end":{"line":270,"column":48}}},"22":{"name":"(anonymous_22)","line":277,"loc":{"start":{"line":277,"column":58},"end":{"line":277,"column":73}}},"23":{"name":"(anonymous_23)","line":286,"loc":{"start":{"line":286,"column":21},"end":{"line":286,"column":36}}},"24":{"name":"(anonymous_24)","line":289,"loc":{"start":{"line":289,"column":21},"end":{"line":289,"column":36}}},"25":{"name":"summarizeCoverage","line":304,"loc":{"start":{"line":304,"column":4},"end":{"line":304,"column":41}}},"26":{"name":"(anonymous_26)","line":306,"loc":{"start":{"line":306,"column":38},"end":{"line":306,"column":53}}},"27":{"name":"toYUICoverage","line":322,"loc":{"start":{"line":322,"column":4},"end":{"line":322,"column":37}}},"28":{"name":"(anonymous_28)","line":327,"loc":{"start":{"line":327,"column":38},"end":{"line":327,"column":51}}},"29":{"name":"(anonymous_29)","line":342,"loc":{"start":{"line":342,"column":39},"end":{"line":342,"column":52}}},"30":{"name":"(anonymous_30)","line":349,"loc":{"start":{"line":349,"column":43},"end":{"line":349,"column":56}}},"31":{"name":"incrementIgnoredTotals","line":370,"loc":{"start":{"line":370,"column":4},"end":{"line":370,"column":41}}},"32":{"name":"(anonymous_32)","line":379,"loc":{"start":{"line":379,"column":18},"end":{"line":379,"column":34}}},"33":{"name":"(anonymous_33)","line":381,"loc":{"start":{"line":381,"column":25},"end":{"line":381,"column":40}}},"34":{"name":"(anonymous_34)","line":388,"loc":{"start":{"line":388,"column":42},"end":{"line":388,"column":69}}}},"statementMap":{"1":{"start":{"line":39,"column":0},"end":{"line":425,"column":109}},"2":{"start":{"line":51,"column":4},"end":{"line":68,"column":5}},"3":{"start":{"line":52,"column":8},"end":{"line":54,"column":20}},"4":{"start":{"line":56,"column":8},"end":{"line":67,"column":9}},"5":{"start":{"line":57,"column":12},"end":{"line":57,"column":42}},"6":{"start":{"line":58,"column":12},"end":{"line":66,"column":15}},"7":{"start":{"line":59,"column":16},"end":{"line":61,"column":44}},"8":{"start":{"line":62,"column":16},"end":{"line":62,"column":72}},"9":{"start":{"line":62,"column":60},"end":{"line":62,"column":70}},"10":{"start":{"line":63,"column":16},"end":{"line":65,"column":17}},"11":{"start":{"line":64,"column":20},"end":{"line":64,"column":42}},"12":{"start":{"line":76,"column":4},"end":{"line":80,"column":5}},"13":{"start":{"line":77,"column":8},"end":{"line":79,"column":11}},"14":{"start":{"line":78,"column":12},"end":{"line":78,"column":47}},"15":{"start":{"line":87,"column":4},"end":{"line":91,"column":5}},"16":{"start":{"line":88,"column":8},"end":{"line":90,"column":11}},"17":{"start":{"line":89,"column":12},"end":{"line":89,"column":33}},"18":{"start":{"line":93,"column":4},"end":{"line":101,"column":5}},"19":{"start":{"line":94,"column":8},"end":{"line":94,"column":16}},"20":{"start":{"line":95,"column":8},"end":{"line":100,"column":9}},"21":{"start":{"line":96,"column":12},"end":{"line":96,"column":51}},"22":{"start":{"line":97,"column":12},"end":{"line":97,"column":46}},"23":{"start":{"line":99,"column":12},"end":{"line":99,"column":26}},"24":{"start":{"line":103,"column":4},"end":{"line":121,"column":5}},"25":{"start":{"line":104,"column":8},"end":{"line":106,"column":55}},"26":{"start":{"line":108,"column":8},"end":{"line":118,"column":11}},"27":{"start":{"line":109,"column":12},"end":{"line":110,"column":47}},"28":{"start":{"line":111,"column":12},"end":{"line":111,"column":27}},"29":{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},"30":{"start":{"line":113,"column":16},"end":{"line":113,"column":33}},"31":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"32":{"start":{"line":116,"column":16},"end":{"line":116,"column":33}},"33":{"start":{"line":119,"column":8},"end":{"line":119,"column":50}},"34":{"start":{"line":120,"column":8},"end":{"line":120,"column":19}},"35":{"start":{"line":123,"column":4},"end":{"line":148,"column":5}},"36":{"start":{"line":124,"column":8},"end":{"line":126,"column":55}},"37":{"start":{"line":128,"column":8},"end":{"line":145,"column":11}},"38":{"start":{"line":129,"column":12},"end":{"line":133,"column":18}},"39":{"start":{"line":134,"column":12},"end":{"line":143,"column":13}},"40":{"start":{"line":135,"column":16},"end":{"line":135,"column":42}},"41":{"start":{"line":136,"column":16},"end":{"line":136,"column":85}},"42":{"start":{"line":137,"column":16},"end":{"line":139,"column":17}},"43":{"start":{"line":138,"column":20},"end":{"line":138,"column":37}},"44":{"start":{"line":140,"column":16},"end":{"line":142,"column":17}},"45":{"start":{"line":141,"column":20},"end":{"line":141,"column":37}},"46":{"start":{"line":144,"column":12},"end":{"line":144,"column":41}},"47":{"start":{"line":146,"column":8},"end":{"line":146,"column":50}},"48":{"start":{"line":147,"column":8},"end":{"line":147,"column":19}},"49":{"start":{"line":173,"column":4},"end":{"line":201,"column":5}},"50":{"start":{"line":174,"column":8},"end":{"line":200,"column":10}},"51":{"start":{"line":211,"column":4},"end":{"line":220,"column":5}},"52":{"start":{"line":212,"column":8},"end":{"line":212,"column":33}},"53":{"start":{"line":213,"column":8},"end":{"line":213,"column":44}},"54":{"start":{"line":214,"column":8},"end":{"line":214,"column":59}},"55":{"start":{"line":215,"column":8},"end":{"line":215,"column":72}},"56":{"start":{"line":216,"column":8},"end":{"line":216,"column":80}},"57":{"start":{"line":217,"column":8},"end":{"line":217,"column":57}},"58":{"start":{"line":218,"column":8},"end":{"line":218,"column":42}},"59":{"start":{"line":219,"column":8},"end":{"line":219,"column":19}},"60":{"start":{"line":232,"column":4},"end":{"line":253,"column":5}},"61":{"start":{"line":233,"column":8},"end":{"line":234,"column":14}},"62":{"start":{"line":236,"column":8},"end":{"line":236,"column":21}},"63":{"start":{"line":238,"column":8},"end":{"line":240,"column":11}},"64":{"start":{"line":239,"column":12},"end":{"line":239,"column":36}},"65":{"start":{"line":241,"column":8},"end":{"line":243,"column":11}},"66":{"start":{"line":242,"column":12},"end":{"line":242,"column":36}},"67":{"start":{"line":244,"column":8},"end":{"line":250,"column":11}},"68":{"start":{"line":245,"column":12},"end":{"line":246,"column":42}},"69":{"start":{"line":247,"column":12},"end":{"line":249,"column":13}},"70":{"start":{"line":248,"column":16},"end":{"line":248,"column":46}},"71":{"start":{"line":252,"column":8},"end":{"line":252,"column":19}},"72":{"start":{"line":264,"column":4},"end":{"line":294,"column":5}},"73":{"start":{"line":265,"column":8},"end":{"line":285,"column":14}},"74":{"start":{"line":269,"column":16},"end":{"line":284,"column":17}},"75":{"start":{"line":270,"column":20},"end":{"line":274,"column":23}},"76":{"start":{"line":271,"column":24},"end":{"line":271,"column":57}},"77":{"start":{"line":272,"column":24},"end":{"line":272,"column":61}},"78":{"start":{"line":273,"column":24},"end":{"line":273,"column":61}},"79":{"start":{"line":277,"column":20},"end":{"line":283,"column":23}},"80":{"start":{"line":278,"column":24},"end":{"line":282,"column":25}},"81":{"start":{"line":279,"column":28},"end":{"line":279,"column":74}},"82":{"start":{"line":281,"column":28},"end":{"line":281,"column":75}},"83":{"start":{"line":286,"column":8},"end":{"line":288,"column":11}},"84":{"start":{"line":287,"column":12},"end":{"line":287,"column":27}},"85":{"start":{"line":289,"column":8},"end":{"line":291,"column":11}},"86":{"start":{"line":290,"column":12},"end":{"line":290,"column":69}},"87":{"start":{"line":293,"column":8},"end":{"line":293,"column":19}},"88":{"start":{"line":304,"column":4},"end":{"line":310,"column":5}},"89":{"start":{"line":305,"column":8},"end":{"line":305,"column":29}},"90":{"start":{"line":306,"column":8},"end":{"line":308,"column":11}},"91":{"start":{"line":307,"column":12},"end":{"line":307,"column":67}},"92":{"start":{"line":309,"column":8},"end":{"line":309,"column":60}},"93":{"start":{"line":322,"column":4},"end":{"line":359,"column":5}},"94":{"start":{"line":323,"column":8},"end":{"line":323,"column":21}},"95":{"start":{"line":325,"column":8},"end":{"line":325,"column":33}},"96":{"start":{"line":327,"column":8},"end":{"line":357,"column":11}},"97":{"start":{"line":328,"column":12},"end":{"line":332,"column":18}},"98":{"start":{"line":334,"column":12},"end":{"line":341,"column":14}},"99":{"start":{"line":342,"column":12},"end":{"line":348,"column":15}},"100":{"start":{"line":343,"column":16},"end":{"line":343,"column":38}},"101":{"start":{"line":344,"column":16},"end":{"line":344,"column":36}},"102":{"start":{"line":345,"column":16},"end":{"line":347,"column":17}},"103":{"start":{"line":346,"column":20},"end":{"line":346,"column":39}},"104":{"start":{"line":349,"column":12},"end":{"line":356,"column":15}},"105":{"start":{"line":350,"column":16},"end":{"line":350,"column":63}},"106":{"start":{"line":351,"column":16},"end":{"line":351,"column":49}},"107":{"start":{"line":352,"column":16},"end":{"line":352,"column":40}},"108":{"start":{"line":353,"column":16},"end":{"line":355,"column":17}},"109":{"start":{"line":354,"column":20},"end":{"line":354,"column":43}},"110":{"start":{"line":358,"column":8},"end":{"line":358,"column":19}},"111":{"start":{"line":370,"column":4},"end":{"line":404,"column":5}},"112":{"start":{"line":373,"column":8},"end":{"line":373,"column":59}},"113":{"start":{"line":375,"column":8},"end":{"line":401,"column":15}},"114":{"start":{"line":380,"column":12},"end":{"line":400,"column":19}},"115":{"start":{"line":382,"column":20},"end":{"line":382,"column":61}},"116":{"start":{"line":383,"column":20},"end":{"line":383,"column":58}},"117":{"start":{"line":385,"column":20},"end":{"line":395,"column":21}},"118":{"start":{"line":386,"column":24},"end":{"line":386,"column":54}},"119":{"start":{"line":388,"column":24},"end":{"line":392,"column":27}},"120":{"start":{"line":389,"column":28},"end":{"line":391,"column":29}},"121":{"start":{"line":390,"column":32},"end":{"line":390,"column":53}},"122":{"start":{"line":394,"column":24},"end":{"line":394,"column":31}},"123":{"start":{"line":397,"column":20},"end":{"line":399,"column":21}},"124":{"start":{"line":398,"column":24},"end":{"line":398,"column":38}},"125":{"start":{"line":403,"column":8},"end":{"line":403,"column":28}},"126":{"start":{"line":406,"column":4},"end":{"line":417,"column":6}},"127":{"start":{"line":420,"column":4},"end":{"line":424,"column":5}},"128":{"start":{"line":421,"column":8},"end":{"line":421,"column":37}},"129":{"start":{"line":423,"column":8},"end":{"line":423,"column":43},"skip":true}},"branchMap":{"1":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":8}},{"start":{"line":56,"column":8},"end":{"line":56,"column":8}}]},"2":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":16},"end":{"line":62,"column":16}},{"start":{"line":62,"column":16},"end":{"line":62,"column":16}}]},"3":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":20},"end":{"line":62,"column":31}},{"start":{"line":62,"column":35},"end":{"line":62,"column":56}}]},"4":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":16},"end":{"line":63,"column":16}},{"start":{"line":63,"column":16},"end":{"line":63,"column":16}}]},"5":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":20},"end":{"line":63,"column":50}},{"start":{"line":63,"column":54},"end":{"line":63,"column":69}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"7":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":32},"end":{"line":105,"column":57}},{"start":{"line":105,"column":60},"end":{"line":105,"column":64}}]},"8":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":26},"end":{"line":110,"column":29}},{"start":{"line":110,"column":33},"end":{"line":110,"column":46}}]},"9":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":112,"column":12}},{"start":{"line":112,"column":12},"end":{"line":112,"column":12}}]},"10":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":16},"end":{"line":112,"column":23}},{"start":{"line":112,"column":27},"end":{"line":112,"column":34}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":115,"column":12}},{"start":{"line":115,"column":12},"end":{"line":115,"column":12}}]},"12":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":16},"end":{"line":115,"column":24}},{"start":{"line":115,"column":28},"end":{"line":115,"column":35}}]},"13":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":26},"end":{"line":136,"column":39}},{"start":{"line":136,"column":43},"end":{"line":136,"column":59}},{"start":{"line":136,"column":63},"end":{"line":136,"column":84}}]},"14":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":16},"end":{"line":137,"column":16}},{"start":{"line":137,"column":16},"end":{"line":137,"column":16}}]},"15":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":20},"end":{"line":137,"column":27}},{"start":{"line":137,"column":31},"end":{"line":137,"column":38}}]},"16":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":16},"end":{"line":140,"column":16}},{"start":{"line":140,"column":16},"end":{"line":140,"column":16}}]},"17":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":20},"end":{"line":140,"column":28}},{"start":{"line":140,"column":32},"end":{"line":140,"column":39}}]},"18":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":16},"end":{"line":269,"column":16}},{"start":{"line":269,"column":16},"end":{"line":269,"column":16}}]},"19":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":24},"end":{"line":278,"column":24}},{"start":{"line":278,"column":24},"end":{"line":278,"column":24}}]},"20":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":16},"end":{"line":345,"column":16}},{"start":{"line":345,"column":16},"end":{"line":345,"column":16}}]},"21":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":16},"end":{"line":353,"column":16}},{"start":{"line":353,"column":16},"end":{"line":353,"column":16}}]},"22":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":20},"end":{"line":385,"column":20}},{"start":{"line":385,"column":20},"end":{"line":385,"column":20}}]},"23":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":28},"end":{"line":389,"column":28}},{"start":{"line":389,"column":28},"end":{"line":389,"column":28}}]},"24":{"line":389,"type":"binary-expr","locations":[{"start":{"line":389,"column":32},"end":{"line":389,"column":54}},{"start":{"line":389,"column":58},"end":{"line":389,"column":71}}]},"25":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":20},"end":{"line":397,"column":20}},{"start":{"line":397,"column":20},"end":{"line":397,"column":20}}]},"26":{"line":397,"type":"binary-expr","locations":[{"start":{"line":397,"column":24},"end":{"line":397,"column":39}},{"start":{"line":397,"column":43},"end":{"line":397,"column":51}}]},"27":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4},"skip":true}]},"28":{"line":425,"type":"binary-expr","locations":[{"start":{"line":425,"column":2},"end":{"line":425,"column":31}},{"start":{"line":425,"column":35},"end":{"line":425,"column":72}},{"start":{"line":425,"column":76},"end":{"line":425,"column":106}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","/**"," * utility methods to process coverage objects. A coverage object has the following"," * format."," *"," *      {"," *          \"/path/to/file1.js\": { file1 coverage },"," *          \"/path/to/file2.js\": { file2 coverage }"," *      }"," *"," *  The internals of the file coverage object are intentionally not documented since"," *  it is not a public interface."," *"," *  *Note:* When a method of this module has the word `File` in it, it will accept"," *  one of the sub-objects of the main coverage object as an argument. Other"," *  methods accept the higher level coverage object with multiple keys."," *"," * Works on `node` as well as the browser."," *"," * Usage on nodejs"," * ---------------"," *"," *      var objectUtils = require('istanbul').utils;"," *"," * Usage in a browser"," * ------------------"," *"," * Load this file using a `script` tag or other means. This will set `window.coverageUtils`"," * to this module's exports."," *"," * @class ObjectUtils"," * @module main"," * @static"," */","(function (isNode) {","    /**","     * adds line coverage information to a file coverage object, reverse-engineering","     * it from statement coverage. The object passed in is updated in place.","     *","     * Note that if line coverage information is already present in the object,","     * it is not recomputed.","     *","     * @method addDerivedInfoForFile","     * @static","     * @param {Object} fileCoverage the coverage object for a single file","     */","    function addDerivedInfoForFile(fileCoverage) {","        var statementMap = fileCoverage.statementMap,","            statements = fileCoverage.s,","            lineMap;","","        if (!fileCoverage.l) {","            fileCoverage.l = lineMap = {};","            Object.keys(statements).forEach(function (st) {","                var line = statementMap[st].start.line,","                    count = statements[st],","                    prevVal = lineMap[line];","                if (count === 0 && statementMap[st].skip) { count = 1; }","                if (typeof prevVal === 'undefined' || prevVal < count) {","                    lineMap[line] = count;","                }","            });","        }","    }","    /**","     * adds line coverage information to all file coverage objects.","     *","     * @method addDerivedInfo","     * @static","     * @param {Object} coverage the coverage object","     */","    function addDerivedInfo(coverage) {","        Object.keys(coverage).forEach(function (k) {","            addDerivedInfoForFile(coverage[k]);","        });","    }","    /**","     * removes line coverage information from all file coverage objects","     * @method removeDerivedInfo","     * @static","     * @param {Object} coverage the coverage object","     */","    function removeDerivedInfo(coverage) {","        Object.keys(coverage).forEach(function (k) {","            delete coverage[k].l;","        });","    }","","    function percent(covered, total) {","        var tmp;","        if (total > 0) {","            tmp = 1000 * 100 * covered / total + 5;","            return Math.floor(tmp / 10) / 100;","        } else {","            return 100.00;","        }","    }","","    function computeSimpleTotals(fileCoverage, property, mapProperty) {","        var stats = fileCoverage[property],","            map = mapProperty ? fileCoverage[mapProperty] : null,","            ret = { total: 0, covered: 0, skipped: 0 };","","        Object.keys(stats).forEach(function (key) {","            var covered = !!stats[key],","                skipped = map && map[key].skip;","            ret.total += 1;","            if (covered || skipped) {","                ret.covered += 1;","            }","            if (!covered && skipped) {","                ret.skipped += 1;","            }","        });","        ret.pct = percent(ret.covered, ret.total);","        return ret;","    }","","    function computeBranchTotals(fileCoverage) {","        var stats = fileCoverage.b,","            branchMap = fileCoverage.branchMap,","            ret = { total: 0, covered: 0, skipped: 0 };","","        Object.keys(stats).forEach(function (key) {","            var branches = stats[key],","                map = branchMap[key],","                covered,","                skipped,","                i;","            for (i = 0; i < branches.length; i += 1) {","                covered = branches[i] > 0;","                skipped = map.locations && map.locations[i] && map.locations[i].skip;","                if (covered || skipped) {","                    ret.covered += 1;","                }","                if (!covered && skipped) {","                    ret.skipped += 1;","                }","            }","            ret.total += branches.length;","        });","        ret.pct = percent(ret.covered, ret.total);","        return ret;","    }","    /**","     * returns a blank summary metrics object. A metrics object has the following","     * format.","     *","     *      {","     *          lines: lineMetrics,","     *          statements: statementMetrics,","     *          functions: functionMetrics,","     *          branches: branchMetrics","     *          linesCovered: lineCoveredCount","     *      }","     *","     *  Each individual metric object looks as follows:","     *","     *      {","     *          total: n,","     *          covered: m,","     *          pct: percent","     *      }","     *","     * @method blankSummary","     * @static","     * @return {Object} a blank metrics object","     */","    function blankSummary() {","        return {","            lines: {","                total: 0,","                covered: 0,","                skipped: 0,","                pct: 'Unknown'","            },","            statements: {","                total: 0,","                covered: 0,","                skipped: 0,","                pct: 'Unknown'","            },","            functions: {","                total: 0,","                covered: 0,","                skipped: 0,","                pct: 'Unknown'","            },","            branches: {","                total: 0,","                covered: 0,","                skipped: 0,","                pct: 'Unknown'","            },","            linesCovered: {}","        };","    }","    /**","     * returns the summary metrics given the coverage object for a single file. See `blankSummary()`","     * to understand the format of the returned object.","     *","     * @method summarizeFileCoverage","     * @static","     * @param {Object} fileCoverage the coverage object for a single file.","     * @return {Object} the summary metrics for the file","     */","    function summarizeFileCoverage(fileCoverage) {","        var ret = blankSummary();","        addDerivedInfoForFile(fileCoverage);","        ret.lines = computeSimpleTotals(fileCoverage, 'l');","        ret.functions = computeSimpleTotals(fileCoverage, 'f', 'fnMap');","        ret.statements = computeSimpleTotals(fileCoverage, 's', 'statementMap');","        ret.branches = computeBranchTotals(fileCoverage);","        ret.linesCovered = fileCoverage.l;","        return ret;","    }","    /**","     * merges two instances of file coverage objects *for the same file*","     * such that the execution counts are correct.","     *","     * @method mergeFileCoverage","     * @static","     * @param {Object} first the first file coverage object for a given file","     * @param {Object} second the second file coverage object for the same file","     * @return {Object} an object that is a result of merging the two. Note that","     *      the input objects are not changed in any way.","     */","    function mergeFileCoverage(first, second) {","        var ret = JSON.parse(JSON.stringify(first)),","            i;","","        delete ret.l; //remove derived info","","        Object.keys(second.s).forEach(function (k) {","            ret.s[k] += second.s[k];","        });","        Object.keys(second.f).forEach(function (k) {","            ret.f[k] += second.f[k];","        });","        Object.keys(second.b).forEach(function (k) {","            var retArray = ret.b[k],","                secondArray = second.b[k];","            for (i = 0; i < retArray.length; i += 1) {","                retArray[i] += secondArray[i];","            }","        });","","        return ret;","    }","    /**","     * merges multiple summary metrics objects by summing up the `totals` and","     * `covered` fields and recomputing the percentages. This function is generic","     * and can accept any number of arguments.","     *","     * @method mergeSummaryObjects","     * @static","     * @param {Object} summary... multiple summary metrics objects","     * @return {Object} the merged summary metrics","     */","    function mergeSummaryObjects() {","        var ret = blankSummary(),","            args = Array.prototype.slice.call(arguments),","            keys = ['lines', 'statements', 'branches', 'functions'],","            increment = function (obj) {","                if (obj) {","                    keys.forEach(function (key) {","                        ret[key].total += obj[key].total;","                        ret[key].covered += obj[key].covered;","                        ret[key].skipped += obj[key].skipped;","                    });","","                    // keep track of all lines we have coverage for.","                    Object.keys(obj.linesCovered).forEach(function (key) {","                        if (!ret.linesCovered[key]) {","                            ret.linesCovered[key] = obj.linesCovered[key];","                        } else {","                            ret.linesCovered[key] += obj.linesCovered[key];","                        }","                    });","                }","            };","        args.forEach(function (arg) {","            increment(arg);","        });","        keys.forEach(function (key) {","            ret[key].pct = percent(ret[key].covered, ret[key].total);","        });","","        return ret;","    }","    /**","     * returns the coverage summary for a single coverage object. This is","     * wrapper over `summarizeFileCoverage` and `mergeSummaryObjects` for","     * the common case of a single coverage object","     * @method summarizeCoverage","     * @static","     * @param {Object} coverage  the coverage object","     * @return {Object} summary coverage metrics across all files in the coverage object","     */","    function summarizeCoverage(coverage) {","        var fileSummary = [];","        Object.keys(coverage).forEach(function (key) {","            fileSummary.push(summarizeFileCoverage(coverage[key]));","        });","        return mergeSummaryObjects.apply(null, fileSummary);","    }","","    /**","     * makes the coverage object generated by this library yuitest_coverage compatible.","     * Note that this transformation is lossy since the returned object will not have","     * statement and branch coverage.","     *","     * @method toYUICoverage","     * @static","     * @param {Object} coverage The `istanbul` coverage object","     * @return {Object} a coverage object in `yuitest_coverage` format.","     */","    function toYUICoverage(coverage) {","        var ret = {};","","        addDerivedInfo(coverage);","","        Object.keys(coverage).forEach(function (k) {","            var fileCoverage = coverage[k],","                lines = fileCoverage.l,","                functions = fileCoverage.f,","                fnMap = fileCoverage.fnMap,","                o;","","            o = ret[k] = {","                lines: {},","                calledLines: 0,","                coveredLines: 0,","                functions: {},","                calledFunctions: 0,","                coveredFunctions: 0","            };","            Object.keys(lines).forEach(function (k) {","                o.lines[k] = lines[k];","                o.coveredLines += 1;","                if (lines[k] > 0) {","                    o.calledLines += 1;","                }","            });","            Object.keys(functions).forEach(function (k) {","                var name = fnMap[k].name + ':' + fnMap[k].line;","                o.functions[name] = functions[k];","                o.coveredFunctions += 1;","                if (functions[k] > 0) {","                    o.calledFunctions += 1;","                }","            });","        });","        return ret;","    }","","    /**","     * Creates new file coverage object with incremented hits count","     * on skipped statements, branches and functions","     *","     * @method incrementIgnoredTotals","     * @static","     * @param {Object} cov File coverage object","     * @return {Object} New file coverage object","     */","    function incrementIgnoredTotals(cov) {","        //TODO: This may be slow in the browser and may break in older browsers","        //      Look into using a library that works in Node and the browser","        var fileCoverage = JSON.parse(JSON.stringify(cov));","","        [","            {mapKey: 'statementMap', hitsKey: 's'},","            {mapKey: 'branchMap', hitsKey: 'b'},","            {mapKey: 'fnMap', hitsKey: 'f'}","        ].forEach(function (keys) {","            Object.keys(fileCoverage[keys.mapKey])","                .forEach(function (key) {","                    var map = fileCoverage[keys.mapKey][key];","                    var hits = fileCoverage[keys.hitsKey];","","                    if (keys.mapKey === 'branchMap') {","                        var locations = map.locations;","","                        locations.forEach(function (location, index) {","                            if (hits[key][index] === 0 && location.skip) {","                                hits[key][index] = 1;","                            }","                        });","","                        return;","                    }","","                    if (hits[key] === 0 && map.skip) {","                        hits[key] = 1;","                    }","                });","            });","","        return fileCoverage;","    }","","    var exportables = {","        addDerivedInfo: addDerivedInfo,","        addDerivedInfoForFile: addDerivedInfoForFile,","        removeDerivedInfo: removeDerivedInfo,","        blankSummary: blankSummary,","        summarizeFileCoverage: summarizeFileCoverage,","        summarizeCoverage: summarizeCoverage,","        mergeFileCoverage: mergeFileCoverage,","        mergeSummaryObjects: mergeSummaryObjects,","        toYUICoverage: toYUICoverage,","        incrementIgnoredTotals: incrementIgnoredTotals","    };","","    /* istanbul ignore else: windows */","    if (isNode) {","        module.exports = exportables;","    } else {","        window.coverageUtils = exportables;","    }","}(typeof module !== 'undefined' && typeof module.exports !== 'undefined' && typeof exports !== 'undefined'));",""],"l":{"39":1,"51":1,"52":0,"56":0,"57":0,"58":0,"59":0,"62":0,"63":0,"64":0,"76":1,"77":0,"78":0,"87":1,"88":0,"89":0,"93":1,"94":0,"95":0,"96":0,"97":0,"99":0,"103":1,"104":0,"108":0,"109":0,"111":0,"112":0,"113":0,"115":0,"116":0,"119":0,"120":0,"123":1,"124":0,"128":0,"129":0,"134":0,"135":0,"136":0,"137":0,"138":0,"140":0,"141":0,"144":0,"146":0,"147":0,"173":1,"174":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"232":1,"233":0,"236":0,"238":0,"239":0,"241":0,"242":0,"244":0,"245":0,"247":0,"248":0,"252":0,"264":1,"265":0,"269":0,"270":0,"271":0,"272":0,"273":0,"277":0,"278":0,"279":0,"281":0,"286":0,"287":0,"289":0,"290":0,"293":0,"304":1,"305":0,"306":0,"307":0,"309":0,"322":1,"323":0,"325":0,"327":0,"328":0,"334":0,"342":0,"343":0,"344":0,"345":0,"346":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"358":0,"370":1,"373":0,"375":0,"380":0,"382":0,"383":0,"385":0,"386":0,"388":0,"389":0,"390":0,"394":0,"397":0,"398":0,"403":0,"406":1,"420":1,"421":1,"423":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/cobertura.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/cobertura.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"CoberturaReport","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":31}}},"2":{"name":"asJavaPackage","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":29}}},"3":{"name":"asClassName","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":27}}},"4":{"name":"quote","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":22}}},"5":{"name":"attr","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":20}}},"6":{"name":"branchCoverageByLine","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":44}}},"7":{"name":"(anonymous_7)","line":65,"loc":{"start":{"line":65,"column":35},"end":{"line":65,"column":48}}},"8":{"name":"(anonymous_8)","line":71,"loc":{"start":{"line":71,"column":29},"end":{"line":71,"column":42}}},"9":{"name":"(anonymous_9)","line":73,"loc":{"start":{"line":73,"column":39},"end":{"line":73,"column":55}}},"10":{"name":"addClassStats","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":64}}},"11":{"name":"(anonymous_11)","line":97,"loc":{"start":{"line":97,"column":31},"end":{"line":97,"column":44}}},"12":{"name":"(anonymous_12)","line":126,"loc":{"start":{"line":126,"column":31},"end":{"line":126,"column":44}}},"13":{"name":"walk","line":146,"loc":{"start":{"line":146,"column":0},"end":{"line":146,"column":59}}},"14":{"name":"(anonymous_14)","line":174,"loc":{"start":{"line":174,"column":29},"end":{"line":174,"column":46}}},"15":{"name":"(anonymous_15)","line":175,"loc":{"start":{"line":175,"column":20},"end":{"line":175,"column":37}}},"16":{"name":"(anonymous_16)","line":181,"loc":{"start":{"line":181,"column":25},"end":{"line":181,"column":42}}},"17":{"name":"(anonymous_17)","line":182,"loc":{"start":{"line":182,"column":16},"end":{"line":182,"column":33}}},"18":{"name":"(anonymous_18)","line":193,"loc":{"start":{"line":193,"column":14},"end":{"line":193,"column":26}}},"19":{"name":"(anonymous_19)","line":196,"loc":{"start":{"line":196,"column":22},"end":{"line":196,"column":34}}},"20":{"name":"(anonymous_20)","line":199,"loc":{"start":{"line":199,"column":17},"end":{"line":199,"column":44}}},"21":{"name":"(anonymous_21)","line":208,"loc":{"start":{"line":208,"column":34},"end":{"line":208,"column":49}}},"22":{"name":"(anonymous_22)","line":213,"loc":{"start":{"line":213,"column":26},"end":{"line":213,"column":38}}},"23":{"name":"(anonymous_23)","line":214,"loc":{"start":{"line":214,"column":37},"end":{"line":214,"column":62}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":11,"column":39}},"2":{"start":{"line":29,"column":0},"end":{"line":36,"column":1}},"3":{"start":{"line":30,"column":4},"end":{"line":30,"column":22}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":22}},"5":{"start":{"line":32,"column":4},"end":{"line":32,"column":37}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":44}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":58}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}},"10":{"start":{"line":39,"column":0},"end":{"line":39,"column":39}},"11":{"start":{"line":41,"column":0},"end":{"line":46,"column":1}},"12":{"start":{"line":42,"column":4},"end":{"line":45,"column":27}},"13":{"start":{"line":48,"column":0},"end":{"line":51,"column":1}},"14":{"start":{"line":50,"column":4},"end":{"line":50,"column":51}},"15":{"start":{"line":53,"column":0},"end":{"line":55,"column":1}},"16":{"start":{"line":54,"column":4},"end":{"line":54,"column":29}},"17":{"start":{"line":57,"column":0},"end":{"line":59,"column":1}},"18":{"start":{"line":58,"column":4},"end":{"line":58,"column":42}},"19":{"start":{"line":61,"column":0},"end":{"line":78,"column":1}},"20":{"start":{"line":62,"column":4},"end":{"line":64,"column":17}},"21":{"start":{"line":65,"column":4},"end":{"line":70,"column":7}},"22":{"start":{"line":66,"column":8},"end":{"line":67,"column":37}},"23":{"start":{"line":68,"column":8},"end":{"line":68,"column":36}},"24":{"start":{"line":69,"column":8},"end":{"line":69,"column":52}},"25":{"start":{"line":71,"column":4},"end":{"line":76,"column":7}},"26":{"start":{"line":72,"column":8},"end":{"line":74,"column":63}},"27":{"start":{"line":73,"column":57},"end":{"line":73,"column":73}},"28":{"start":{"line":75,"column":8},"end":{"line":75,"column":90}},"29":{"start":{"line":77,"column":4},"end":{"line":77,"column":15}},"30":{"start":{"line":80,"column":0},"end":{"line":144,"column":1}},"31":{"start":{"line":81,"column":4},"end":{"line":81,"column":62}},"32":{"start":{"line":83,"column":4},"end":{"line":86,"column":14}},"33":{"start":{"line":88,"column":4},"end":{"line":93,"column":13}},"34":{"start":{"line":95,"column":4},"end":{"line":95,"column":36}},"35":{"start":{"line":96,"column":4},"end":{"line":96,"column":31}},"36":{"start":{"line":97,"column":4},"end":{"line":121,"column":7}},"37":{"start":{"line":98,"column":8},"end":{"line":99,"column":37}},"38":{"start":{"line":101,"column":8},"end":{"line":107,"column":10}},"39":{"start":{"line":110,"column":8},"end":{"line":117,"column":10}},"40":{"start":{"line":119,"column":8},"end":{"line":119,"column":42}},"41":{"start":{"line":122,"column":4},"end":{"line":122,"column":37}},"42":{"start":{"line":124,"column":4},"end":{"line":124,"column":34}},"43":{"start":{"line":125,"column":4},"end":{"line":125,"column":27}},"44":{"start":{"line":126,"column":4},"end":{"line":140,"column":7}},"45":{"start":{"line":127,"column":8},"end":{"line":130,"column":43}},"46":{"start":{"line":132,"column":8},"end":{"line":138,"column":9}},"47":{"start":{"line":133,"column":12},"end":{"line":133,"column":41}},"48":{"start":{"line":135,"column":12},"end":{"line":137,"column":83}},"49":{"start":{"line":139,"column":8},"end":{"line":139,"column":35}},"50":{"start":{"line":141,"column":4},"end":{"line":141,"column":35}},"51":{"start":{"line":143,"column":4},"end":{"line":143,"column":35}},"52":{"start":{"line":146,"column":0},"end":{"line":190,"column":1}},"53":{"start":{"line":147,"column":4},"end":{"line":147,"column":16}},"54":{"start":{"line":148,"column":4},"end":{"line":165,"column":5}},"55":{"start":{"line":149,"column":8},"end":{"line":149,"column":31}},"56":{"start":{"line":150,"column":8},"end":{"line":150,"column":49}},"57":{"start":{"line":151,"column":8},"end":{"line":151,"column":108}},"58":{"start":{"line":152,"column":8},"end":{"line":160,"column":45}},"59":{"start":{"line":161,"column":8},"end":{"line":161,"column":36}},"60":{"start":{"line":162,"column":8},"end":{"line":162,"column":65}},"61":{"start":{"line":163,"column":8},"end":{"line":163,"column":37}},"62":{"start":{"line":164,"column":8},"end":{"line":164,"column":37}},"63":{"start":{"line":166,"column":4},"end":{"line":180,"column":5}},"64":{"start":{"line":167,"column":8},"end":{"line":167,"column":38}},"65":{"start":{"line":168,"column":8},"end":{"line":172,"column":17}},"66":{"start":{"line":173,"column":8},"end":{"line":173,"column":38}},"67":{"start":{"line":174,"column":8},"end":{"line":177,"column":15}},"68":{"start":{"line":174,"column":48},"end":{"line":174,"column":76}},"69":{"start":{"line":176,"column":16},"end":{"line":176,"column":103}},"70":{"start":{"line":178,"column":8},"end":{"line":178,"column":39}},"71":{"start":{"line":179,"column":8},"end":{"line":179,"column":39}},"72":{"start":{"line":181,"column":4},"end":{"line":184,"column":11}},"73":{"start":{"line":181,"column":44},"end":{"line":181,"column":72}},"74":{"start":{"line":183,"column":12},"end":{"line":183,"column":67}},"75":{"start":{"line":186,"column":4},"end":{"line":189,"column":5}},"76":{"start":{"line":187,"column":8},"end":{"line":187,"column":38}},"77":{"start":{"line":188,"column":8},"end":{"line":188,"column":38}},"78":{"start":{"line":192,"column":0},"end":{"line":219,"column":3}},"79":{"start":{"line":194,"column":8},"end":{"line":194,"column":80}},"80":{"start":{"line":197,"column":8},"end":{"line":197,"column":50}},"81":{"start":{"line":200,"column":8},"end":{"line":206,"column":17}},"82":{"start":{"line":208,"column":8},"end":{"line":210,"column":11}},"83":{"start":{"line":209,"column":12},"end":{"line":209,"column":112}},"84":{"start":{"line":211,"column":8},"end":{"line":211,"column":43}},"85":{"start":{"line":212,"column":8},"end":{"line":212,"column":25}},"86":{"start":{"line":213,"column":8},"end":{"line":213,"column":62}},"87":{"start":{"line":213,"column":40},"end":{"line":213,"column":58}},"88":{"start":{"line":214,"column":8},"end":{"line":217,"column":11}},"89":{"start":{"line":215,"column":12},"end":{"line":215,"column":65}},"90":{"start":{"line":216,"column":12},"end":{"line":216,"column":26}},"91":{"start":{"line":221,"column":0},"end":{"line":221,"column":33}}},"branchMap":{"1":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":11},"end":{"line":31,"column":15}},{"start":{"line":31,"column":19},"end":{"line":31,"column":21}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":15},"end":{"line":33,"column":23}},{"start":{"line":33,"column":27},"end":{"line":33,"column":43}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":16},"end":{"line":34,"column":25}},{"start":{"line":34,"column":29},"end":{"line":34,"column":57}}]},"4":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":20},"end":{"line":68,"column":29}},{"start":{"line":68,"column":33},"end":{"line":68,"column":35}}]},"5":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":8}},{"start":{"line":132,"column":8},"end":{"line":132,"column":8}}]},"6":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"7":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"8":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":4}},{"start":{"line":186,"column":4},"end":{"line":186,"column":4}}]},"9":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":21},"end":{"line":202,"column":37}},{"start":{"line":202,"column":41},"end":{"line":202,"column":61}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    util = require('util'),","    Report = require('./index'),","    FileWriter = require('../util/file-writer'),","    TreeSummarizer = require('../util/tree-summarizer'),","    utils = require('../object-utils');","","/**"," * a `Report` implementation that produces a cobertura-style XML file that conforms to the"," * http://cobertura.sourceforge.net/xml/coverage-04.dtd DTD."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('cobertura');"," *"," * @class CoberturaReport"," * @module report"," * @extends Report"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.dir] the directory in which to the cobertura-coverage.xml will be written"," */","function CoberturaReport(opts) {","    Report.call(this);","    opts = opts || {};","    this.projectRoot = process.cwd();","    this.dir = opts.dir || this.projectRoot;","    this.file = opts.file || this.getDefaultConfig().file;","    this.opts = opts;","}","","CoberturaReport.TYPE = 'cobertura';","util.inherits(CoberturaReport, Report);","","function asJavaPackage(node) {","    return node.displayShortName().","        replace(/\\//g, '.').","        replace(/\\\\/g, '.').","        replace(/\\.$/, '');","}","","function asClassName(node) {","    /*jslint regexp: true */","    return node.fullPath().replace(/.*[\\\\\\/]/, '');","}","","function quote(thing) {","    return '\"' + thing + '\"';","}","","function attr(n, v) {","    return ' ' + n + '=' + quote(v) + ' ';","}","","function branchCoverageByLine(fileCoverage) {","    var branchMap = fileCoverage.branchMap,","        branches = fileCoverage.b,","        ret = {};","    Object.keys(branchMap).forEach(function (k) {","        var line = branchMap[k].line,","            branchData = branches[k];","        ret[line] = ret[line] || [];","        ret[line].push.apply(ret[line], branchData);","    });","    Object.keys(ret).forEach(function (k) {","        var dataArray = ret[k],","            covered = dataArray.filter(function (item) { return item > 0; }),","            coverage = covered.length / dataArray.length * 100;","        ret[k] = { covered: covered.length, total: dataArray.length, coverage: coverage };","    });","    return ret;","}","","function addClassStats(node, fileCoverage, writer, projectRoot) {","    fileCoverage = utils.incrementIgnoredTotals(fileCoverage);","","    var metrics = node.metrics,","        branchByLine = branchCoverageByLine(fileCoverage),","        fnMap,","        lines;","","    writer.println('\\t\\t<class' +","        attr('name', asClassName(node)) +","        attr('filename', path.relative(projectRoot, node.fullPath())) +","        attr('line-rate', metrics.lines.pct / 100.0) +","        attr('branch-rate', metrics.branches.pct / 100.0) +","        '>');","","    writer.println('\\t\\t<methods>');","    fnMap = fileCoverage.fnMap;","    Object.keys(fnMap).forEach(function (k) {","        var name = fnMap[k].name,","            hits = fileCoverage.f[k];","","        writer.println(","            '\\t\\t\\t<method' +","            attr('name', name) +","            attr('hits', hits) +","            attr('signature', '()V') + //fake out a no-args void return","            '>'","        );","","        //Add the function definition line and hits so that jenkins cobertura plugin records method hits","        writer.println(","            '\\t\\t\\t\\t<lines>' +","             '<line' +","            attr('number', fnMap[k].line) +","            attr('hits', fileCoverage.f[k]) +","            '/>' +","            '</lines>'","        );","","        writer.println('\\t\\t\\t</method>');","","    });","    writer.println('\\t\\t</methods>');","","    writer.println('\\t\\t<lines>');","    lines = fileCoverage.l;","    Object.keys(lines).forEach(function (k) {","        var str = '\\t\\t\\t<line' +","            attr('number', k) +","            attr('hits', lines[k]),","            branchDetail = branchByLine[k];","","        if (!branchDetail) {","            str += attr('branch', false);","        } else {","            str += attr('branch', true) +","                attr('condition-coverage', branchDetail.coverage +","                    '% (' + branchDetail.covered + '/' + branchDetail.total + ')');","        }","        writer.println(str + '/>');","    });","    writer.println('\\t\\t</lines>');","","    writer.println('\\t\\t</class>');","}","","function walk(node, collector, writer, level, projectRoot) {","    var metrics;","    if (level === 0) {","        metrics = node.metrics;","        writer.println('<?xml version=\"1.0\" ?>');","        writer.println('<!DOCTYPE coverage SYSTEM \"http://cobertura.sourceforge.net/xml/coverage-04.dtd\">');","        writer.println('<coverage' +","            attr('lines-valid', metrics.lines.total) +","            attr('lines-covered', metrics.lines.covered) +","            attr('line-rate', metrics.lines.pct / 100.0) +","            attr('branches-valid', metrics.branches.total) +","            attr('branches-covered', metrics.branches.covered) +","            attr('branch-rate', metrics.branches.pct / 100.0) +","            attr('timestamp', Date.now()) +","            'complexity=\"0\" version=\"0.1\">');","        writer.println('<sources>');","        writer.println('\\t<source>' + projectRoot + '</source>');","        writer.println('</sources>');","        writer.println('<packages>');","    }","    if (node.packageMetrics) {","        metrics = node.packageMetrics;","        writer.println('\\t<package' +","            attr('name', asJavaPackage(node)) +","            attr('line-rate', metrics.lines.pct / 100.0) +","            attr('branch-rate', metrics.branches.pct / 100.0) +","            '>');","        writer.println('\\t<classes>');","        node.children.filter(function (child) { return child.kind !== 'dir'; }).","            forEach(function (child) {","                addClassStats(child, collector.fileCoverageFor(child.fullPath()), writer, projectRoot);","            });","        writer.println('\\t</classes>');","        writer.println('\\t</package>');","    }","    node.children.filter(function (child) { return child.kind === 'dir'; }).","        forEach(function (child) {","            walk(child, collector, writer, level + 1, projectRoot);","        });","","    if (level === 0) {","        writer.println('</packages>');","        writer.println('</coverage>');","    }","}","","Report.mix(CoberturaReport, {","    synopsis: function () {","        return 'XML coverage report that can be consumed by the cobertura tool';","    },","    getDefaultConfig: function () {","        return { file: 'cobertura-coverage.xml' };","    },","    writeReport: function (collector, sync) {","        var summarizer = new TreeSummarizer(),","            outputFile = path.join(this.dir, this.file),","            writer = this.opts.writer || new FileWriter(sync),","            projectRoot = this.projectRoot,","            that = this,","            tree,","            root;","","        collector.files().forEach(function (key) {","            summarizer.addFileCoverageSummary(key, utils.summarizeFileCoverage(collector.fileCoverageFor(key)));","        });","        tree = summarizer.getTreeSummary();","        root = tree.root;","        writer.on('done', function () { that.emit('done'); });","        writer.writeFile(outputFile, function (contentWriter) {","            walk(root, collector, contentWriter, 0, projectRoot);","            writer.done();","        });","    }","});","","module.exports = CoberturaReport;",""],"l":{"6":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"38":1,"39":1,"41":1,"42":0,"48":1,"50":0,"53":1,"54":0,"57":1,"58":0,"61":1,"62":0,"65":0,"66":0,"68":0,"69":0,"71":0,"72":0,"73":0,"75":0,"77":0,"80":1,"81":0,"83":0,"88":0,"95":0,"96":0,"97":0,"98":0,"101":0,"110":0,"119":0,"122":0,"124":0,"125":0,"126":0,"127":0,"132":0,"133":0,"135":0,"139":0,"141":0,"143":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"161":0,"162":0,"163":0,"164":0,"166":0,"167":0,"168":0,"173":0,"174":0,"176":0,"178":0,"179":0,"181":0,"183":0,"186":0,"187":0,"188":0,"192":1,"194":0,"197":0,"200":0,"208":0,"209":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"221":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/html.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/html.js","s":{"1":1,"2":2,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":1,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":18},"end":{"line":18,"column":34}}},"2":{"name":"(anonymous_2)","line":74,"loc":{"start":{"line":74,"column":42},"end":{"line":74,"column":58}}},"3":{"name":"(anonymous_3)","line":91,"loc":{"start":{"line":91,"column":44},"end":{"line":91,"column":69}}},"4":{"name":"(anonymous_4)","line":97,"loc":{"start":{"line":97,"column":42},"end":{"line":97,"column":61}}},"5":{"name":"(anonymous_5)","line":115,"loc":{"start":{"line":115,"column":40},"end":{"line":115,"column":56}}},"6":{"name":"(anonymous_6)","line":126,"loc":{"start":{"line":126,"column":56},"end":{"line":126,"column":81}}},"7":{"name":"customEscape","line":152,"loc":{"start":{"line":152,"column":0},"end":{"line":152,"column":28}}},"8":{"name":"(anonymous_8)","line":161,"loc":{"start":{"line":161,"column":39},"end":{"line":161,"column":70}}},"9":{"name":"(anonymous_9)","line":164,"loc":{"start":{"line":164,"column":20},"end":{"line":164,"column":36}}},"10":{"name":"title","line":170,"loc":{"start":{"line":170,"column":0},"end":{"line":170,"column":20}}},"11":{"name":"annotateLines","line":174,"loc":{"start":{"line":174,"column":0},"end":{"line":174,"column":53}}},"12":{"name":"(anonymous_12)","line":177,"loc":{"start":{"line":177,"column":35},"end":{"line":177,"column":57}}},"13":{"name":"(anonymous_13)","line":183,"loc":{"start":{"line":183,"column":27},"end":{"line":183,"column":43}}},"14":{"name":"annotateStatements","line":190,"loc":{"start":{"line":190,"column":0},"end":{"line":190,"column":58}}},"15":{"name":"(anonymous_15)","line":193,"loc":{"start":{"line":193,"column":40},"end":{"line":193,"column":58}}},"16":{"name":"annotateFunctions","line":219,"loc":{"start":{"line":219,"column":0},"end":{"line":219,"column":57}}},"17":{"name":"(anonymous_17)","line":224,"loc":{"start":{"line":224,"column":33},"end":{"line":224,"column":50}}},"18":{"name":"annotateBranches","line":250,"loc":{"start":{"line":250,"column":0},"end":{"line":250,"column":56}}},"19":{"name":"(anonymous_19)","line":255,"loc":{"start":{"line":255,"column":37},"end":{"line":255,"column":59}}},"20":{"name":"(anonymous_20)","line":257,"loc":{"start":{"line":257,"column":42},"end":{"line":257,"column":58}}},"21":{"name":"getReportClass","line":305,"loc":{"start":{"line":305,"column":0},"end":{"line":305,"column":42}}},"22":{"name":"cleanPath","line":315,"loc":{"start":{"line":315,"column":0},"end":{"line":315,"column":25}}},"23":{"name":"isEmptySourceStore","line":320,"loc":{"start":{"line":320,"column":0},"end":{"line":320,"column":41}}},"24":{"name":"HtmlReport","line":345,"loc":{"start":{"line":345,"column":0},"end":{"line":345,"column":26}}},"25":{"name":"(anonymous_25)","line":362,"loc":{"start":{"line":362,"column":14},"end":{"line":362,"column":26}}},"26":{"name":"(anonymous_26)","line":366,"loc":{"start":{"line":366,"column":17},"end":{"line":366,"column":45}}},"27":{"name":"(anonymous_27)","line":386,"loc":{"start":{"line":386,"column":18},"end":{"line":386,"column":48}}},"28":{"name":"(anonymous_28)","line":406,"loc":{"start":{"line":406,"column":21},"end":{"line":406,"column":59}}},"29":{"name":"(anonymous_29)","line":414,"loc":{"start":{"line":414,"column":34},"end":{"line":414,"column":49}}},"30":{"name":"(anonymous_30)","line":441,"loc":{"start":{"line":441,"column":20},"end":{"line":441,"column":44}}},"31":{"name":"(anonymous_31)","line":447,"loc":{"start":{"line":447,"column":22},"end":{"line":447,"column":38}}},"32":{"name":"(anonymous_32)","line":454,"loc":{"start":{"line":454,"column":25},"end":{"line":454,"column":42}}},"33":{"name":"(anonymous_33)","line":474,"loc":{"start":{"line":474,"column":16},"end":{"line":474,"column":56}}},"34":{"name":"(anonymous_34)","line":479,"loc":{"start":{"line":479,"column":36},"end":{"line":479,"column":61}}},"35":{"name":"(anonymous_35)","line":482,"loc":{"start":{"line":482,"column":30},"end":{"line":482,"column":47}}},"36":{"name":"(anonymous_36)","line":488,"loc":{"start":{"line":488,"column":44},"end":{"line":488,"column":69}}},"37":{"name":"(anonymous_37)","line":495,"loc":{"start":{"line":495,"column":24},"end":{"line":495,"column":36}}},"38":{"name":"(anonymous_38)","line":497,"loc":{"start":{"line":497,"column":24},"end":{"line":497,"column":40}}},"39":{"name":"(anonymous_39)","line":502,"loc":{"start":{"line":502,"column":26},"end":{"line":502,"column":47}}},"40":{"name":"(anonymous_40)","line":504,"loc":{"start":{"line":504,"column":29},"end":{"line":504,"column":44}}},"41":{"name":"(anonymous_41)","line":522,"loc":{"start":{"line":522,"column":22},"end":{"line":522,"column":43}}},"42":{"name":"(anonymous_42)","line":525,"loc":{"start":{"line":525,"column":19},"end":{"line":525,"column":41}}},"43":{"name":"(anonymous_43)","line":534,"loc":{"start":{"line":534,"column":17},"end":{"line":534,"column":44}}},"44":{"name":"(anonymous_44)","line":541,"loc":{"start":{"line":541,"column":25},"end":{"line":541,"column":43}}},"45":{"name":"(anonymous_45)","line":543,"loc":{"start":{"line":543,"column":47},"end":{"line":543,"column":60}}},"46":{"name":"(anonymous_46)","line":557,"loc":{"start":{"line":557,"column":34},"end":{"line":557,"column":49}}},"47":{"name":"(anonymous_47)","line":561,"loc":{"start":{"line":561,"column":33},"end":{"line":561,"column":51}}},"48":{"name":"(anonymous_48)","line":564,"loc":{"start":{"line":564,"column":26},"end":{"line":564,"column":38}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":72,"column":22}},"2":{"start":{"line":18,"column":36},"end":{"line":18,"column":140}},"3":{"start":{"line":74,"column":0},"end":{"line":89,"column":3}},"4":{"start":{"line":75,"column":4},"end":{"line":77,"column":17}},"5":{"start":{"line":78,"column":4},"end":{"line":88,"column":5}},"6":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"7":{"start":{"line":80,"column":12},"end":{"line":80,"column":32}},"8":{"start":{"line":82,"column":8},"end":{"line":82,"column":30}},"9":{"start":{"line":83,"column":8},"end":{"line":83,"column":25}},"10":{"start":{"line":84,"column":8},"end":{"line":85,"column":75}},"11":{"start":{"line":87,"column":8},"end":{"line":87,"column":18}},"12":{"start":{"line":91,"column":0},"end":{"line":95,"column":3}},"13":{"start":{"line":92,"column":4},"end":{"line":94,"column":61}},"14":{"start":{"line":97,"column":0},"end":{"line":113,"column":3}},"15":{"start":{"line":98,"column":4},"end":{"line":101,"column":15}},"16":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"17":{"start":{"line":104,"column":8},"end":{"line":104,"column":55}},"18":{"start":{"line":107,"column":4},"end":{"line":107,"column":16}},"19":{"start":{"line":108,"column":4},"end":{"line":108,"column":101}},"20":{"start":{"line":108,"column":25},"end":{"line":108,"column":99}},"21":{"start":{"line":109,"column":4},"end":{"line":109,"column":97}},"22":{"start":{"line":109,"column":24},"end":{"line":109,"column":95}},"23":{"start":{"line":110,"column":4},"end":{"line":110,"column":91}},"24":{"start":{"line":110,"column":23},"end":{"line":110,"column":89}},"25":{"start":{"line":112,"column":4},"end":{"line":112,"column":29}},"26":{"start":{"line":115,"column":0},"end":{"line":124,"column":3}},"27":{"start":{"line":116,"column":4},"end":{"line":118,"column":19}},"28":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"29":{"start":{"line":121,"column":8},"end":{"line":121,"column":25}},"30":{"start":{"line":123,"column":4},"end":{"line":123,"column":28}},"31":{"start":{"line":126,"column":0},"end":{"line":150,"column":3}},"32":{"start":{"line":127,"column":4},"end":{"line":133,"column":19}},"33":{"start":{"line":135,"column":4},"end":{"line":148,"column":5}},"34":{"start":{"line":136,"column":8},"end":{"line":136,"column":27}},"35":{"start":{"line":137,"column":8},"end":{"line":137,"column":25}},"36":{"start":{"line":138,"column":8},"end":{"line":138,"column":28}},"37":{"start":{"line":139,"column":8},"end":{"line":146,"column":9}},"38":{"start":{"line":140,"column":12},"end":{"line":145,"column":13}},"39":{"start":{"line":141,"column":16},"end":{"line":141,"column":32}},"40":{"start":{"line":142,"column":16},"end":{"line":142,"column":48}},"41":{"start":{"line":144,"column":16},"end":{"line":144,"column":31}},"42":{"start":{"line":147,"column":8},"end":{"line":147,"column":89}},"43":{"start":{"line":149,"column":4},"end":{"line":149,"column":28}},"44":{"start":{"line":152,"column":0},"end":{"line":159,"column":1}},"45":{"start":{"line":153,"column":4},"end":{"line":153,"column":27}},"46":{"start":{"line":154,"column":4},"end":{"line":158,"column":29}},"47":{"start":{"line":161,"column":0},"end":{"line":168,"column":3}},"48":{"start":{"line":162,"column":4},"end":{"line":162,"column":19}},"49":{"start":{"line":164,"column":4},"end":{"line":166,"column":7}},"50":{"start":{"line":165,"column":8},"end":{"line":165,"column":56}},"51":{"start":{"line":167,"column":4},"end":{"line":167,"column":28}},"52":{"start":{"line":170,"column":0},"end":{"line":172,"column":1}},"53":{"start":{"line":171,"column":4},"end":{"line":171,"column":35}},"54":{"start":{"line":174,"column":0},"end":{"line":188,"column":1}},"55":{"start":{"line":175,"column":4},"end":{"line":175,"column":35}},"56":{"start":{"line":176,"column":4},"end":{"line":176,"column":31}},"57":{"start":{"line":176,"column":22},"end":{"line":176,"column":29}},"58":{"start":{"line":177,"column":4},"end":{"line":182,"column":7}},"59":{"start":{"line":178,"column":8},"end":{"line":178,"column":42}},"60":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"61":{"start":{"line":180,"column":10},"end":{"line":180,"column":72}},"62":{"start":{"line":183,"column":4},"end":{"line":187,"column":7}},"63":{"start":{"line":184,"column":8},"end":{"line":186,"column":9}},"64":{"start":{"line":185,"column":12},"end":{"line":185,"column":37}},"65":{"start":{"line":190,"column":0},"end":{"line":217,"column":1}},"66":{"start":{"line":191,"column":4},"end":{"line":192,"column":50}},"67":{"start":{"line":193,"column":4},"end":{"line":216,"column":7}},"68":{"start":{"line":194,"column":8},"end":{"line":203,"column":17}},"69":{"start":{"line":205,"column":8},"end":{"line":215,"column":9}},"70":{"start":{"line":206,"column":12},"end":{"line":209,"column":13}},"71":{"start":{"line":207,"column":16},"end":{"line":207,"column":36}},"72":{"start":{"line":208,"column":16},"end":{"line":208,"column":73}},"73":{"start":{"line":210,"column":12},"end":{"line":210,"column":50}},"74":{"start":{"line":211,"column":12},"end":{"line":214,"column":27}},"75":{"start":{"line":219,"column":0},"end":{"line":248,"column":1}},"76":{"start":{"line":221,"column":4},"end":{"line":222,"column":36}},"77":{"start":{"line":223,"column":4},"end":{"line":223,"column":29}},"78":{"start":{"line":223,"column":20},"end":{"line":223,"column":27}},"79":{"start":{"line":224,"column":4},"end":{"line":247,"column":7}},"80":{"start":{"line":225,"column":8},"end":{"line":234,"column":17}},"81":{"start":{"line":236,"column":8},"end":{"line":246,"column":9}},"82":{"start":{"line":237,"column":12},"end":{"line":240,"column":13}},"83":{"start":{"line":238,"column":16},"end":{"line":238,"column":36}},"84":{"start":{"line":239,"column":16},"end":{"line":239,"column":73}},"85":{"start":{"line":241,"column":12},"end":{"line":241,"column":50}},"86":{"start":{"line":242,"column":12},"end":{"line":245,"column":27}},"87":{"start":{"line":250,"column":0},"end":{"line":303,"column":1}},"88":{"start":{"line":251,"column":4},"end":{"line":252,"column":44}},"89":{"start":{"line":253,"column":4},"end":{"line":253,"column":33}},"90":{"start":{"line":253,"column":24},"end":{"line":253,"column":31}},"91":{"start":{"line":255,"column":4},"end":{"line":302,"column":7}},"92":{"start":{"line":256,"column":8},"end":{"line":269,"column":17}},"93":{"start":{"line":257,"column":60},"end":{"line":257,"column":73}},"94":{"start":{"line":271,"column":8},"end":{"line":301,"column":9}},"95":{"start":{"line":272,"column":12},"end":{"line":300,"column":13}},"96":{"start":{"line":273,"column":16},"end":{"line":273,"column":39}},"97":{"start":{"line":274,"column":16},"end":{"line":274,"column":36}},"98":{"start":{"line":275,"column":16},"end":{"line":275,"column":48}},"99":{"start":{"line":276,"column":16},"end":{"line":276,"column":45}},"100":{"start":{"line":277,"column":16},"end":{"line":277,"column":45}},"101":{"start":{"line":278,"column":16},"end":{"line":278,"column":44}},"102":{"start":{"line":279,"column":16},"end":{"line":279,"column":40}},"103":{"start":{"line":280,"column":16},"end":{"line":280,"column":151}},"104":{"start":{"line":281,"column":16},"end":{"line":281,"column":46}},"105":{"start":{"line":283,"column":16},"end":{"line":299,"column":17}},"106":{"start":{"line":284,"column":20},"end":{"line":287,"column":21}},"107":{"start":{"line":285,"column":24},"end":{"line":285,"column":44}},"108":{"start":{"line":286,"column":24},"end":{"line":286,"column":81}},"109":{"start":{"line":288,"column":20},"end":{"line":288,"column":58}},"110":{"start":{"line":289,"column":20},"end":{"line":298,"column":21}},"111":{"start":{"line":290,"column":24},"end":{"line":292,"column":85}},"112":{"start":{"line":294,"column":24},"end":{"line":297,"column":39}},"113":{"start":{"line":305,"column":0},"end":{"line":313,"column":1}},"114":{"start":{"line":306,"column":4},"end":{"line":307,"column":22}},"115":{"start":{"line":308,"column":4},"end":{"line":312,"column":5}},"116":{"start":{"line":309,"column":8},"end":{"line":309,"column":101}},"117":{"start":{"line":311,"column":8},"end":{"line":311,"column":18}},"118":{"start":{"line":315,"column":0},"end":{"line":318,"column":1}},"119":{"start":{"line":316,"column":4},"end":{"line":316,"column":30}},"120":{"start":{"line":317,"column":4},"end":{"line":317,"column":60}},"121":{"start":{"line":320,"column":0},"end":{"line":327,"column":1}},"122":{"start":{"line":321,"column":4},"end":{"line":323,"column":5}},"123":{"start":{"line":322,"column":8},"end":{"line":322,"column":20}},"124":{"start":{"line":325,"column":4},"end":{"line":325,"column":40}},"125":{"start":{"line":326,"column":4},"end":{"line":326,"column":47}},"126":{"start":{"line":345,"column":0},"end":{"line":355,"column":1}},"127":{"start":{"line":346,"column":4},"end":{"line":346,"column":22}},"128":{"start":{"line":347,"column":4},"end":{"line":347,"column":27}},"129":{"start":{"line":348,"column":4},"end":{"line":348,"column":80}},"130":{"start":{"line":349,"column":4},"end":{"line":350,"column":57}},"131":{"start":{"line":351,"column":4},"end":{"line":351,"column":77}},"132":{"start":{"line":352,"column":4},"end":{"line":352,"column":48}},"133":{"start":{"line":353,"column":4},"end":{"line":353,"column":50}},"134":{"start":{"line":354,"column":4},"end":{"line":354,"column":73}},"135":{"start":{"line":357,"column":0},"end":{"line":357,"column":25}},"136":{"start":{"line":358,"column":0},"end":{"line":358,"column":34}},"137":{"start":{"line":360,"column":0},"end":{"line":569,"column":3}},"138":{"start":{"line":363,"column":8},"end":{"line":363,"column":77}},"139":{"start":{"line":367,"column":8},"end":{"line":370,"column":14}},"140":{"start":{"line":372,"column":8},"end":{"line":375,"column":9}},"141":{"start":{"line":373,"column":12},"end":{"line":373,"column":34}},"142":{"start":{"line":374,"column":12},"end":{"line":374,"column":35}},"143":{"start":{"line":377,"column":8},"end":{"line":380,"column":9}},"144":{"start":{"line":378,"column":12},"end":{"line":379,"column":79}},"145":{"start":{"line":381,"column":8},"end":{"line":381,"column":27}},"146":{"start":{"line":382,"column":8},"end":{"line":383,"column":53}},"147":{"start":{"line":387,"column":8},"end":{"line":388,"column":41}},"148":{"start":{"line":390,"column":8},"end":{"line":390,"column":55}},"149":{"start":{"line":391,"column":8},"end":{"line":391,"column":44}},"150":{"start":{"line":392,"column":8},"end":{"line":392,"column":103}},"151":{"start":{"line":393,"column":8},"end":{"line":393,"column":67}},"152":{"start":{"line":394,"column":8},"end":{"line":396,"column":10}},"153":{"start":{"line":397,"column":8},"end":{"line":400,"column":10}},"154":{"start":{"line":401,"column":8},"end":{"line":404,"column":10}},"155":{"start":{"line":407,"column":8},"end":{"line":415,"column":20}},"156":{"start":{"line":414,"column":51},"end":{"line":414,"column":62}},"157":{"start":{"line":414,"column":63},"end":{"line":414,"column":137}},"158":{"start":{"line":417,"column":8},"end":{"line":417,"column":84}},"159":{"start":{"line":419,"column":8},"end":{"line":419,"column":46}},"160":{"start":{"line":420,"column":8},"end":{"line":420,"column":51}},"161":{"start":{"line":421,"column":8},"end":{"line":421,"column":56}},"162":{"start":{"line":423,"column":8},"end":{"line":423,"column":48}},"163":{"start":{"line":426,"column":8},"end":{"line":426,"column":51}},"164":{"start":{"line":427,"column":8},"end":{"line":427,"column":52}},"165":{"start":{"line":428,"column":8},"end":{"line":428,"column":53}},"166":{"start":{"line":430,"column":8},"end":{"line":430,"column":27}},"167":{"start":{"line":431,"column":8},"end":{"line":435,"column":10}},"168":{"start":{"line":436,"column":8},"end":{"line":436,"column":46}},"169":{"start":{"line":437,"column":8},"end":{"line":437,"column":41}},"170":{"start":{"line":438,"column":8},"end":{"line":438,"column":51}},"171":{"start":{"line":442,"column":8},"end":{"line":445,"column":46}},"172":{"start":{"line":447,"column":8},"end":{"line":449,"column":11}},"173":{"start":{"line":448,"column":12},"end":{"line":448,"column":44}},"174":{"start":{"line":451,"column":8},"end":{"line":451,"column":46}},"175":{"start":{"line":452,"column":8},"end":{"line":452,"column":51}},"176":{"start":{"line":453,"column":8},"end":{"line":453,"column":41}},"177":{"start":{"line":454,"column":8},"end":{"line":469,"column":11}},"178":{"start":{"line":455,"column":12},"end":{"line":467,"column":18}},"179":{"start":{"line":468,"column":12},"end":{"line":468,"column":59}},"180":{"start":{"line":470,"column":8},"end":{"line":470,"column":41}},"181":{"start":{"line":471,"column":8},"end":{"line":471,"column":51}},"182":{"start":{"line":475,"column":8},"end":{"line":477,"column":22}},"183":{"start":{"line":478,"column":8},"end":{"line":478,"column":73}},"184":{"start":{"line":478,"column":33},"end":{"line":478,"column":71}},"185":{"start":{"line":479,"column":8},"end":{"line":481,"column":11}},"186":{"start":{"line":480,"column":12},"end":{"line":480,"column":53}},"187":{"start":{"line":482,"column":8},"end":{"line":492,"column":11}},"188":{"start":{"line":483,"column":12},"end":{"line":491,"column":13}},"189":{"start":{"line":484,"column":16},"end":{"line":484,"column":97}},"190":{"start":{"line":486,"column":16},"end":{"line":486,"column":76}},"191":{"start":{"line":487,"column":16},"end":{"line":487,"column":81}},"192":{"start":{"line":487,"column":41},"end":{"line":487,"column":79}},"193":{"start":{"line":488,"column":16},"end":{"line":490,"column":19}},"194":{"start":{"line":489,"column":20},"end":{"line":489,"column":108}},"195":{"start":{"line":496,"column":8},"end":{"line":531,"column":10}},"196":{"start":{"line":498,"column":16},"end":{"line":498,"column":64}},"197":{"start":{"line":500,"column":16},"end":{"line":500,"column":98}},"198":{"start":{"line":503,"column":16},"end":{"line":510,"column":22}},"199":{"start":{"line":505,"column":24},"end":{"line":505,"column":44}},"200":{"start":{"line":512,"column":16},"end":{"line":519,"column":17}},"201":{"start":{"line":513,"column":20},"end":{"line":513,"column":87}},"202":{"start":{"line":514,"column":20},"end":{"line":514,"column":50}},"203":{"start":{"line":515,"column":20},"end":{"line":517,"column":21}},"204":{"start":{"line":516,"column":24},"end":{"line":516,"column":38}},"205":{"start":{"line":518,"column":20},"end":{"line":518,"column":39}},"206":{"start":{"line":520,"column":16},"end":{"line":520,"column":28}},"207":{"start":{"line":523,"column":16},"end":{"line":523,"column":67}},"208":{"start":{"line":526,"column":16},"end":{"line":527,"column":41}},"209":{"start":{"line":528,"column":16},"end":{"line":528,"column":66}},"210":{"start":{"line":528,"column":33},"end":{"line":528,"column":40}},"211":{"start":{"line":528,"column":41},"end":{"line":528,"column":64}},"212":{"start":{"line":529,"column":16},"end":{"line":529,"column":57}},"213":{"start":{"line":535,"column":8},"end":{"line":555,"column":14}},"214":{"start":{"line":542,"column":16},"end":{"line":542,"column":77}},"215":{"start":{"line":543,"column":16},"end":{"line":554,"column":19}},"216":{"start":{"line":544,"column":20},"end":{"line":546,"column":59}},"217":{"start":{"line":548,"column":20},"end":{"line":553,"column":21}},"218":{"start":{"line":549,"column":24},"end":{"line":551,"column":25}},"219":{"start":{"line":550,"column":28},"end":{"line":550,"column":79}},"220":{"start":{"line":552,"column":24},"end":{"line":552,"column":77}},"221":{"start":{"line":557,"column":8},"end":{"line":559,"column":11}},"222":{"start":{"line":558,"column":12},"end":{"line":558,"column":112}},"223":{"start":{"line":560,"column":8},"end":{"line":560,"column":43}},"224":{"start":{"line":561,"column":8},"end":{"line":563,"column":11}},"225":{"start":{"line":562,"column":12},"end":{"line":562,"column":31}},"226":{"start":{"line":564,"column":8},"end":{"line":564,"column":62}},"227":{"start":{"line":564,"column":40},"end":{"line":564,"column":58}},"228":{"start":{"line":566,"column":8},"end":{"line":566,"column":59}},"229":{"start":{"line":567,"column":8},"end":{"line":567,"column":22}},"230":{"start":{"line":571,"column":0},"end":{"line":571,"column":28}}},"branchMap":{"1":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"2":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":8}},{"start":{"line":79,"column":8},"end":{"line":79,"column":8}}]},"3":{"line":92,"type":"cond-expr","locations":[{"start":{"line":94,"column":42},"end":{"line":94,"column":44}},{"start":{"line":94,"column":47},"end":{"line":94,"column":60}}]},"4":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"5":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":24}},{"start":{"line":103,"column":28},"end":{"line":103,"column":43}},{"start":{"line":103,"column":47},"end":{"line":103,"column":61}}]},"6":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"7":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":56},"end":{"line":108,"column":69}},{"start":{"line":108,"column":71},"end":{"line":108,"column":97}}]},"8":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"9":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":54},"end":{"line":109,"column":66}},{"start":{"line":109,"column":69},"end":{"line":109,"column":93}}]},"10":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"11":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":52},"end":{"line":110,"column":62}},{"start":{"line":110,"column":65},"end":{"line":110,"column":87}}]},"12":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"13":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":140,"column":12}},{"start":{"line":140,"column":12},"end":{"line":140,"column":12}}]},"14":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":19},"end":{"line":165,"column":42}},{"start":{"line":165,"column":46},"end":{"line":165,"column":54}}]},"15":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"16":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":179,"column":8}},{"start":{"line":179,"column":8},"end":{"line":179,"column":8}}]},"17":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":59},"end":{"line":180,"column":64}},{"start":{"line":180,"column":67},"end":{"line":180,"column":71}}]},"18":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":8}},{"start":{"line":184,"column":8},"end":{"line":184,"column":8}}]},"19":{"line":196,"type":"cond-expr","locations":[{"start":{"line":196,"column":31},"end":{"line":196,"column":36}},{"start":{"line":196,"column":39},"end":{"line":196,"column":43}}]},"20":{"line":201,"type":"cond-expr","locations":[{"start":{"line":201,"column":58},"end":{"line":201,"column":70}},{"start":{"line":201,"column":73},"end":{"line":201,"column":83}}]},"21":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":8}},{"start":{"line":205,"column":8},"end":{"line":205,"column":8}}]},"22":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":12},"end":{"line":206,"column":12}},{"start":{"line":206,"column":12},"end":{"line":206,"column":12}}]},"23":{"line":213,"type":"cond-expr","locations":[{"start":{"line":213,"column":40},"end":{"line":213,"column":46}},{"start":{"line":213,"column":49},"end":{"line":213,"column":70}}]},"24":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"25":{"line":227,"type":"cond-expr","locations":[{"start":{"line":227,"column":31},"end":{"line":227,"column":36}},{"start":{"line":227,"column":39},"end":{"line":227,"column":43}}]},"26":{"line":232,"type":"cond-expr","locations":[{"start":{"line":232,"column":58},"end":{"line":232,"column":70}},{"start":{"line":232,"column":73},"end":{"line":232,"column":83}}]},"27":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":8},"end":{"line":236,"column":8}},{"start":{"line":236,"column":8},"end":{"line":236,"column":8}}]},"28":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":12},"end":{"line":237,"column":12}},{"start":{"line":237,"column":12},"end":{"line":237,"column":12}}]},"29":{"line":244,"type":"cond-expr","locations":[{"start":{"line":244,"column":40},"end":{"line":244,"column":46}},{"start":{"line":244,"column":49},"end":{"line":244,"column":70}}]},"30":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":4},"end":{"line":253,"column":4}},{"start":{"line":253,"column":4},"end":{"line":253,"column":4}}]},"31":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":8},"end":{"line":271,"column":8}},{"start":{"line":271,"column":8},"end":{"line":271,"column":8}}]},"32":{"line":275,"type":"cond-expr","locations":[{"start":{"line":275,"column":35},"end":{"line":275,"column":40}},{"start":{"line":275,"column":43},"end":{"line":275,"column":47}}]},"33":{"line":280,"type":"cond-expr","locations":[{"start":{"line":280,"column":79},"end":{"line":280,"column":93}},{"start":{"line":280,"column":96},"end":{"line":280,"column":108}}]},"34":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":16},"end":{"line":283,"column":16}},{"start":{"line":283,"column":16},"end":{"line":283,"column":16}}]},"35":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":20},"end":{"line":284,"column":20}},{"start":{"line":284,"column":20},"end":{"line":284,"column":20}}]},"36":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":20},"end":{"line":289,"column":20}},{"start":{"line":289,"column":20},"end":{"line":289,"column":20}}]},"37":{"line":290,"type":"cond-expr","locations":[{"start":{"line":290,"column":83},"end":{"line":290,"column":99}},{"start":{"line":290,"column":102},"end":{"line":290,"column":121}}]},"38":{"line":291,"type":"cond-expr","locations":[{"start":{"line":291,"column":45},"end":{"line":291,"column":49}},{"start":{"line":291,"column":52},"end":{"line":291,"column":58}}]},"39":{"line":292,"type":"cond-expr","locations":[{"start":{"line":292,"column":39},"end":{"line":292,"column":42}},{"start":{"line":292,"column":45},"end":{"line":292,"column":48}}]},"40":{"line":296,"type":"cond-expr","locations":[{"start":{"line":296,"column":52},"end":{"line":296,"column":58}},{"start":{"line":296,"column":61},"end":{"line":296,"column":82}}]},"41":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"42":{"line":309,"type":"cond-expr","locations":[{"start":{"line":309,"column":45},"end":{"line":309,"column":51}},{"start":{"line":309,"column":54},"end":{"line":309,"column":100}}]},"43":{"line":309,"type":"cond-expr","locations":[{"start":{"line":309,"column":84},"end":{"line":309,"column":92}},{"start":{"line":309,"column":95},"end":{"line":309,"column":100}}]},"44":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":14},"end":{"line":316,"column":22}},{"start":{"line":316,"column":26},"end":{"line":316,"column":29}}]},"45":{"line":317,"type":"cond-expr","locations":[{"start":{"line":317,"column":27},"end":{"line":317,"column":52}},{"start":{"line":317,"column":55},"end":{"line":317,"column":59}}]},"46":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":321,"column":4}},{"start":{"line":321,"column":4},"end":{"line":321,"column":4}}]},"47":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":11},"end":{"line":326,"column":16}},{"start":{"line":326,"column":20},"end":{"line":326,"column":46}}]},"48":{"line":347,"type":"binary-expr","locations":[{"start":{"line":347,"column":16},"end":{"line":347,"column":20}},{"start":{"line":347,"column":24},"end":{"line":347,"column":26}}]},"49":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":20},"end":{"line":348,"column":33}},{"start":{"line":348,"column":37},"end":{"line":348,"column":79}}]},"50":{"line":349,"type":"cond-expr","locations":[{"start":{"line":350,"column":8},"end":{"line":350,"column":32}},{"start":{"line":350,"column":35},"end":{"line":350,"column":56}}]},"51":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":27},"end":{"line":351,"column":47}},{"start":{"line":351,"column":51},"end":{"line":351,"column":76}}]},"52":{"line":352,"type":"binary-expr","locations":[{"start":{"line":352,"column":23},"end":{"line":352,"column":39}},{"start":{"line":352,"column":43},"end":{"line":352,"column":47}}]},"53":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":27},"end":{"line":354,"column":47}},{"start":{"line":354,"column":51},"end":{"line":354,"column":72}}]},"54":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":17},"end":{"line":379,"column":52}},{"start":{"line":379,"column":56},"end":{"line":379,"column":67}}]},"55":{"line":382,"type":"cond-expr","locations":[{"start":{"line":382,"column":37},"end":{"line":383,"column":46}},{"start":{"line":383,"column":49},"end":{"line":383,"column":52}}]},"56":{"line":390,"type":"binary-expr","locations":[{"start":{"line":390,"column":30},"end":{"line":390,"column":39}},{"start":{"line":390,"column":43},"end":{"line":390,"column":54}}]},"57":{"line":410,"type":"cond-expr","locations":[{"start":{"line":411,"column":16},"end":{"line":411,"column":51}},{"start":{"line":411,"column":54},"end":{"line":411,"column":88}}]},"58":{"line":410,"type":"binary-expr","locations":[{"start":{"line":410,"column":25},"end":{"line":410,"column":42}},{"start":{"line":410,"column":46},"end":{"line":410,"column":78}}]},"59":{"line":448,"type":"cond-expr","locations":[{"start":{"line":448,"column":37},"end":{"line":448,"column":39}},{"start":{"line":448,"column":42},"end":{"line":448,"column":43}}]},"60":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":8},"end":{"line":478,"column":8}},{"start":{"line":478,"column":8},"end":{"line":478,"column":8}}]},"61":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":12},"end":{"line":483,"column":12}},{"start":{"line":483,"column":12},"end":{"line":483,"column":12}}]},"62":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":16},"end":{"line":487,"column":16}},{"start":{"line":487,"column":16},"end":{"line":487,"column":16}}]},"63":{"line":500,"type":"cond-expr","locations":[{"start":{"line":500,"column":45},"end":{"line":500,"column":72}},{"start":{"line":500,"column":75},"end":{"line":500,"column":97}}]},"64":{"line":538,"type":"binary-expr","locations":[{"start":{"line":538,"column":21},"end":{"line":538,"column":32}},{"start":{"line":538,"column":36},"end":{"line":538,"column":56}}]},"65":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":20},"end":{"line":548,"column":20}},{"start":{"line":548,"column":20},"end":{"line":548,"column":20}}]},"66":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":24},"end":{"line":549,"column":24}},{"start":{"line":549,"column":24},"end":{"line":549,"column":24}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","/*jshint maxlen: 300 */","var handlebars = require('handlebars').create(),","    defaults = require('./common/defaults'),","    path = require('path'),","    fs = require('fs'),","    util = require('util'),","    FileWriter = require('../util/file-writer'),","    Report = require('./index'),","    Store = require('../store'),","    InsertionText = require('../util/insertion-text'),","    TreeSummarizer = require('../util/tree-summarizer'),","    utils = require('../object-utils'),","    templateFor = function (name) { return handlebars.compile(fs.readFileSync(path.resolve(__dirname, 'templates', name + '.txt'), 'utf8')); },","    headerTemplate = templateFor('head'),","    footerTemplate = templateFor('foot'),","    detailTemplate = handlebars.compile([","        '<tr>',","        '<td class=\"line-count quiet\">{{#show_lines}}{{maxLines}}{{/show_lines}}</td>',","        '<td class=\"line-coverage quiet\">{{#show_line_execution_counts fileCoverage}}{{maxLines}}{{/show_line_execution_counts}}</td>',","        '<td class=\"text\"><pre class=\"prettyprint lang-js\">{{#show_code structured}}{{/show_code}}</pre></td>',","        '</tr>\\n'","    ].join('')),","    summaryTableHeader = [","        '<div class=\"pad1\">',","        '<table class=\"coverage-summary\">',","        '<thead>',","        '<tr>',","        '   <th data-col=\"file\" data-fmt=\"html\" data-html=\"true\" class=\"file\">File</th>',","        '   <th data-col=\"pic\" data-type=\"number\" data-fmt=\"html\" data-html=\"true\" class=\"pic\"></th>',","        '   <th data-col=\"statements\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Statements</th>',","        '   <th data-col=\"statements_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>',","        '   <th data-col=\"branches\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Branches</th>',","        '   <th data-col=\"branches_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>',","        '   <th data-col=\"functions\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Functions</th>',","        '   <th data-col=\"functions_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>',","        '   <th data-col=\"lines\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Lines</th>',","        '   <th data-col=\"lines_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>',","        '</tr>',","        '</thead>',","        '<tbody>'","    ].join('\\n'),","    summaryLineTemplate = handlebars.compile([","        '<tr>',","        '<td class=\"file {{reportClasses.statements}}\" data-value=\"{{file}}\"><a href=\"{{output}}\">{{file}}</a></td>',","        '<td data-value=\"{{metrics.statements.pct}}\" class=\"pic {{reportClasses.statements}}\"><div class=\"chart\">{{#show_picture}}{{metrics.statements.pct}}{{/show_picture}}</div></td>',","        '<td data-value=\"{{metrics.statements.pct}}\" class=\"pct {{reportClasses.statements}}\">{{metrics.statements.pct}}%</td>',","        '<td data-value=\"{{metrics.statements.total}}\" class=\"abs {{reportClasses.statements}}\">{{metrics.statements.covered}}/{{metrics.statements.total}}</td>',","        '<td data-value=\"{{metrics.branches.pct}}\" class=\"pct {{reportClasses.branches}}\">{{metrics.branches.pct}}%</td>',","        '<td data-value=\"{{metrics.branches.total}}\" class=\"abs {{reportClasses.branches}}\">{{metrics.branches.covered}}/{{metrics.branches.total}}</td>',","        '<td data-value=\"{{metrics.functions.pct}}\" class=\"pct {{reportClasses.functions}}\">{{metrics.functions.pct}}%</td>',","        '<td data-value=\"{{metrics.functions.total}}\" class=\"abs {{reportClasses.functions}}\">{{metrics.functions.covered}}/{{metrics.functions.total}}</td>',","        '<td data-value=\"{{metrics.lines.pct}}\" class=\"pct {{reportClasses.lines}}\">{{metrics.lines.pct}}%</td>',","        '<td data-value=\"{{metrics.lines.total}}\" class=\"abs {{reportClasses.lines}}\">{{metrics.lines.covered}}/{{metrics.lines.total}}</td>',","        '</tr>\\n'","    ].join('\\n\\t')),","    summaryTableFooter = [","        '</tbody>',","        '</table>',","        '</div>'","    ].join('\\n'),","    lt = '\\u0001',","    gt = '\\u0002',","    RE_LT = /</g,","    RE_GT = />/g,","    RE_AMP = /&/g,","    RE_lt = /\\u0001/g,","    RE_gt = /\\u0002/g;","","handlebars.registerHelper('show_picture', function (opts) {","    var num = Number(opts.fn(this)),","        rest,","        cls = '';","    if (isFinite(num)) {","        if (num === 100) {","            cls = ' cover-full';","        }","        num = Math.floor(num);","        rest = 100 - num;","        return '<div class=\"cover-fill' + cls + '\" style=\"width: ' + num + '%;\"></div>' +","            '<div class=\"cover-empty\" style=\"width:' + rest + '%;\"></div>';","    } else {","        return '';","    }","});","","handlebars.registerHelper('if_has_ignores', function (metrics, opts) {","    return (metrics.statements.skipped +","        metrics.functions.skipped +","        metrics.branches.skipped) === 0 ? '' : opts.fn(this);","});","","handlebars.registerHelper('show_ignores', function (metrics) {","    var statements = metrics.statements.skipped,","        functions = metrics.functions.skipped,","        branches = metrics.branches.skipped,","        result;","","    if (statements === 0 && functions === 0 && branches === 0) {","        return '<span class=\"ignore-none\">none</span>';","    }","","    result = [];","    if (statements >0) { result.push(statements === 1 ? '1 statement': statements + ' statements'); }","    if (functions >0) { result.push(functions === 1 ? '1 function' : functions + ' functions'); }","    if (branches >0) { result.push(branches === 1 ? '1 branch' : branches + ' branches'); }","","    return result.join(', ');","});","","handlebars.registerHelper('show_lines', function (opts) {","    var maxLines = Number(opts.fn(this)),","        i,","        array = [];","","    for (i = 0; i < maxLines; i += 1) {","        array[i] = i + 1;","    }","    return array.join('\\n');","});","","handlebars.registerHelper('show_line_execution_counts', function (context, opts) {","    var lines = context.l,","        maxLines = Number(opts.fn(this)),","        i,","        lineNumber,","        array = [],","        covered,","        value = '';","","    for (i = 0; i < maxLines; i += 1) {","        lineNumber = i + 1;","        value = '&nbsp;';","        covered = 'neutral';","        if (lines.hasOwnProperty(lineNumber)) {","            if (lines[lineNumber] > 0) {","                covered = 'yes';","                value = lines[lineNumber] + '×';","            } else {","                covered = 'no';","            }","        }","        array.push('<span class=\"cline-any cline-' + covered + '\">' + value + '</span>');","    }","    return array.join('\\n');","});","","function customEscape(text) {","    text = text.toString();","    return text.replace(RE_AMP, '&amp;')","        .replace(RE_LT, '&lt;')","        .replace(RE_GT, '&gt;')","        .replace(RE_lt, '<')","        .replace(RE_gt, '>');","}","","handlebars.registerHelper('show_code', function (context /*, opts */) {","    var array = [];","","    context.forEach(function (item) {","        array.push(customEscape(item.text) || '&nbsp;');","    });","    return array.join('\\n');","});","","function title(str) {","    return ' title=\"' + str + '\" ';","}","","function annotateLines(fileCoverage, structuredText) {","    var lineStats = fileCoverage.l;","    if (!lineStats) { return; }","    Object.keys(lineStats).forEach(function (lineNumber) {","        var count = lineStats[lineNumber];","        if (structuredText[lineNumber]) {","          structuredText[lineNumber].covered = count > 0 ? 'yes' : 'no';","        }","    });","    structuredText.forEach(function (item) {","        if (item.covered === null) {","            item.covered = 'neutral';","        }","    });","}","","function annotateStatements(fileCoverage, structuredText) {","    var statementStats = fileCoverage.s,","        statementMeta = fileCoverage.statementMap;","    Object.keys(statementStats).forEach(function (stName) {","        var count = statementStats[stName],","            meta = statementMeta[stName],","            type = count > 0 ? 'yes' : 'no',","            startCol = meta.start.column,","            endCol = meta.end.column + 1,","            startLine = meta.start.line,","            endLine = meta.end.line,","            openSpan = lt + 'span class=\"' + (meta.skip ? 'cstat-skip' : 'cstat-no') + '\"' + title('statement not covered') + gt,","            closeSpan = lt + '/span' + gt,","            text;","","        if (type === 'no') {","            if (endLine !== startLine) {","                endLine = startLine;","                endCol = structuredText[startLine].text.originalLength();","            }","            text = structuredText[startLine].text;","            text.wrap(startCol,","                openSpan,","                startLine === endLine ? endCol : text.originalLength(),","                closeSpan);","        }","    });","}","","function annotateFunctions(fileCoverage, structuredText) {","","    var fnStats = fileCoverage.f,","        fnMeta = fileCoverage.fnMap;","    if (!fnStats) { return; }","    Object.keys(fnStats).forEach(function (fName) {","        var count = fnStats[fName],","            meta = fnMeta[fName],","            type = count > 0 ? 'yes' : 'no',","            startCol = meta.loc.start.column,","            endCol = meta.loc.end.column + 1,","            startLine = meta.loc.start.line,","            endLine = meta.loc.end.line,","            openSpan = lt + 'span class=\"' + (meta.skip ? 'fstat-skip' : 'fstat-no') + '\"' + title('function not covered') + gt,","            closeSpan = lt + '/span' + gt,","            text;","","        if (type === 'no') {","            if (endLine !== startLine) {","                endLine = startLine;","                endCol = structuredText[startLine].text.originalLength();","            }","            text = structuredText[startLine].text;","            text.wrap(startCol,","                openSpan,","                startLine === endLine ? endCol : text.originalLength(),","                closeSpan);","        }","    });","}","","function annotateBranches(fileCoverage, structuredText) {","    var branchStats = fileCoverage.b,","        branchMeta = fileCoverage.branchMap;","    if (!branchStats) { return; }","","    Object.keys(branchStats).forEach(function (branchName) {","        var branchArray = branchStats[branchName],","            sumCount = branchArray.reduce(function (p, n) { return p + n; }, 0),","            metaArray = branchMeta[branchName].locations,","            i,","            count,","            meta,","            type,","            startCol,","            endCol,","            startLine,","            endLine,","            openSpan,","            closeSpan,","            text;","","        if (sumCount > 0) { //only highlight if partial branches are missing","            for (i = 0; i < branchArray.length; i += 1) {","                count = branchArray[i];","                meta = metaArray[i];","                type = count > 0 ? 'yes' : 'no';","                startCol = meta.start.column;","                endCol = meta.end.column + 1;","                startLine = meta.start.line;","                endLine = meta.end.line;","                openSpan = lt + 'span class=\"branch-' + i + ' ' + (meta.skip ? 'cbranch-skip' : 'cbranch-no') + '\"' + title('branch not covered') + gt;","                closeSpan = lt + '/span' + gt;","","                if (count === 0) { //skip branches taken","                    if (endLine !== startLine) {","                        endLine = startLine;","                        endCol = structuredText[startLine].text.originalLength();","                    }","                    text = structuredText[startLine].text;","                    if (branchMeta[branchName].type === 'if') { // and 'if' is a special case since the else branch might not be visible, being non-existent","                        text.insertAt(startCol, lt + 'span class=\"' + (meta.skip ? 'skip-if-branch' : 'missing-if-branch') + '\"' +","                            title((i === 0 ? 'if' : 'else') + ' path not taken') + gt +","                            (i === 0 ? 'I' : 'E')  + lt + '/span' + gt, true, false);","                    } else {","                        text.wrap(startCol,","                            openSpan,","                            startLine === endLine ? endCol : text.originalLength(),","                            closeSpan);","                    }","                }","            }","        }","    });","}","","function getReportClass(stats, watermark) {","    var coveragePct = stats.pct,","        identity  = 1;","    if (coveragePct * identity === coveragePct) {","        return coveragePct >= watermark[1] ? 'high' : coveragePct >= watermark[0] ? 'medium' : 'low';","    } else {","        return '';","    }","}","","function cleanPath(name) {","    var SEP = path.sep || '/';","    return (SEP !== '/') ? name.split(SEP).join('/') : name;","}","","function isEmptySourceStore(sourceStore) {","    if (!sourceStore) {","        return true;","    }","","    var cache = sourceStore.sourceCache;","    return cache && !Object.keys(cache).length;","}","","/**"," * a `Report` implementation that produces HTML coverage reports."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('html');"," *"," *"," * @class HtmlReport"," * @extends Report"," * @module report"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.dir] the directory in which to generate reports. Defaults to `./html-report`"," */","function HtmlReport(opts) {","    Report.call(this);","    this.opts = opts || {};","    this.opts.dir = this.opts.dir || path.resolve(process.cwd(), 'html-report');","    this.opts.sourceStore = isEmptySourceStore(this.opts.sourceStore) ?","        Store.create('fslookup') : this.opts.sourceStore;","    this.opts.linkMapper = this.opts.linkMapper || this.standardLinkMapper();","    this.opts.writer = this.opts.writer || null;","    this.opts.templateData = { datetime: Date() };","    this.opts.watermarks = this.opts.watermarks || defaults.watermarks();","}","","HtmlReport.TYPE = 'html';","util.inherits(HtmlReport, Report);","","Report.mix(HtmlReport, {","","    synopsis: function () {","        return 'Navigable HTML coverage report for every file and directory';","    },","","    getPathHtml: function (node, linkMapper) {","        var parent = node.parent,","            nodePath = [],","            linkPath = [],","            i;","","        while (parent) {","            nodePath.push(parent);","            parent = parent.parent;","        }","","        for (i = 0; i < nodePath.length; i += 1) {","            linkPath.push('<a href=\"' + linkMapper.ancestor(node, i + 1) + '\">' +","                (cleanPath(nodePath[i].relativeName) || 'all files') + '</a>');","        }","        linkPath.reverse();","        return linkPath.length > 0 ? linkPath.join(' / ') + ' ' +","            cleanPath(node.displayShortName()) : '/';","    },","","    fillTemplate: function (node, templateData) {","        var opts = this.opts,","            linkMapper = opts.linkMapper;","","        templateData.entity = node.name || 'All files';","        templateData.metrics = node.metrics;","        templateData.reportClass = getReportClass(node.metrics.statements, opts.watermarks.statements);","        templateData.pathHtml = this.getPathHtml(node, linkMapper);","        templateData.base = {","        \tcss: linkMapper.asset(node, 'base.css')","        };","        templateData.sorter = {","            js: linkMapper.asset(node, 'sorter.js'),","            image: linkMapper.asset(node, 'sort-arrow-sprite.png')","        };","        templateData.prettify = {","            js: linkMapper.asset(node, 'prettify.js'),","            css: linkMapper.asset(node, 'prettify.css')","        };","    },","    writeDetailPage: function (writer, node, fileCoverage) {","        var opts = this.opts,","            sourceStore = opts.sourceStore,","            templateData = opts.templateData,","            sourceText = fileCoverage.code && Array.isArray(fileCoverage.code) ?","                fileCoverage.code.join('\\n') + '\\n' : sourceStore.get(fileCoverage.path),","            code = sourceText.split(/(?:\\r?\\n)|\\r/),","            count = 0,","            structured = code.map(function (str) { count += 1; return { line: count, covered: null, text: new InsertionText(str, true) }; }),","            context;","","        structured.unshift({ line: 0, covered: null, text: new InsertionText(\"\") });","","        this.fillTemplate(node, templateData);","        writer.write(headerTemplate(templateData));","        writer.write('<pre><table class=\"coverage\">\\n');","","        annotateLines(fileCoverage, structured);","        //note: order is important, since statements typically result in spanning the whole line and doing branches late","        //causes mismatched tags","        annotateBranches(fileCoverage, structured);","        annotateFunctions(fileCoverage, structured);","        annotateStatements(fileCoverage, structured);","","        structured.shift();","        context = {","            structured: structured,","            maxLines: structured.length,","            fileCoverage: fileCoverage","        };","        writer.write(detailTemplate(context));","        writer.write('</table></pre>\\n');","        writer.write(footerTemplate(templateData));","    },","","    writeIndexPage: function (writer, node) {","        var linkMapper = this.opts.linkMapper,","            templateData = this.opts.templateData,","            children = Array.prototype.slice.apply(node.children),","            watermarks = this.opts.watermarks;","","        children.sort(function (a, b) {","            return a.name < b.name ? -1 : 1;","        });","","        this.fillTemplate(node, templateData);","        writer.write(headerTemplate(templateData));","        writer.write(summaryTableHeader);","        children.forEach(function (child) {","            var metrics = child.metrics,","                reportClasses = {","                    statements: getReportClass(metrics.statements, watermarks.statements),","                    lines: getReportClass(metrics.lines, watermarks.lines),","                    functions: getReportClass(metrics.functions, watermarks.functions),","                    branches: getReportClass(metrics.branches, watermarks.branches)","                },","                data = {","                    metrics: metrics,","                    reportClasses: reportClasses,","                    file: cleanPath(child.displayShortName()),","                    output: linkMapper.fromParent(child)","                };","            writer.write(summaryLineTemplate(data) + '\\n');","        });","        writer.write(summaryTableFooter);","        writer.write(footerTemplate(templateData));","    },","","    writeFiles: function (writer, node, dir, collector) {","        var that = this,","            indexFile = path.resolve(dir, 'index.html'),","            childFile;","        if (this.opts.verbose) { console.error('Writing ' + indexFile); }","        writer.writeFile(indexFile, function (contentWriter) {","            that.writeIndexPage(contentWriter, node);","        });","        node.children.forEach(function (child) {","            if (child.kind === 'dir') {","                that.writeFiles(writer, child, path.resolve(dir, child.relativeName), collector);","            } else {","                childFile = path.resolve(dir, child.relativeName + '.html');","                if (that.opts.verbose) { console.error('Writing ' + childFile); }","                writer.writeFile(childFile, function (contentWriter) {","                    that.writeDetailPage(contentWriter, child, collector.fileCoverageFor(child.fullPath()));","                });","            }","        });","    },","","    standardLinkMapper: function () {","        return {","            fromParent: function (node) {","                var relativeName = cleanPath(node.relativeName);","","                return node.kind === 'dir' ? relativeName + 'index.html' : relativeName + '.html';","            },","            ancestorHref: function (node, num) {","                var href = '',","                    notDot = function(part) {","                        return part !== '.';","                    },","                    separated,","                    levels,","                    i,","                    j;","","                for (i = 0; i < num; i += 1) {","                    separated = cleanPath(node.relativeName).split('/').filter(notDot);","                    levels = separated.length - 1;","                    for (j = 0; j < levels; j += 1) {","                        href += '../';","                    }","                    node = node.parent;","                }","                return href;","            },","            ancestor: function (node, num) {","                return this.ancestorHref(node, num) + 'index.html';","            },","            asset: function (node, name) {","                var i = 0,","                    parent = node.parent;","                while (parent) { i += 1; parent = parent.parent; }","                return this.ancestorHref(node, i) + name;","            }","        };","    },","","    writeReport: function (collector, sync) {","        var opts = this.opts,","            dir = opts.dir,","            summarizer = new TreeSummarizer(),","            writer = opts.writer || new FileWriter(sync),","            that = this,","            tree,","            copyAssets = function (subdir) {","                var srcDir = path.resolve(__dirname, '..', 'assets', subdir);","                fs.readdirSync(srcDir).forEach(function (f) {","                    var resolvedSource = path.resolve(srcDir, f),","                        resolvedDestination = path.resolve(dir, f),","                        stat = fs.statSync(resolvedSource);","","                    if (stat.isFile()) {","                        if (opts.verbose) {","                            console.log('Write asset: ' + resolvedDestination);","                        }","                        writer.copyFile(resolvedSource, resolvedDestination);","                    }","                });","            };","","        collector.files().forEach(function (key) {","            summarizer.addFileCoverageSummary(key, utils.summarizeFileCoverage(collector.fileCoverageFor(key)));","        });","        tree = summarizer.getTreeSummary();","        [ '.', 'vendor'].forEach(function (subdir) {","            copyAssets(subdir);","        });","        writer.on('done', function () { that.emit('done'); });","        //console.log(JSON.stringify(tree.root, undefined, 4));","        this.writeFiles(writer, tree.root, dir, collector);","        writer.done();","    }","});","","module.exports = HtmlReport;","",""],"l":{"7":1,"18":2,"74":1,"75":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"87":0,"91":1,"92":0,"97":1,"98":0,"103":0,"104":0,"107":0,"108":0,"109":0,"110":0,"112":0,"115":1,"116":0,"120":0,"121":0,"123":0,"126":1,"127":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"144":0,"147":0,"149":0,"152":1,"153":0,"154":0,"161":1,"162":0,"164":0,"165":0,"167":0,"170":1,"171":0,"174":1,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"183":0,"184":0,"185":0,"190":1,"191":0,"193":0,"194":0,"205":0,"206":0,"207":0,"208":0,"210":0,"211":0,"219":1,"221":0,"223":0,"224":0,"225":0,"236":0,"237":0,"238":0,"239":0,"241":0,"242":0,"250":1,"251":0,"253":0,"255":0,"256":0,"257":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"283":0,"284":0,"285":0,"286":0,"288":0,"289":0,"290":0,"294":0,"305":1,"306":0,"308":0,"309":0,"311":0,"315":1,"316":0,"317":0,"320":1,"321":0,"322":0,"325":0,"326":0,"345":1,"346":0,"347":0,"348":0,"349":0,"351":0,"352":0,"353":0,"354":0,"357":1,"358":1,"360":1,"363":0,"367":0,"372":0,"373":0,"374":0,"377":0,"378":0,"381":0,"382":0,"387":0,"390":0,"391":0,"392":0,"393":0,"394":0,"397":0,"401":0,"407":0,"414":0,"417":0,"419":0,"420":0,"421":0,"423":0,"426":0,"427":0,"428":0,"430":0,"431":0,"436":0,"437":0,"438":0,"442":0,"447":0,"448":0,"451":0,"452":0,"453":0,"454":0,"455":0,"468":0,"470":0,"471":0,"475":0,"478":0,"479":0,"480":0,"482":0,"483":0,"484":0,"486":0,"487":0,"488":0,"489":0,"496":0,"498":0,"500":0,"503":0,"505":0,"512":0,"513":0,"514":0,"515":0,"516":0,"518":0,"520":0,"523":0,"526":0,"528":0,"529":0,"535":0,"542":0,"543":0,"544":0,"548":0,"549":0,"550":0,"552":0,"557":0,"558":0,"560":0,"561":0,"562":0,"564":0,"566":0,"567":0,"571":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/common/defaults.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/common/defaults.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":16},"end":{"line":10,"column":28}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":51}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":25,"column":36}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":25},"end":{"line":39,"column":37}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":39},"end":{"line":41,"column":55}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"3":{"start":{"line":9,"column":0},"end":{"line":50,"column":2}},"4":{"start":{"line":11,"column":8},"end":{"line":16,"column":10}},"5":{"start":{"line":20,"column":8},"end":{"line":21,"column":38}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":79}},"7":{"start":{"line":27,"column":8},"end":{"line":31,"column":10}},"8":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"9":{"start":{"line":34,"column":12},"end":{"line":34,"column":71}},"10":{"start":{"line":36,"column":8},"end":{"line":36,"column":19}},"11":{"start":{"line":40,"column":8},"end":{"line":40,"column":21}},"12":{"start":{"line":41,"column":8},"end":{"line":47,"column":11}},"13":{"start":{"line":42,"column":12},"end":{"line":43,"column":43}},"14":{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},"15":{"start":{"line":45,"column":16},"end":{"line":45,"column":30}},"16":{"start":{"line":48,"column":8},"end":{"line":48,"column":19}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":34},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":78}}]},"2":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":62},"end":{"line":22,"column":70}},{"start":{"line":22,"column":73},"end":{"line":22,"column":78}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"4":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":25}},{"start":{"line":33,"column":29},"end":{"line":33,"column":42}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":12}},{"start":{"line":44,"column":12},"end":{"line":44,"column":12}}]}},"code":["/*"," Copyright (c) 2013, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var Report  = require('../index');","var supportsColor = require('supports-color');","","module.exports = {","    watermarks: function () {","        return {","            statements: [ 50, 80 ],","            lines: [ 50, 80 ],","            functions: [ 50, 80],","            branches: [ 50, 80 ]","        };","    },","","    classFor: function (type, metrics, watermarks) {","        var mark = watermarks[type],","            value = metrics[type].pct;","        return value >= mark[1] ? 'high' : value >= mark[0] ? 'medium' : 'low';","    },","","    colorize: function (str, clazz) {","        /* istanbul ignore if: untestable in batch mode */","        var colors = {","            low: '31;1',","            medium: '33;1',","            high: '32;1'","        };","        ","        if (supportsColor && colors[clazz]) {","            return '\\u001b[' + colors[clazz] + 'm' + str + '\\u001b[0m';","        }","        return str;","    },","","    defaultReportConfig: function () {","        var cfg = {};","        Report.getReportList().forEach(function (type) {","            var rpt = Report.create(type),","                c = rpt.getDefaultConfig();","            if (c) {","                cfg[type] = c;","            }","        });","        return cfg;","    }","};","",""],"l":{"6":1,"7":1,"9":1,"11":0,"20":0,"22":0,"27":0,"33":0,"34":0,"36":0,"40":0,"41":0,"42":0,"44":0,"45":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/insertion-text.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/insertion-text.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"InsertionText","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":23},"end":{"line":19,"column":35}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":22},"end":{"line":32,"column":34}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":20},"end":{"line":45,"column":32}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":14},"end":{"line":49,"column":63}}},"6":{"name":"(anonymous_6)","line":71,"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":50}}},"7":{"name":"(anonymous_7)","line":94,"loc":{"start":{"line":94,"column":10},"end":{"line":94,"column":73}}},"8":{"name":"(anonymous_8)","line":100,"loc":{"start":{"line":100,"column":14},"end":{"line":100,"column":44}}},"9":{"name":"(anonymous_9)","line":104,"loc":{"start":{"line":104,"column":14},"end":{"line":104,"column":26}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":13,"column":1}},"2":{"start":{"line":7,"column":4},"end":{"line":7,"column":21}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":34}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":22}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":39}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":45}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":42}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":49}},"9":{"start":{"line":17,"column":0},"end":{"line":107,"column":2}},"10":{"start":{"line":20,"column":8},"end":{"line":23,"column":14}},"11":{"start":{"line":24,"column":8},"end":{"line":29,"column":9}},"12":{"start":{"line":25,"column":12},"end":{"line":28,"column":13}},"13":{"start":{"line":26,"column":16},"end":{"line":26,"column":24}},"14":{"start":{"line":27,"column":16},"end":{"line":27,"column":22}},"15":{"start":{"line":30,"column":8},"end":{"line":30,"column":19}},"16":{"start":{"line":33,"column":8},"end":{"line":36,"column":14}},"17":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"18":{"start":{"line":38,"column":12},"end":{"line":41,"column":13}},"19":{"start":{"line":39,"column":16},"end":{"line":39,"column":24}},"20":{"start":{"line":40,"column":16},"end":{"line":40,"column":22}},"21":{"start":{"line":43,"column":8},"end":{"line":43,"column":19}},"22":{"start":{"line":46,"column":8},"end":{"line":46,"column":31}},"23":{"start":{"line":50,"column":8},"end":{"line":50,"column":98}},"24":{"start":{"line":51,"column":8},"end":{"line":51,"column":72}},"25":{"start":{"line":52,"column":8},"end":{"line":52,"column":32}},"26":{"start":{"line":54,"column":8},"end":{"line":61,"column":9}},"27":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"28":{"start":{"line":56,"column":16},"end":{"line":56,"column":24}},"29":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"30":{"start":{"line":59,"column":16},"end":{"line":59,"column":38}},"31":{"start":{"line":63,"column":8},"end":{"line":66,"column":29}},"32":{"start":{"line":67,"column":8},"end":{"line":67,"column":79}},"33":{"start":{"line":68,"column":8},"end":{"line":68,"column":20}},"34":{"start":{"line":72,"column":8},"end":{"line":75,"column":14}},"35":{"start":{"line":77,"column":8},"end":{"line":85,"column":9}},"36":{"start":{"line":78,"column":12},"end":{"line":78,"column":35}},"37":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"38":{"start":{"line":80,"column":16},"end":{"line":80,"column":50}},"39":{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},"40":{"start":{"line":83,"column":16},"end":{"line":83,"column":22}},"41":{"start":{"line":86,"column":8},"end":{"line":90,"column":9}},"42":{"start":{"line":87,"column":12},"end":{"line":87,"column":33}},"43":{"start":{"line":89,"column":12},"end":{"line":89,"column":57}},"44":{"start":{"line":91,"column":8},"end":{"line":91,"column":32}},"45":{"start":{"line":95,"column":8},"end":{"line":95,"column":64}},"46":{"start":{"line":96,"column":8},"end":{"line":96,"column":61}},"47":{"start":{"line":97,"column":8},"end":{"line":97,"column":20}},"48":{"start":{"line":101,"column":8},"end":{"line":101,"column":64}},"49":{"start":{"line":105,"column":8},"end":{"line":105,"column":25}},"50":{"start":{"line":109,"column":0},"end":{"line":109,"column":31}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":12}},{"start":{"line":25,"column":12},"end":{"line":25,"column":12}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":12}},{"start":{"line":38,"column":12},"end":{"line":38,"column":12}}]},"3":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":63},"end":{"line":50,"column":81}},{"start":{"line":50,"column":84},"end":{"line":50,"column":97}}]},"4":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":44},"end":{"line":51,"column":65}},{"start":{"line":51,"column":68},"end":{"line":51,"column":71}}]},"5":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":24},"end":{"line":52,"column":25}},{"start":{"line":52,"column":28},"end":{"line":52,"column":31}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"7":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":12}},{"start":{"line":55,"column":12},"end":{"line":55,"column":12}}]},"8":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":12}},{"start":{"line":58,"column":12},"end":{"line":58,"column":12}}]},"9":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":79,"column":12}},{"start":{"line":79,"column":12},"end":{"line":79,"column":12}}]},"10":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":16},"end":{"line":79,"column":35}},{"start":{"line":79,"column":40},"end":{"line":79,"column":61}},{"start":{"line":79,"column":65},"end":{"line":79,"column":78}}]},"11":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":82,"column":12}},{"start":{"line":82,"column":12},"end":{"line":82,"column":12}}]},"12":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"13":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":12},"end":{"line":86,"column":21}},{"start":{"line":86,"column":25},"end":{"line":86,"column":46}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","function InsertionText(text, consumeBlanks) {","    this.text = text;","    this.origLength = text.length;","    this.offsets = [];","    this.consumeBlanks = consumeBlanks;","    this.startPos = this.findFirstNonBlank();","    this.endPos = this.findLastNonBlank();","}","","var WHITE_RE = /[ \\f\\n\\r\\t\\v\\u00A0\\u2028\\u2029]/;","","InsertionText.prototype = {","","    findFirstNonBlank: function () {","        var pos = -1,","            text = this.text,","            len = text.length,","            i;","        for (i = 0; i < len; i += 1) {","            if (!text.charAt(i).match(WHITE_RE)) {","                pos = i;","                break;","            }","        }","        return pos;","    },","    findLastNonBlank: function () {","        var text = this.text,","            len = text.length,","            pos = text.length + 1,","            i;","        for (i = len - 1; i >= 0; i -= 1) {","            if (!text.charAt(i).match(WHITE_RE)) {","                pos = i;","                break;","            }","        }","        return pos;","    },","    originalLength: function () {","        return this.origLength;","    },","","    insertAt: function (col, str, insertBefore, consumeBlanks) {","        consumeBlanks = typeof consumeBlanks === 'undefined' ? this.consumeBlanks : consumeBlanks;","        col = col > this.originalLength() ? this.originalLength() : col;","        col = col < 0 ? 0 : col;","","        if (consumeBlanks) {","            if (col <= this.startPos) {","                col = 0;","            }","            if (col > this.endPos) {","                col = this.origLength;","            }","        }","","        var len = str.length,","            offset = this.findOffset(col, len, insertBefore),","            realPos = col + offset,","            text = this.text;","        this.text = text.substring(0, realPos) + str + text.substring(realPos);","        return this;","    },","","    findOffset: function (pos, len, insertBefore) {","        var offsets = this.offsets,","            offsetObj,","            cumulativeOffset = 0,","            i;","","        for (i = 0; i < offsets.length; i += 1) {","            offsetObj = offsets[i];","            if (offsetObj.pos < pos || (offsetObj.pos === pos && !insertBefore)) {","                cumulativeOffset += offsetObj.len;","            }","            if (offsetObj.pos >= pos) {","                break;","            }","        }","        if (offsetObj && offsetObj.pos === pos) {","            offsetObj.len += len;","        } else {","            offsets.splice(i, 0, { pos: pos, len: len });","        }","        return cumulativeOffset;","    },","","    wrap: function (startPos, startText, endPos, endText, consumeBlanks) {","        this.insertAt(startPos, startText, true, consumeBlanks);","        this.insertAt(endPos, endText, false, consumeBlanks);","        return this;","    },","","    wrapLine: function (startText, endText) {","        this.wrap(0, startText, this.originalLength(), endText);","    },","","    toString: function () {","        return this.text;","    }","};","","module.exports = InsertionText;"],"l":{"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"15":1,"17":1,"20":0,"24":0,"25":0,"26":0,"27":0,"30":0,"33":0,"37":0,"38":0,"39":0,"40":0,"43":0,"46":0,"50":0,"51":0,"52":0,"54":0,"55":0,"56":0,"58":0,"59":0,"63":0,"67":0,"68":0,"72":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"86":0,"87":0,"89":0,"91":0,"95":0,"96":0,"97":0,"101":0,"105":0,"109":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/json-summary.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/json-summary.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"JsonSummaryReport","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":33}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":14},"end":{"line":37,"column":26}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":22},"end":{"line":40,"column":34}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":17},"end":{"line":45,"column":44}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":34},"end":{"line":52,"column":50}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":26},"end":{"line":57,"column":38}}},"7":{"name":"(anonymous_7)","line":58,"loc":{"start":{"line":58,"column":37},"end":{"line":58,"column":62}}},"8":{"name":"(anonymous_8)","line":63,"loc":{"start":{"line":63,"column":38},"end":{"line":63,"column":53}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":10,"column":32}},"2":{"start":{"line":27,"column":0},"end":{"line":32,"column":1}},"3":{"start":{"line":28,"column":4},"end":{"line":28,"column":27}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":51}},"5":{"start":{"line":30,"column":4},"end":{"line":30,"column":68}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":48}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":40}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":41}},"9":{"start":{"line":36,"column":0},"end":{"line":73,"column":3}},"10":{"start":{"line":38,"column":8},"end":{"line":38,"column":68}},"11":{"start":{"line":41,"column":8},"end":{"line":43,"column":10}},"12":{"start":{"line":46,"column":8},"end":{"line":48,"column":24}},"13":{"start":{"line":50,"column":8},"end":{"line":51,"column":25}},"14":{"start":{"line":52,"column":8},"end":{"line":54,"column":11}},"15":{"start":{"line":53,"column":12},"end":{"line":53,"column":95}},"16":{"start":{"line":55,"column":8},"end":{"line":55,"column":78}},"17":{"start":{"line":57,"column":8},"end":{"line":57,"column":62}},"18":{"start":{"line":57,"column":40},"end":{"line":57,"column":58}},"19":{"start":{"line":58,"column":8},"end":{"line":70,"column":11}},"20":{"start":{"line":59,"column":12},"end":{"line":59,"column":39}},"21":{"start":{"line":60,"column":12},"end":{"line":60,"column":44}},"22":{"start":{"line":61,"column":12},"end":{"line":61,"column":62}},"23":{"start":{"line":63,"column":12},"end":{"line":68,"column":15}},"24":{"start":{"line":64,"column":16},"end":{"line":64,"column":43}},"25":{"start":{"line":65,"column":16},"end":{"line":65,"column":57}},"26":{"start":{"line":66,"column":16},"end":{"line":66,"column":41}},"27":{"start":{"line":67,"column":16},"end":{"line":67,"column":119}},"28":{"start":{"line":69,"column":12},"end":{"line":69,"column":39}},"29":{"start":{"line":71,"column":8},"end":{"line":71,"column":22}},"30":{"start":{"line":75,"column":0},"end":{"line":75,"column":35}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":16},"end":{"line":28,"column":20}},{"start":{"line":28,"column":24},"end":{"line":28,"column":26}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":20},"end":{"line":29,"column":33}},{"start":{"line":29,"column":37},"end":{"line":29,"column":50}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":21},"end":{"line":30,"column":35}},{"start":{"line":30,"column":39},"end":{"line":30,"column":67}}]},"4":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":23},"end":{"line":31,"column":39}},{"start":{"line":31,"column":43},"end":{"line":31,"column":47}}]},"5":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":21},"end":{"line":47,"column":37}},{"start":{"line":47,"column":41},"end":{"line":47,"column":57}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    objectUtils = require('../object-utils'),","    Writer = require('../util/file-writer'),","    util = require('util'),","    Report = require('./index');","/**"," * a `Report` implementation that produces a coverage JSON object with summary info only."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('json-summary');"," *"," *"," * @class JsonSummaryReport"," * @extends Report"," * @module report"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.dir] the directory in which to write the `coverage-summary.json` file. Defaults to `process.cwd()`"," */","function JsonSummaryReport(opts) {","    this.opts = opts || {};","    this.opts.dir = this.opts.dir || process.cwd();","    this.opts.file = this.opts.file || this.getDefaultConfig().file;","    this.opts.writer = this.opts.writer || null;","}","JsonSummaryReport.TYPE = 'json-summary';","util.inherits(JsonSummaryReport, Report);","","Report.mix(JsonSummaryReport, {","    synopsis: function () {","        return 'prints a summary coverage object as JSON to a file';","    },","    getDefaultConfig: function () {","        return {","            file: 'coverage-summary.json'","        };","    },","    writeReport: function (collector, sync) {","        var outputFile = path.resolve(this.opts.dir, this.opts.file),","            writer = this.opts.writer || new Writer(sync),","            that = this;","","        var summaries = [],","            finalSummary;","        collector.files().forEach(function (file) {","            summaries.push(objectUtils.summarizeFileCoverage(collector.fileCoverageFor(file)));","        });","        finalSummary = objectUtils.mergeSummaryObjects.apply(null, summaries);","","        writer.on('done', function () { that.emit('done'); });","        writer.writeFile(outputFile, function (contentWriter) {","            contentWriter.println(\"{\");","            contentWriter.write('\"total\":');","            contentWriter.write(JSON.stringify(finalSummary));","","            collector.files().forEach(function (key) {","                contentWriter.println(\",\");","                contentWriter.write(JSON.stringify(key));","                contentWriter.write(\":\");","                contentWriter.write(JSON.stringify(objectUtils.summarizeFileCoverage(collector.fileCoverageFor(key))));","            });","            contentWriter.println(\"}\");","        });","        writer.done();","    }","});","","module.exports = JsonSummaryReport;",""],"l":{"6":1,"27":1,"28":0,"29":0,"30":0,"31":0,"33":1,"34":1,"36":1,"38":0,"41":0,"46":0,"50":0,"52":0,"53":0,"55":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"66":0,"67":0,"69":0,"71":0,"75":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/json.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/json.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"JsonReport","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":26}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":14},"end":{"line":36,"column":26}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":22},"end":{"line":39,"column":34}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":17},"end":{"line":44,"column":44}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":26},"end":{"line":49,"column":38}}},"6":{"name":"(anonymous_6)","line":50,"loc":{"start":{"line":50,"column":37},"end":{"line":50,"column":62}}},"7":{"name":"(anonymous_7)","line":53,"loc":{"start":{"line":53,"column":38},"end":{"line":53,"column":53}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":9,"column":32}},"2":{"start":{"line":26,"column":0},"end":{"line":31,"column":1}},"3":{"start":{"line":27,"column":4},"end":{"line":27,"column":27}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":51}},"5":{"start":{"line":29,"column":4},"end":{"line":29,"column":68}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":48}},"7":{"start":{"line":32,"column":0},"end":{"line":32,"column":25}},"8":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}},"9":{"start":{"line":35,"column":0},"end":{"line":67,"column":3}},"10":{"start":{"line":37,"column":8},"end":{"line":37,"column":62}},"11":{"start":{"line":40,"column":8},"end":{"line":42,"column":10}},"12":{"start":{"line":45,"column":8},"end":{"line":47,"column":24}},"13":{"start":{"line":49,"column":8},"end":{"line":49,"column":62}},"14":{"start":{"line":49,"column":40},"end":{"line":49,"column":58}},"15":{"start":{"line":50,"column":8},"end":{"line":64,"column":11}},"16":{"start":{"line":51,"column":12},"end":{"line":51,"column":29}},"17":{"start":{"line":52,"column":12},"end":{"line":52,"column":39}},"18":{"start":{"line":53,"column":12},"end":{"line":62,"column":15}},"19":{"start":{"line":54,"column":16},"end":{"line":58,"column":17}},"20":{"start":{"line":55,"column":20},"end":{"line":55,"column":34}},"21":{"start":{"line":57,"column":20},"end":{"line":57,"column":47}},"22":{"start":{"line":59,"column":16},"end":{"line":59,"column":57}},"23":{"start":{"line":60,"column":16},"end":{"line":60,"column":41}},"24":{"start":{"line":61,"column":16},"end":{"line":61,"column":84}},"25":{"start":{"line":63,"column":12},"end":{"line":63,"column":39}},"26":{"start":{"line":65,"column":8},"end":{"line":65,"column":22}},"27":{"start":{"line":69,"column":0},"end":{"line":69,"column":28}}},"branchMap":{"1":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":20}},{"start":{"line":27,"column":24},"end":{"line":27,"column":26}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":20},"end":{"line":28,"column":33}},{"start":{"line":28,"column":37},"end":{"line":28,"column":50}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":21},"end":{"line":29,"column":35}},{"start":{"line":29,"column":39},"end":{"line":29,"column":67}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":39}},{"start":{"line":30,"column":43},"end":{"line":30,"column":47}}]},"5":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":21},"end":{"line":46,"column":37}},{"start":{"line":46,"column":41},"end":{"line":46,"column":57}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":16},"end":{"line":54,"column":16}},{"start":{"line":54,"column":16},"end":{"line":54,"column":16}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    Writer = require('../util/file-writer'),","    util = require('util'),","    Report = require('./index');","/**"," * a `Report` implementation that produces a coverage JSON object."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('json');"," *"," *"," * @class JsonReport"," * @extends Report"," * @module report"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.dir] the directory in which to write the `coverage-final.json` file. Defaults to `process.cwd()`"," */","function JsonReport(opts) {","    this.opts = opts || {};","    this.opts.dir = this.opts.dir || process.cwd();","    this.opts.file = this.opts.file || this.getDefaultConfig().file;","    this.opts.writer = this.opts.writer || null;","}","JsonReport.TYPE = 'json';","util.inherits(JsonReport, Report);","","Report.mix(JsonReport, {","    synopsis: function () {","        return 'prints the coverage object as JSON to a file';","    },","    getDefaultConfig: function () {","        return {","            file: 'coverage-final.json'","        };","    },","    writeReport: function (collector, sync) {","        var outputFile = path.resolve(this.opts.dir, this.opts.file),","            writer = this.opts.writer || new Writer(sync),","            that = this;","","        writer.on('done', function () { that.emit('done'); });","        writer.writeFile(outputFile, function (contentWriter) {","            var first = true;","            contentWriter.println(\"{\");","            collector.files().forEach(function (key) {","                if (first) {","                    first = false;","                } else {","                    contentWriter.println(\",\");","                }","                contentWriter.write(JSON.stringify(key));","                contentWriter.write(\":\");","                contentWriter.write(JSON.stringify(collector.fileCoverageFor(key)));","            });","            contentWriter.println(\"}\");","        });","        writer.done();","    }","});","","module.exports = JsonReport;",""],"l":{"6":1,"26":1,"27":0,"28":0,"29":0,"30":0,"32":1,"33":1,"35":1,"37":0,"40":0,"45":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"57":0,"59":0,"60":0,"61":0,"63":0,"65":0,"69":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/lcov.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/lcov.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"LcovReport","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":26}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":14},"end":{"line":46,"column":26}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":44}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":16},"end":{"line":57,"column":28}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":11,"column":35}},"2":{"start":{"line":31,"column":0},"end":{"line":40,"column":1}},"3":{"start":{"line":32,"column":4},"end":{"line":32,"column":22}},"4":{"start":{"line":33,"column":4},"end":{"line":33,"column":22}},"5":{"start":{"line":34,"column":4},"end":{"line":35,"column":55}},"6":{"start":{"line":37,"column":4},"end":{"line":37,"column":25}},"7":{"start":{"line":38,"column":4},"end":{"line":38,"column":82}},"8":{"start":{"line":39,"column":4},"end":{"line":39,"column":108}},"9":{"start":{"line":42,"column":0},"end":{"line":42,"column":25}},"10":{"start":{"line":43,"column":0},"end":{"line":43,"column":34}},"11":{"start":{"line":45,"column":0},"end":{"line":63,"column":3}},"12":{"start":{"line":47,"column":8},"end":{"line":47,"column":100}},"13":{"start":{"line":50,"column":8},"end":{"line":50,"column":49}},"14":{"start":{"line":51,"column":8},"end":{"line":51,"column":28}},"15":{"start":{"line":52,"column":8},"end":{"line":52,"column":38}},"16":{"start":{"line":53,"column":8},"end":{"line":53,"column":38}},"17":{"start":{"line":54,"column":8},"end":{"line":54,"column":47}},"18":{"start":{"line":55,"column":8},"end":{"line":55,"column":47}},"19":{"start":{"line":58,"column":8},"end":{"line":58,"column":29}},"20":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"21":{"start":{"line":60,"column":12},"end":{"line":60,"column":30}},"22":{"start":{"line":65,"column":0},"end":{"line":65,"column":28}}},"branchMap":{"1":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":11},"end":{"line":33,"column":15}},{"start":{"line":33,"column":19},"end":{"line":33,"column":21}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":31},"end":{"line":34,"column":39}},{"start":{"line":34,"column":43},"end":{"line":34,"column":56}}]},"3":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    util = require('util'),","    mkdirp = require('mkdirp'),","    Report = require('./index'),","    LcovOnlyReport = require('./lcovonly'),","    HtmlReport = require('./html');","","/**"," * a `Report` implementation that produces an LCOV coverage file and an associated HTML report from coverage objects."," * The name and behavior of this report is designed to ease migration for projects that currently use `yuitest_coverage`"," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('lcov');"," *"," *"," * @class LcovReport"," * @extends Report"," * @module report"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.dir] the directory in which to the `lcov.info` file."," *  HTML files are written in a subdirectory called `lcov-report`. Defaults to `process.cwd()`"," */","function LcovReport(opts) {","    Report.call(this);","    opts = opts || {};","    var baseDir = path.resolve(opts.dir || process.cwd()),","        htmlDir = path.resolve(baseDir, 'lcov-report');","","    mkdirp.sync(baseDir);","    this.lcov = new LcovOnlyReport({ dir: baseDir, watermarks: opts.watermarks });","    this.html = new HtmlReport({ dir: htmlDir, watermarks: opts.watermarks, sourceStore: opts.sourceStore});","}","","LcovReport.TYPE = 'lcov';","util.inherits(LcovReport, Report);","","Report.mix(LcovReport, {","    synopsis: function () {","        return 'combined lcovonly and html report that generates an lcov.info file as well as HTML';","    },","    writeReport: function (collector, sync) {","        var handler = this.handleDone.bind(this);","        this.inProgress = 2;","        this.lcov.on('done', handler);","        this.html.on('done', handler);","        this.lcov.writeReport(collector, sync);","        this.html.writeReport(collector, sync);","    },","    handleDone: function () {","        this.inProgress -= 1;","        if (this.inProgress === 0) {","            this.emit('done');","        }","    }","});","","module.exports = LcovReport;",""],"l":{"6":1,"31":1,"32":0,"33":0,"34":0,"37":0,"38":0,"39":0,"42":1,"43":1,"45":1,"47":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"58":0,"59":0,"60":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/lcovonly.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/lcovonly.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"LcovOnlyReport","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":30}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":14},"end":{"line":37,"column":26}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":22},"end":{"line":40,"column":34}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":23},"end":{"line":43,"column":45}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":39},"end":{"line":54,"column":54}}},"6":{"name":"(anonymous_6)","line":61,"loc":{"start":{"line":61,"column":39},"end":{"line":61,"column":54}}},"7":{"name":"(anonymous_7)","line":67,"loc":{"start":{"line":67,"column":35},"end":{"line":67,"column":50}}},"8":{"name":"(anonymous_8)","line":74,"loc":{"start":{"line":74,"column":38},"end":{"line":74,"column":53}}},"9":{"name":"(anonymous_9)","line":79,"loc":{"start":{"line":79,"column":32},"end":{"line":79,"column":45}}},"10":{"name":"(anonymous_10)","line":89,"loc":{"start":{"line":89,"column":17},"end":{"line":89,"column":44}}},"11":{"name":"(anonymous_11)","line":93,"loc":{"start":{"line":93,"column":26},"end":{"line":93,"column":38}}},"12":{"name":"(anonymous_12)","line":94,"loc":{"start":{"line":94,"column":37},"end":{"line":94,"column":62}}},"13":{"name":"(anonymous_13)","line":95,"loc":{"start":{"line":95,"column":38},"end":{"line":95,"column":53}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":10,"column":39}},"2":{"start":{"line":27,"column":0},"end":{"line":32,"column":1}},"3":{"start":{"line":28,"column":4},"end":{"line":28,"column":27}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":51}},"5":{"start":{"line":30,"column":4},"end":{"line":30,"column":68}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":48}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":33}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":38}},"9":{"start":{"line":36,"column":0},"end":{"line":101,"column":3}},"10":{"start":{"line":38,"column":8},"end":{"line":38,"column":76}},"11":{"start":{"line":41,"column":8},"end":{"line":41,"column":37}},"12":{"start":{"line":44,"column":8},"end":{"line":49,"column":54}},"13":{"start":{"line":51,"column":8},"end":{"line":51,"column":30}},"14":{"start":{"line":52,"column":8},"end":{"line":52,"column":40}},"15":{"start":{"line":54,"column":8},"end":{"line":57,"column":11}},"16":{"start":{"line":55,"column":12},"end":{"line":55,"column":40}},"17":{"start":{"line":56,"column":12},"end":{"line":56,"column":71}},"18":{"start":{"line":58,"column":8},"end":{"line":58,"column":57}},"19":{"start":{"line":59,"column":8},"end":{"line":59,"column":59}},"20":{"start":{"line":61,"column":8},"end":{"line":65,"column":11}},"21":{"start":{"line":62,"column":12},"end":{"line":63,"column":40}},"22":{"start":{"line":64,"column":12},"end":{"line":64,"column":69}},"23":{"start":{"line":67,"column":8},"end":{"line":70,"column":11}},"24":{"start":{"line":68,"column":12},"end":{"line":68,"column":34}},"25":{"start":{"line":69,"column":12},"end":{"line":69,"column":60}},"26":{"start":{"line":71,"column":8},"end":{"line":71,"column":52}},"27":{"start":{"line":72,"column":8},"end":{"line":72,"column":54}},"28":{"start":{"line":74,"column":8},"end":{"line":83,"column":11}},"29":{"start":{"line":75,"column":12},"end":{"line":78,"column":22}},"30":{"start":{"line":79,"column":12},"end":{"line":82,"column":15}},"31":{"start":{"line":80,"column":16},"end":{"line":80,"column":70}},"32":{"start":{"line":81,"column":16},"end":{"line":81,"column":23}},"33":{"start":{"line":84,"column":8},"end":{"line":84,"column":56}},"34":{"start":{"line":85,"column":8},"end":{"line":85,"column":58}},"35":{"start":{"line":86,"column":8},"end":{"line":86,"column":40}},"36":{"start":{"line":90,"column":8},"end":{"line":92,"column":24}},"37":{"start":{"line":93,"column":8},"end":{"line":93,"column":62}},"38":{"start":{"line":93,"column":40},"end":{"line":93,"column":58}},"39":{"start":{"line":94,"column":8},"end":{"line":98,"column":11}},"40":{"start":{"line":95,"column":12},"end":{"line":97,"column":15}},"41":{"start":{"line":96,"column":16},"end":{"line":96,"column":86}},"42":{"start":{"line":99,"column":8},"end":{"line":99,"column":22}},"43":{"start":{"line":103,"column":0},"end":{"line":103,"column":32}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":16},"end":{"line":28,"column":20}},{"start":{"line":28,"column":24},"end":{"line":28,"column":26}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":20},"end":{"line":29,"column":33}},{"start":{"line":29,"column":37},"end":{"line":29,"column":50}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":21},"end":{"line":30,"column":35}},{"start":{"line":30,"column":39},"end":{"line":30,"column":67}}]},"4":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":23},"end":{"line":31,"column":39}},{"start":{"line":31,"column":43},"end":{"line":31,"column":47}}]},"5":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":21},"end":{"line":91,"column":37}},{"start":{"line":91,"column":41},"end":{"line":91,"column":57}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    Writer = require('../util/file-writer'),","    util = require('util'),","    Report = require('./index'),","    utils = require('../object-utils');","/**"," * a `Report` implementation that produces an LCOV coverage file from coverage objects."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('lcovonly');"," *"," *"," * @class LcovOnlyReport"," * @extends Report"," * @module report"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.dir] the directory in which to the `lcov.info` file. Defaults to `process.cwd()`"," */","function LcovOnlyReport(opts) {","    this.opts = opts || {};","    this.opts.dir = this.opts.dir || process.cwd();","    this.opts.file = this.opts.file || this.getDefaultConfig().file;","    this.opts.writer = this.opts.writer || null;","}","LcovOnlyReport.TYPE = 'lcovonly';","util.inherits(LcovOnlyReport, Report);","","Report.mix(LcovOnlyReport, {","    synopsis: function () {","        return 'lcov coverage report that can be consumed by the lcov tool';","    },","    getDefaultConfig: function () {","        return { file: 'lcov.info' };","    },","    writeFileCoverage: function (writer, fc) {","        var functions = fc.f,","            functionMap = fc.fnMap,","            lines = fc.l,","            branches = fc.b,","            branchMap = fc.branchMap,","            summary = utils.summarizeFileCoverage(fc);","","        writer.println('TN:'); //no test name","        writer.println('SF:' + fc.path);","","        Object.keys(functions).forEach(function (key) {","            var meta = functionMap[key];","            writer.println('FN:' + [ meta.line, meta.name ].join(','));","        });","        writer.println('FNF:' + summary.functions.total);","        writer.println('FNH:' + summary.functions.covered);","","        Object.keys(functions).forEach(function (key) {","            var stats = functions[key],","                meta = functionMap[key];","            writer.println('FNDA:' + [ stats, meta.name ].join(','));","        });","","        Object.keys(lines).forEach(function (key) {","            var stat = lines[key];","            writer.println('DA:' + [ key, stat ].join(','));","        });","        writer.println('LF:' + summary.lines.total);","        writer.println('LH:' + summary.lines.covered);","","        Object.keys(branches).forEach(function (key) {","            var branchArray = branches[key],","                meta = branchMap[key],","                line = meta.line,","                i = 0;","            branchArray.forEach(function (b) {","                writer.println('BRDA:' + [line, key, i, b].join(','));","                i += 1;","            });","        });","        writer.println('BRF:' + summary.branches.total);","        writer.println('BRH:' + summary.branches.covered);","        writer.println('end_of_record');","    },","","    writeReport: function (collector, sync) {","        var outputFile = path.resolve(this.opts.dir, this.opts.file),","            writer = this.opts.writer || new Writer(sync),","            that = this;","        writer.on('done', function () { that.emit('done'); });","        writer.writeFile(outputFile, function (contentWriter) {","            collector.files().forEach(function (key) {","                that.writeFileCoverage(contentWriter, collector.fileCoverageFor(key));","            });","        });","        writer.done();","    }","});","","module.exports = LcovOnlyReport;",""],"l":{"6":1,"27":1,"28":0,"29":0,"30":0,"31":0,"33":1,"34":1,"36":1,"38":0,"41":0,"44":0,"51":0,"52":0,"54":0,"55":0,"56":0,"58":0,"59":0,"61":0,"62":0,"64":0,"67":0,"68":0,"69":0,"71":0,"72":0,"74":0,"75":0,"79":0,"80":0,"81":0,"84":0,"85":0,"86":0,"90":0,"93":0,"94":0,"95":0,"96":0,"99":0,"103":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/none.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/none.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"NoneReport","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":22}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":14},"end":{"line":32,"column":26}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":17},"end":{"line":35,"column":50}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":7,"column":32}},"2":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"3":{"start":{"line":25,"column":4},"end":{"line":25,"column":22}},"4":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}},"5":{"start":{"line":29,"column":0},"end":{"line":29,"column":34}},"6":{"start":{"line":31,"column":0},"end":{"line":39,"column":3}},"7":{"start":{"line":33,"column":8},"end":{"line":33,"column":99}},"8":{"start":{"line":37,"column":8},"end":{"line":37,"column":26}},"9":{"start":{"line":41,"column":0},"end":{"line":41,"column":28}}},"branchMap":{},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var util = require('util'),","    Report = require('./index');","","/**"," * a `Report` implementation that does nothing. Use to specify that no reporting"," * is needed."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('none');"," *"," *"," * @class NoneReport"," * @extends Report"," * @module report"," * @constructor"," */","function NoneReport() {","    Report.call(this);","}","","NoneReport.TYPE = 'none';","util.inherits(NoneReport, Report);","","Report.mix(NoneReport, {","    synopsis: function () {","        return 'Does nothing. Useful to override default behavior and suppress reporting entirely';","    },","    writeReport: function (/* collector, sync */) {","        //noop","        this.emit('done');","    }","});","","module.exports = NoneReport;",""],"l":{"6":1,"24":1,"25":0,"28":1,"29":1,"31":1,"33":0,"37":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/teamcity.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/teamcity.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"TeamcityReport","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":30}}},"2":{"name":"lineForKey","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":40}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":14},"end":{"line":45,"column":26}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":22},"end":{"line":48,"column":34}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":17},"end":{"line":51,"column":50}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":34},"end":{"line":57,"column":50}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":11,"column":32}},"2":{"start":{"line":29,"column":0},"end":{"line":35,"column":1}},"3":{"start":{"line":30,"column":4},"end":{"line":30,"column":22}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":22}},"5":{"start":{"line":32,"column":4},"end":{"line":32,"column":41}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":26}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":73}},"8":{"start":{"line":37,"column":0},"end":{"line":37,"column":33}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":38}},"10":{"start":{"line":40,"column":0},"end":{"line":42,"column":1}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":97}},"12":{"start":{"line":44,"column":0},"end":{"line":90,"column":3}},"13":{"start":{"line":46,"column":8},"end":{"line":46,"column":83}},"14":{"start":{"line":49,"column":8},"end":{"line":49,"column":66}},"15":{"start":{"line":52,"column":8},"end":{"line":55,"column":17}},"16":{"start":{"line":57,"column":8},"end":{"line":59,"column":11}},"17":{"start":{"line":58,"column":12},"end":{"line":58,"column":89}},"18":{"start":{"line":61,"column":8},"end":{"line":61,"column":72}},"19":{"start":{"line":63,"column":8},"end":{"line":63,"column":23}},"20":{"start":{"line":64,"column":8},"end":{"line":64,"column":76}},"21":{"start":{"line":67,"column":8},"end":{"line":67,"column":77}},"22":{"start":{"line":70,"column":8},"end":{"line":70,"column":90}},"23":{"start":{"line":71,"column":8},"end":{"line":71,"column":86}},"24":{"start":{"line":72,"column":8},"end":{"line":72,"column":76}},"25":{"start":{"line":75,"column":8},"end":{"line":75,"column":86}},"26":{"start":{"line":76,"column":8},"end":{"line":76,"column":82}},"27":{"start":{"line":77,"column":8},"end":{"line":77,"column":72}},"28":{"start":{"line":79,"column":8},"end":{"line":79,"column":76}},"29":{"start":{"line":81,"column":8},"end":{"line":81,"column":32}},"30":{"start":{"line":82,"column":8},"end":{"line":87,"column":9}},"31":{"start":{"line":83,"column":12},"end":{"line":83,"column":34}},"32":{"start":{"line":84,"column":12},"end":{"line":84,"column":75}},"33":{"start":{"line":86,"column":12},"end":{"line":86,"column":30}},"34":{"start":{"line":88,"column":8},"end":{"line":88,"column":26}},"35":{"start":{"line":92,"column":0},"end":{"line":92,"column":32}}},"branchMap":{"1":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":11},"end":{"line":31,"column":15}},{"start":{"line":31,"column":19},"end":{"line":31,"column":21}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":15},"end":{"line":32,"column":23}},{"start":{"line":32,"column":27},"end":{"line":32,"column":40}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":21},"end":{"line":34,"column":35}},{"start":{"line":34,"column":39},"end":{"line":34,"column":72}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":8}},{"start":{"line":82,"column":8},"end":{"line":82,"column":8}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    util = require('util'),","    mkdirp = require('mkdirp'),","    fs = require('fs'),","    utils = require('../object-utils'),","    Report = require('./index');","","/**"," * a `Report` implementation that produces system messages interpretable by TeamCity."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('teamcity');"," *"," * @class TeamcityReport"," * @extends Report"," * @module report"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.dir] the directory in which to the text coverage report will be written, when writing to a file"," * @param {String} [opts.file] the filename for the report. When omitted, the report is written to console"," */","function TeamcityReport(opts) {","    Report.call(this);","    opts = opts || {};","    this.dir = opts.dir || process.cwd();","    this.file = opts.file;","    this.blockName = opts.blockName || this.getDefaultConfig().blockName;","}","","TeamcityReport.TYPE = 'teamcity';","util.inherits(TeamcityReport, Report);","","function lineForKey(value, teamcityVar) {","    return '##teamcity[buildStatisticValue key=\\'' + teamcityVar + '\\' value=\\'' + value + '\\']';","}","","Report.mix(TeamcityReport, {","    synopsis: function () {","        return 'report with system messages that can be interpreted with TeamCity';","    },","    getDefaultConfig: function () {","        return { file: null , blockName: 'Code Coverage Summary'};","    },","    writeReport: function (collector /*, sync */) {","        var summaries = [],","            finalSummary,","            lines = [],","            text;","","        collector.files().forEach(function (file) {","            summaries.push(utils.summarizeFileCoverage(collector.fileCoverageFor(file)));","        });","","        finalSummary = utils.mergeSummaryObjects.apply(null, summaries);","","        lines.push('');","        lines.push('##teamcity[blockOpened name=\\''+ this.blockName +'\\']');","","        //Statements Covered","        lines.push(lineForKey(finalSummary.statements.pct, 'CodeCoverageB'));","","        //Methods Covered","        lines.push(lineForKey(finalSummary.functions.covered, 'CodeCoverageAbsMCovered'));","        lines.push(lineForKey(finalSummary.functions.total, 'CodeCoverageAbsMTotal'));","        lines.push(lineForKey(finalSummary.functions.pct, 'CodeCoverageM'));","","        //Lines Covered","        lines.push(lineForKey(finalSummary.lines.covered, 'CodeCoverageAbsLCovered'));","        lines.push(lineForKey(finalSummary.lines.total, 'CodeCoverageAbsLTotal'));","        lines.push(lineForKey(finalSummary.lines.pct, 'CodeCoverageL'));","","        lines.push('##teamcity[blockClosed name=\\''+ this.blockName +'\\']');","","        text = lines.join('\\n');","        if (this.file) {","            mkdirp.sync(this.dir);","            fs.writeFileSync(path.join(this.dir, this.file), text, 'utf8');","        } else {","            console.log(text);","        }","        this.emit('done');","    }","});","","module.exports = TeamcityReport;",""],"l":{"6":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"37":1,"38":1,"40":1,"41":0,"44":1,"46":0,"49":0,"52":0,"57":0,"58":0,"61":0,"63":0,"64":0,"67":0,"70":0,"71":0,"72":0,"75":0,"76":0,"77":0,"79":0,"81":0,"82":0,"83":0,"84":0,"86":0,"88":0,"92":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/text-lcov.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/text-lcov.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"TextLcov","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":24}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":17},"end":{"line":28,"column":31}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":38}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":34},"end":{"line":42,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":20,"column":0},"end":{"line":32,"column":1}},"3":{"start":{"line":21,"column":4},"end":{"line":21,"column":20}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":24}},"5":{"start":{"line":25,"column":4},"end":{"line":25,"column":27}},"6":{"start":{"line":26,"column":4},"end":{"line":26,"column":49}},"7":{"start":{"line":27,"column":4},"end":{"line":31,"column":6}},"8":{"start":{"line":29,"column":12},"end":{"line":29,"column":30}},"9":{"start":{"line":34,"column":0},"end":{"line":34,"column":28}},"10":{"start":{"line":35,"column":0},"end":{"line":35,"column":34}},"11":{"start":{"line":37,"column":0},"end":{"line":48,"column":3}},"12":{"start":{"line":39,"column":8},"end":{"line":40,"column":38}},"13":{"start":{"line":42,"column":8},"end":{"line":44,"column":11}},"14":{"start":{"line":43,"column":12},"end":{"line":43,"column":75}},"15":{"start":{"line":46,"column":8},"end":{"line":46,"column":26}},"16":{"start":{"line":50,"column":0},"end":{"line":50,"column":26}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":20}},{"start":{"line":25,"column":24},"end":{"line":25,"column":26}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":20},"end":{"line":26,"column":33}},{"start":{"line":26,"column":37},"end":{"line":26,"column":48}}]}},"code":["var LcovOnly = require('./lcovonly'),","  util = require('util');","","/**"," * a `Report` implementation that produces an LCOV coverage and prints it"," *  to standard out."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('text-lcov');"," *"," * @class TextLcov"," * @module report"," * @extends LcovOnly"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.log] the method used to log to console."," */","function TextLcov(opts) {","    var that = this;","","    LcovOnly.call(this);","","    this.opts = opts || {};","    this.opts.log = this.opts.log || console.log;","    this.opts.writer = {","        println: function (ln) {","            that.opts.log(ln);","        }","    };","}","","TextLcov.TYPE = 'text-lcov';","util.inherits(TextLcov, LcovOnly);","","LcovOnly.super_.mix(TextLcov, {","    writeReport: function (collector) {","        var that = this,","            writer = this.opts.writer;","","        collector.files().forEach(function (key) {","            that.writeFileCoverage(writer, collector.fileCoverageFor(key));","        });","","        this.emit('done');","    }","});","","module.exports = TextLcov;",""],"l":{"1":1,"20":1,"21":0,"23":0,"25":0,"26":0,"27":0,"29":0,"34":1,"35":1,"37":1,"39":0,"42":0,"43":0,"46":0,"50":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/text-summary.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/text-summary.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"TextSummaryReport","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":33}}},"2":{"name":"lineForKey","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":46}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":14},"end":{"line":57,"column":26}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":22},"end":{"line":60,"column":34}}},"5":{"name":"(anonymous_5)","line":63,"loc":{"start":{"line":63,"column":17},"end":{"line":63,"column":50}}},"6":{"name":"(anonymous_6)","line":69,"loc":{"start":{"line":69,"column":34},"end":{"line":69,"column":50}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":12,"column":32}},"2":{"start":{"line":30,"column":0},"end":{"line":36,"column":1}},"3":{"start":{"line":31,"column":4},"end":{"line":31,"column":22}},"4":{"start":{"line":32,"column":4},"end":{"line":32,"column":22}},"5":{"start":{"line":33,"column":4},"end":{"line":33,"column":41}},"6":{"start":{"line":34,"column":4},"end":{"line":34,"column":26}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":63}},"8":{"start":{"line":38,"column":0},"end":{"line":38,"column":40}},"9":{"start":{"line":39,"column":0},"end":{"line":39,"column":41}},"10":{"start":{"line":41,"column":0},"end":{"line":54,"column":1}},"11":{"start":{"line":42,"column":4},"end":{"line":45,"column":60}},"12":{"start":{"line":46,"column":4},"end":{"line":46,"column":63}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":88}},"14":{"start":{"line":47,"column":27},"end":{"line":47,"column":86}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":104}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":30}},"17":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"18":{"start":{"line":51,"column":8},"end":{"line":51,"column":46}},"19":{"start":{"line":53,"column":4},"end":{"line":53,"column":44}},"20":{"start":{"line":56,"column":0},"end":{"line":91,"column":3}},"21":{"start":{"line":58,"column":8},"end":{"line":58,"column":99}},"22":{"start":{"line":61,"column":8},"end":{"line":61,"column":30}},"23":{"start":{"line":64,"column":8},"end":{"line":68,"column":17}},"24":{"start":{"line":69,"column":8},"end":{"line":71,"column":11}},"25":{"start":{"line":70,"column":12},"end":{"line":70,"column":89}},"26":{"start":{"line":72,"column":8},"end":{"line":72,"column":72}},"27":{"start":{"line":73,"column":8},"end":{"line":73,"column":23}},"28":{"start":{"line":74,"column":8},"end":{"line":74,"column":103}},"29":{"start":{"line":75,"column":8},"end":{"line":80,"column":11}},"30":{"start":{"line":81,"column":8},"end":{"line":81,"column":103}},"31":{"start":{"line":82,"column":8},"end":{"line":82,"column":32}},"32":{"start":{"line":83,"column":8},"end":{"line":88,"column":9}},"33":{"start":{"line":84,"column":12},"end":{"line":84,"column":34}},"34":{"start":{"line":85,"column":12},"end":{"line":85,"column":75}},"35":{"start":{"line":87,"column":12},"end":{"line":87,"column":30}},"36":{"start":{"line":89,"column":8},"end":{"line":89,"column":26}},"37":{"start":{"line":93,"column":0},"end":{"line":93,"column":35}}},"branchMap":{"1":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":11},"end":{"line":32,"column":15}},{"start":{"line":32,"column":19},"end":{"line":32,"column":21}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":15},"end":{"line":33,"column":23}},{"start":{"line":33,"column":27},"end":{"line":33,"column":40}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":22},"end":{"line":35,"column":37}},{"start":{"line":35,"column":41},"end":{"line":35,"column":62}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"6":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    util = require('util'),","    mkdirp = require('mkdirp'),","    defaults = require('./common/defaults'),","    fs = require('fs'),","    utils = require('../object-utils'),","    Report = require('./index');","","/**"," * a `Report` implementation that produces text output for overall coverage in summary format."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('text-summary');"," *"," * @class TextSummaryReport"," * @extends Report"," * @module report"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.dir] the directory in which to the text coverage report will be written, when writing to a file"," * @param {String} [opts.file] the filename for the report. When omitted, the report is written to console"," */","function TextSummaryReport(opts) {","    Report.call(this);","    opts = opts || {};","    this.dir = opts.dir || process.cwd();","    this.file = opts.file;","    this.watermarks = opts.watermarks || defaults.watermarks();","}","","TextSummaryReport.TYPE = 'text-summary';","util.inherits(TextSummaryReport, Report);","","function lineForKey(summary, key, watermarks) {","    var metrics = summary[key],","        skipped,","        result,","        clazz = defaults.classFor(key, summary, watermarks);","    key = key.substring(0, 1).toUpperCase() + key.substring(1);","    if (key.length < 12) { key += '                   '.substring(0, 12 - key.length); }","    result = [ key , ':', metrics.pct + '%', '(', metrics.covered + '/' + metrics.total, ')'].join(' ');","    skipped = metrics.skipped;","    if (skipped > 0) {","        result += ', ' + skipped + ' ignored';","    }","    return defaults.colorize(result, clazz);","}","","Report.mix(TextSummaryReport, {","    synopsis: function () {","        return 'text report that prints a coverage summary across all files, typically to console';","    },","    getDefaultConfig: function () {","        return { file: null };","    },","    writeReport: function (collector /*, sync */) {","        var summaries = [],","            finalSummary,","            lines = [],","            watermarks = this.watermarks,","            text;","        collector.files().forEach(function (file) {","            summaries.push(utils.summarizeFileCoverage(collector.fileCoverageFor(file)));","        });","        finalSummary = utils.mergeSummaryObjects.apply(null, summaries);","        lines.push('');","        lines.push('=============================== Coverage summary ===============================');","        lines.push.apply(lines, [","            lineForKey(finalSummary, 'statements', watermarks),","            lineForKey(finalSummary, 'branches', watermarks),","            lineForKey(finalSummary, 'functions', watermarks),","            lineForKey(finalSummary, 'lines', watermarks)","        ]);","        lines.push('================================================================================');","        text = lines.join('\\n');","        if (this.file) {","            mkdirp.sync(this.dir);","            fs.writeFileSync(path.join(this.dir, this.file), text, 'utf8');","        } else {","            console.log(text);","        }","        this.emit('done');","    }","});","","module.exports = TextSummaryReport;",""],"l":{"6":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"38":1,"39":1,"41":1,"42":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"56":1,"58":0,"61":0,"64":0,"69":0,"70":0,"72":0,"73":0,"74":0,"75":0,"81":0,"82":0,"83":0,"84":0,"85":0,"87":0,"89":0,"93":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/text.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/report/text.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"TextReport","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":26}}},"2":{"name":"padding","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":26}}},"3":{"name":"fill","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":46}}},"4":{"name":"formatName","line":86,"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":49}}},"5":{"name":"formatPct","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":38}}},"6":{"name":"nodeName","line":94,"loc":{"start":{"line":94,"column":0},"end":{"line":94,"column":24}}},"7":{"name":"tableHeader","line":98,"loc":{"start":{"line":98,"column":0},"end":{"line":98,"column":34}}},"8":{"name":"collectMissingLines","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":49}}},"9":{"name":"(anonymous_9)","line":116,"loc":{"start":{"line":116,"column":36},"end":{"line":116,"column":51}}},"10":{"name":"tableRow","line":125,"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":56}}},"11":{"name":"findNameWidth","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":42}}},"12":{"name":"(anonymous_12)","line":151,"loc":{"start":{"line":151,"column":26},"end":{"line":151,"column":43}}},"13":{"name":"makeLine","line":157,"loc":{"start":{"line":157,"column":0},"end":{"line":157,"column":29}}},"14":{"name":"walk","line":171,"loc":{"start":{"line":171,"column":0},"end":{"line":171,"column":57}}},"15":{"name":"(anonymous_15)","line":181,"loc":{"start":{"line":181,"column":26},"end":{"line":181,"column":43}}},"16":{"name":"(anonymous_16)","line":192,"loc":{"start":{"line":192,"column":14},"end":{"line":192,"column":26}}},"17":{"name":"(anonymous_17)","line":195,"loc":{"start":{"line":195,"column":22},"end":{"line":195,"column":34}}},"18":{"name":"(anonymous_18)","line":198,"loc":{"start":{"line":198,"column":17},"end":{"line":198,"column":50}}},"19":{"name":"(anonymous_19)","line":208,"loc":{"start":{"line":208,"column":34},"end":{"line":208,"column":49}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":18,"column":21}},"2":{"start":{"line":38,"column":0},"end":{"line":46,"column":1}},"3":{"start":{"line":39,"column":4},"end":{"line":39,"column":22}},"4":{"start":{"line":40,"column":4},"end":{"line":40,"column":22}},"5":{"start":{"line":41,"column":4},"end":{"line":41,"column":41}},"6":{"start":{"line":42,"column":4},"end":{"line":42,"column":26}},"7":{"start":{"line":43,"column":4},"end":{"line":43,"column":32}},"8":{"start":{"line":44,"column":4},"end":{"line":44,"column":37}},"9":{"start":{"line":45,"column":4},"end":{"line":45,"column":63}},"10":{"start":{"line":48,"column":0},"end":{"line":48,"column":25}},"11":{"start":{"line":49,"column":0},"end":{"line":49,"column":34}},"12":{"start":{"line":51,"column":0},"end":{"line":59,"column":1}},"13":{"start":{"line":52,"column":4},"end":{"line":53,"column":10}},"14":{"start":{"line":54,"column":4},"end":{"line":54,"column":19}},"15":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"16":{"start":{"line":56,"column":8},"end":{"line":56,"column":18}},"17":{"start":{"line":58,"column":4},"end":{"line":58,"column":15}},"18":{"start":{"line":61,"column":0},"end":{"line":84,"column":1}},"19":{"start":{"line":62,"column":4},"end":{"line":62,"column":21}},"20":{"start":{"line":63,"column":4},"end":{"line":63,"column":22}},"21":{"start":{"line":65,"column":4},"end":{"line":70,"column":28}},"22":{"start":{"line":72,"column":4},"end":{"line":80,"column":5}},"23":{"start":{"line":73,"column":8},"end":{"line":79,"column":9}},"24":{"start":{"line":74,"column":12},"end":{"line":74,"column":50}},"25":{"start":{"line":75,"column":12},"end":{"line":75,"column":59}},"26":{"start":{"line":77,"column":12},"end":{"line":77,"column":55}},"27":{"start":{"line":78,"column":12},"end":{"line":78,"column":50}},"28":{"start":{"line":82,"column":4},"end":{"line":82,"column":46}},"29":{"start":{"line":83,"column":4},"end":{"line":83,"column":27}},"30":{"start":{"line":86,"column":0},"end":{"line":88,"column":1}},"31":{"start":{"line":87,"column":4},"end":{"line":87,"column":52}},"32":{"start":{"line":90,"column":0},"end":{"line":92,"column":1}},"33":{"start":{"line":91,"column":4},"end":{"line":91,"column":56}},"34":{"start":{"line":94,"column":0},"end":{"line":96,"column":1}},"35":{"start":{"line":95,"column":4},"end":{"line":95,"column":50}},"36":{"start":{"line":98,"column":0},"end":{"line":107,"column":1}},"37":{"start":{"line":99,"column":4},"end":{"line":99,"column":22}},"38":{"start":{"line":100,"column":4},"end":{"line":100,"column":54}},"39":{"start":{"line":101,"column":4},"end":{"line":101,"column":40}},"40":{"start":{"line":102,"column":4},"end":{"line":102,"column":41}},"41":{"start":{"line":103,"column":4},"end":{"line":103,"column":40}},"42":{"start":{"line":104,"column":4},"end":{"line":104,"column":40}},"43":{"start":{"line":105,"column":4},"end":{"line":105,"column":72}},"44":{"start":{"line":106,"column":4},"end":{"line":106,"column":38}},"45":{"start":{"line":109,"column":0},"end":{"line":123,"column":1}},"46":{"start":{"line":110,"column":2},"end":{"line":110,"column":24}},"47":{"start":{"line":112,"column":2},"end":{"line":114,"column":3}},"48":{"start":{"line":113,"column":6},"end":{"line":113,"column":16}},"49":{"start":{"line":116,"column":2},"end":{"line":120,"column":5}},"50":{"start":{"line":117,"column":6},"end":{"line":119,"column":7}},"51":{"start":{"line":118,"column":10},"end":{"line":118,"column":33}},"52":{"start":{"line":122,"column":2},"end":{"line":122,"column":22}},"53":{"start":{"line":125,"column":0},"end":{"line":142,"column":1}},"54":{"start":{"line":126,"column":4},"end":{"line":132,"column":22}},"55":{"start":{"line":134,"column":4},"end":{"line":134,"column":115}},"56":{"start":{"line":135,"column":4},"end":{"line":135,"column":100}},"57":{"start":{"line":136,"column":4},"end":{"line":136,"column":96}},"58":{"start":{"line":137,"column":4},"end":{"line":137,"column":98}},"59":{"start":{"line":138,"column":4},"end":{"line":138,"column":90}},"60":{"start":{"line":139,"column":4},"end":{"line":139,"column":73}},"61":{"start":{"line":141,"column":4},"end":{"line":141,"column":40}},"62":{"start":{"line":144,"column":0},"end":{"line":155,"column":1}},"63":{"start":{"line":145,"column":4},"end":{"line":145,"column":21}},"64":{"start":{"line":146,"column":4},"end":{"line":146,"column":23}},"65":{"start":{"line":147,"column":4},"end":{"line":147,"column":62}},"66":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"67":{"start":{"line":149,"column":8},"end":{"line":149,"column":26}},"68":{"start":{"line":151,"column":4},"end":{"line":153,"column":7}},"69":{"start":{"line":152,"column":8},"end":{"line":152,"column":53}},"70":{"start":{"line":154,"column":4},"end":{"line":154,"column":16}},"71":{"start":{"line":157,"column":0},"end":{"line":169,"column":1}},"72":{"start":{"line":158,"column":4},"end":{"line":160,"column":22}},"73":{"start":{"line":162,"column":4},"end":{"line":162,"column":24}},"74":{"start":{"line":163,"column":4},"end":{"line":163,"column":23}},"75":{"start":{"line":164,"column":4},"end":{"line":164,"column":23}},"76":{"start":{"line":165,"column":4},"end":{"line":165,"column":23}},"77":{"start":{"line":166,"column":4},"end":{"line":166,"column":23}},"78":{"start":{"line":167,"column":4},"end":{"line":167,"column":45}},"79":{"start":{"line":168,"column":4},"end":{"line":168,"column":48}},"80":{"start":{"line":171,"column":0},"end":{"line":189,"column":1}},"81":{"start":{"line":172,"column":4},"end":{"line":172,"column":13}},"82":{"start":{"line":173,"column":4},"end":{"line":180,"column":5}},"83":{"start":{"line":174,"column":8},"end":{"line":174,"column":35}},"84":{"start":{"line":175,"column":8},"end":{"line":175,"column":25}},"85":{"start":{"line":176,"column":8},"end":{"line":176,"column":43}},"86":{"start":{"line":177,"column":8},"end":{"line":177,"column":25}},"87":{"start":{"line":179,"column":8},"end":{"line":179,"column":65}},"88":{"start":{"line":181,"column":4},"end":{"line":183,"column":7}},"89":{"start":{"line":182,"column":8},"end":{"line":182,"column":61}},"90":{"start":{"line":184,"column":4},"end":{"line":188,"column":5}},"91":{"start":{"line":185,"column":8},"end":{"line":185,"column":25}},"92":{"start":{"line":186,"column":8},"end":{"line":186,"column":65}},"93":{"start":{"line":187,"column":8},"end":{"line":187,"column":25}},"94":{"start":{"line":191,"column":0},"end":{"line":232,"column":3}},"95":{"start":{"line":193,"column":8},"end":{"line":193,"column":94}},"96":{"start":{"line":196,"column":8},"end":{"line":196,"column":42}},"97":{"start":{"line":199,"column":8},"end":{"line":206,"column":17}},"98":{"start":{"line":208,"column":8},"end":{"line":212,"column":11}},"99":{"start":{"line":209,"column":12},"end":{"line":211,"column":15}},"100":{"start":{"line":213,"column":8},"end":{"line":213,"column":43}},"101":{"start":{"line":214,"column":8},"end":{"line":214,"column":25}},"102":{"start":{"line":215,"column":8},"end":{"line":215,"column":40}},"103":{"start":{"line":216,"column":8},"end":{"line":221,"column":9}},"104":{"start":{"line":217,"column":12},"end":{"line":217,"column":57}},"105":{"start":{"line":218,"column":12},"end":{"line":220,"column":13}},"106":{"start":{"line":219,"column":16},"end":{"line":219,"column":41}},"107":{"start":{"line":222,"column":8},"end":{"line":222,"column":59}},"108":{"start":{"line":223,"column":8},"end":{"line":223,"column":41}},"109":{"start":{"line":224,"column":8},"end":{"line":229,"column":9}},"110":{"start":{"line":225,"column":12},"end":{"line":225,"column":34}},"111":{"start":{"line":226,"column":12},"end":{"line":226,"column":75}},"112":{"start":{"line":228,"column":12},"end":{"line":228,"column":30}},"113":{"start":{"line":230,"column":8},"end":{"line":230,"column":26}},"114":{"start":{"line":234,"column":0},"end":{"line":234,"column":28}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":11},"end":{"line":40,"column":15}},{"start":{"line":40,"column":19},"end":{"line":40,"column":21}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":15},"end":{"line":41,"column":23}},{"start":{"line":41,"column":27},"end":{"line":41,"column":40}}]},"3":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":19},"end":{"line":44,"column":31}},{"start":{"line":44,"column":35},"end":{"line":44,"column":36}}]},"4":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":22},"end":{"line":45,"column":37}},{"start":{"line":45,"column":41},"end":{"line":45,"column":62}}]},"5":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":9},"end":{"line":54,"column":11}},{"start":{"line":54,"column":15},"end":{"line":54,"column":18}}]},"6":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":11},"end":{"line":62,"column":15}},{"start":{"line":62,"column":19},"end":{"line":62,"column":20}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":8}},{"start":{"line":73,"column":8},"end":{"line":73,"column":8}}]},"9":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":29},"end":{"line":75,"column":42}},{"start":{"line":75,"column":45},"end":{"line":75,"column":58}}]},"10":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":21},"end":{"line":91,"column":26}},{"start":{"line":91,"column":30},"end":{"line":91,"column":38}}]},"11":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":11},"end":{"line":95,"column":34}},{"start":{"line":95,"column":38},"end":{"line":95,"column":49}}]},"12":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"13":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":6}},{"start":{"line":117,"column":6},"end":{"line":117,"column":6}}]},"14":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":11},"end":{"line":145,"column":15}},{"start":{"line":145,"column":19},"end":{"line":145,"column":20}}]},"15":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":12},"end":{"line":146,"column":17}},{"start":{"line":146,"column":21},"end":{"line":146,"column":22}}]},"16":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"17":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"18":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":184,"column":4}},{"start":{"line":184,"column":4},"end":{"line":184,"column":4}}]},"19":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":8}},{"start":{"line":216,"column":8},"end":{"line":216,"column":8}}]},"20":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":12},"end":{"line":218,"column":12}},{"start":{"line":218,"column":12},"end":{"line":218,"column":12}}]},"21":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":8},"end":{"line":224,"column":8}},{"start":{"line":224,"column":8},"end":{"line":224,"column":8}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    mkdirp = require('mkdirp'),","    util = require('util'),","    fs = require('fs'),","    defaults = require('./common/defaults'),","    Report = require('./index'),","    TreeSummarizer = require('../util/tree-summarizer'),","    utils = require('../object-utils'),","    PCT_COLS = 9,","    MISSING_COL = 15,","    TAB_SIZE = 1,","    DELIM = ' |',","    COL_DELIM = '-|';","","/**"," * a `Report` implementation that produces text output in a detailed table."," *"," * Usage"," * -----"," *"," *      var report = require('istanbul').Report.create('text');"," *"," * @class TextReport"," * @extends Report"," * @module report"," * @constructor"," * @param {Object} opts optional"," * @param {String} [opts.dir] the directory in which to the text coverage report will be written, when writing to a file"," * @param {String} [opts.file] the filename for the report. When omitted, the report is written to console"," * @param {Number} [opts.maxCols] the max column width of the report. By default, the width of the report is adjusted based on the length of the paths"," *              to be reported."," */","function TextReport(opts) {","    Report.call(this);","    opts = opts || {};","    this.dir = opts.dir || process.cwd();","    this.file = opts.file;","    this.summary = opts.summary;","    this.maxCols = opts.maxCols || 0;","    this.watermarks = opts.watermarks || defaults.watermarks();","}","","TextReport.TYPE = 'text';","util.inherits(TextReport, Report);","","function padding(num, ch) {","    var str = '',","        i;","    ch = ch || ' ';","    for (i = 0; i < num; i += 1) {","        str += ch;","    }","    return str;","}","","function fill(str, width, right, tabs, clazz) {","    tabs = tabs || 0;","    str = String(str);","","    var leadingSpaces = tabs * TAB_SIZE,","        remaining = width - leadingSpaces,","        leader = padding(leadingSpaces),","        fmtStr = '',","        fillStr,","        strlen = str.length;","","    if (remaining > 0) {","        if (remaining >= strlen) {","            fillStr = padding(remaining - strlen);","            fmtStr = right ? fillStr + str : str + fillStr;","        } else {","            fmtStr = str.substring(strlen - remaining);","            fmtStr = '... ' + fmtStr.substring(4);","        }","    }","","    fmtStr = defaults.colorize(fmtStr, clazz);","    return leader + fmtStr;","}","","function formatName(name, maxCols, level, clazz) {","    return fill(name, maxCols, false, level, clazz);","}","","function formatPct(pct, clazz, width) {","    return fill(pct, width || PCT_COLS, true, 0, clazz);","}","","function nodeName(node) {","    return node.displayShortName() || 'All files';","}","","function tableHeader(maxNameCols) {","    var elements = [];","    elements.push(formatName('File', maxNameCols, 0));","    elements.push(formatPct('% Stmts'));","    elements.push(formatPct('% Branch'));","    elements.push(formatPct('% Funcs'));","    elements.push(formatPct('% Lines'));","    elements.push(formatPct('Uncovered Lines', undefined, MISSING_COL));","    return elements.join(' |') + ' |';","}","","function collectMissingLines(kind, linesCovered) {","  var missingLines = [];","","  if (kind !== 'file') {","      return [];","  }","","  Object.keys(linesCovered).forEach(function (key) {","      if (!linesCovered[key]) {","          missingLines.push(key);","      }","  });","","  return missingLines;","}","","function tableRow(node, maxNameCols, level, watermarks) {","    var name = nodeName(node),","        statements = node.metrics.statements.pct,","        branches = node.metrics.branches.pct,","        functions = node.metrics.functions.pct,","        lines = node.metrics.lines.pct,","        missingLines = collectMissingLines(node.kind, node.metrics.linesCovered),","        elements = [];","","    elements.push(formatName(name, maxNameCols, level, defaults.classFor('statements', node.metrics, watermarks)));","    elements.push(formatPct(statements, defaults.classFor('statements', node.metrics, watermarks)));","    elements.push(formatPct(branches, defaults.classFor('branches', node.metrics, watermarks)));","    elements.push(formatPct(functions, defaults.classFor('functions', node.metrics, watermarks)));","    elements.push(formatPct(lines, defaults.classFor('lines', node.metrics, watermarks)));","    elements.push(formatPct(missingLines.join(','), 'low', MISSING_COL));","","    return elements.join(DELIM) + DELIM;","}","","function findNameWidth(node, level, last) {","    last = last || 0;","    level = level || 0;","    var idealWidth = TAB_SIZE * level + nodeName(node).length;","    if (idealWidth > last) {","        last = idealWidth;","    }","    node.children.forEach(function (child) {","        last = findNameWidth(child, level + 1, last);","    });","    return last;","}","","function makeLine(nameWidth) {","    var name = padding(nameWidth, '-'),","        pct = padding(PCT_COLS, '-'),","        elements = [];","","    elements.push(name);","    elements.push(pct);","    elements.push(pct);","    elements.push(pct);","    elements.push(pct);","    elements.push(padding(MISSING_COL, '-'));","    return elements.join(COL_DELIM) + COL_DELIM;","}","","function walk(node, nameWidth, array, level, watermarks) {","    var line;","    if (level === 0) {","        line = makeLine(nameWidth);","        array.push(line);","        array.push(tableHeader(nameWidth));","        array.push(line);","    } else {","        array.push(tableRow(node, nameWidth, level, watermarks));","    }","    node.children.forEach(function (child) {","        walk(child, nameWidth, array, level + 1, watermarks);","    });","    if (level === 0) {","        array.push(line);","        array.push(tableRow(node, nameWidth, level, watermarks));","        array.push(line);","    }","}","","Report.mix(TextReport, {","    synopsis: function () {","        return 'text report that prints a coverage line for every file, typically to console';","    },","    getDefaultConfig: function () {","        return { file: null, maxCols: 0 };","    },","    writeReport: function (collector /*, sync */) {","        var summarizer = new TreeSummarizer(),","            tree,","            root,","            nameWidth,","            statsWidth = 4 * (PCT_COLS + 2) + MISSING_COL,","            maxRemaining,","            strings = [],","            text;","","        collector.files().forEach(function (key) {","            summarizer.addFileCoverageSummary(key, utils.summarizeFileCoverage(","                collector.fileCoverageFor(key)","            ));","        });","        tree = summarizer.getTreeSummary();","        root = tree.root;","        nameWidth = findNameWidth(root);","        if (this.maxCols > 0) {","            maxRemaining = this.maxCols - statsWidth - 2;","            if (nameWidth > maxRemaining) {","                nameWidth = maxRemaining;","            }","        }","        walk(root, nameWidth, strings, 0, this.watermarks);","        text = strings.join('\\n') + '\\n';","        if (this.file) {","            mkdirp.sync(this.dir);","            fs.writeFileSync(path.join(this.dir, this.file), text, 'utf8');","        } else {","            console.log(text);","        }","        this.emit('done');","    }","});","","module.exports = TextReport;",""],"l":{"6":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"48":1,"49":1,"51":1,"52":0,"54":0,"55":0,"56":0,"58":0,"61":1,"62":0,"63":0,"65":0,"72":0,"73":0,"74":0,"75":0,"77":0,"78":0,"82":0,"83":0,"86":1,"87":0,"90":1,"91":0,"94":1,"95":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"109":1,"110":0,"112":0,"113":0,"116":0,"117":0,"118":0,"122":0,"125":1,"126":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"141":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"151":0,"152":0,"154":0,"157":1,"158":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"179":0,"181":0,"182":0,"184":0,"185":0,"186":0,"187":0,"191":1,"193":0,"196":0,"199":0,"208":0,"209":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"222":0,"223":0,"224":0,"225":0,"226":0,"228":0,"230":0,"234":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/check-coverage.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/check-coverage.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"isAbsolute","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":26}}},"2":{"name":"CheckCoverageCommand","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}}},"3":{"name":"removeFiles","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":42}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":18},"end":{"line":34,"column":34}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":32},"end":{"line":38,"column":47}}},"6":{"name":"(anonymous_6)","line":55,"loc":{"start":{"line":55,"column":14},"end":{"line":55,"column":26}}},"7":{"name":"(anonymous_7)","line":59,"loc":{"start":{"line":59,"column":11},"end":{"line":59,"column":23}}},"8":{"name":"(anonymous_8)","line":81,"loc":{"start":{"line":81,"column":9},"end":{"line":81,"column":35}}},"9":{"name":"(anonymous_9)","line":118,"loc":{"start":{"line":118,"column":11},"end":{"line":118,"column":33}}},"10":{"name":"(anonymous_10)","line":123,"loc":{"start":{"line":123,"column":26},"end":{"line":123,"column":42}}},"11":{"name":"(anonymous_11)","line":148,"loc":{"start":{"line":148,"column":45},"end":{"line":148,"column":60}}},"12":{"name":"check","line":157,"loc":{"start":{"line":157,"column":12},"end":{"line":157,"column":54}}},"13":{"name":"(anonymous_13)","line":163,"loc":{"start":{"line":163,"column":26},"end":{"line":163,"column":41}}},"14":{"name":"(anonymous_14)","line":184,"loc":{"start":{"line":184,"column":45},"end":{"line":184,"column":60}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":15,"column":41}},"2":{"start":{"line":17,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":37}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":55}},"6":{"start":{"line":25,"column":0},"end":{"line":27,"column":1}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":23}},"8":{"start":{"line":29,"column":0},"end":{"line":49,"column":1}},"9":{"start":{"line":30,"column":4},"end":{"line":31,"column":17}},"10":{"start":{"line":34,"column":4},"end":{"line":36,"column":7}},"11":{"start":{"line":35,"column":8},"end":{"line":35,"column":30}},"12":{"start":{"line":38,"column":4},"end":{"line":46,"column":7}},"13":{"start":{"line":40,"column":8},"end":{"line":40,"column":74}},"14":{"start":{"line":42,"column":8},"end":{"line":42,"column":48}},"15":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"16":{"start":{"line":44,"column":12},"end":{"line":44,"column":35}},"17":{"start":{"line":48,"column":4},"end":{"line":48,"column":15}},"18":{"start":{"line":51,"column":0},"end":{"line":51,"column":45}},"19":{"start":{"line":52,"column":0},"end":{"line":52,"column":45}},"20":{"start":{"line":54,"column":0},"end":{"line":191,"column":3}},"21":{"start":{"line":56,"column":8},"end":{"line":56,"column":142}},"22":{"start":{"line":60,"column":8},"end":{"line":66,"column":35}},"23":{"start":{"line":68,"column":8},"end":{"line":68,"column":30}},"24":{"start":{"line":70,"column":8},"end":{"line":70,"column":122}},"25":{"start":{"line":71,"column":8},"end":{"line":71,"column":142}},"26":{"start":{"line":72,"column":8},"end":{"line":72,"column":97}},"27":{"start":{"line":73,"column":8},"end":{"line":73,"column":119}},"28":{"start":{"line":74,"column":8},"end":{"line":74,"column":90}},"29":{"start":{"line":75,"column":8},"end":{"line":76,"column":63}},"30":{"start":{"line":78,"column":8},"end":{"line":78,"column":28}},"31":{"start":{"line":83,"column":8},"end":{"line":108,"column":24}},"32":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"33":{"start":{"line":111,"column":12},"end":{"line":111,"column":49}},"34":{"start":{"line":114,"column":8},"end":{"line":114,"column":42}},"35":{"start":{"line":115,"column":8},"end":{"line":189,"column":11}},"36":{"start":{"line":119,"column":12},"end":{"line":119,"column":35}},"37":{"start":{"line":119,"column":23},"end":{"line":119,"column":33}},"38":{"start":{"line":120,"column":12},"end":{"line":122,"column":13}},"39":{"start":{"line":121,"column":15},"end":{"line":121,"column":66}},"40":{"start":{"line":123,"column":12},"end":{"line":126,"column":15}},"41":{"start":{"line":124,"column":16},"end":{"line":124,"column":79}},"42":{"start":{"line":125,"column":16},"end":{"line":125,"column":46}},"43":{"start":{"line":127,"column":12},"end":{"line":145,"column":87}},"44":{"start":{"line":148,"column":12},"end":{"line":150,"column":15}},"45":{"start":{"line":149,"column":16},"end":{"line":149,"column":81}},"46":{"start":{"line":152,"column":12},"end":{"line":155,"column":13}},"47":{"start":{"line":153,"column":16},"end":{"line":153,"column":66}},"48":{"start":{"line":154,"column":16},"end":{"line":154,"column":128}},"49":{"start":{"line":157,"column":12},"end":{"line":180,"column":13}},"50":{"start":{"line":158,"column":16},"end":{"line":179,"column":19}},"51":{"start":{"line":164,"column":20},"end":{"line":166,"column":52}},"52":{"start":{"line":168,"column":20},"end":{"line":178,"column":21}},"53":{"start":{"line":169,"column":24},"end":{"line":172,"column":25}},"54":{"start":{"line":170,"column":28},"end":{"line":171,"column":93}},"55":{"start":{"line":174,"column":24},"end":{"line":177,"column":25}},"56":{"start":{"line":175,"column":28},"end":{"line":176,"column":96}},"57":{"start":{"line":182,"column":12},"end":{"line":182,"column":62}},"58":{"start":{"line":184,"column":12},"end":{"line":186,"column":15}},"59":{"start":{"line":185,"column":16},"end":{"line":185,"column":89}},"60":{"start":{"line":188,"column":12},"end":{"line":188,"column":76}},"61":{"start":{"line":193,"column":0},"end":{"line":193,"column":38}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":43},"end":{"line":40,"column":67}},{"start":{"line":40,"column":70},"end":{"line":40,"column":73}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]},"4":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":8}},{"start":{"line":110,"column":8},"end":{"line":110,"column":8}}]},"5":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":15},"end":{"line":114,"column":24}},{"start":{"line":114,"column":28},"end":{"line":114,"column":41}}]},"6":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":12}},{"start":{"line":119,"column":12},"end":{"line":119,"column":12}}]},"7":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":12},"end":{"line":120,"column":12}},{"start":{"line":120,"column":12},"end":{"line":120,"column":12}}]},"8":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":32},"end":{"line":129,"column":62}},{"start":{"line":129,"column":66},"end":{"line":129,"column":67}}]},"9":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":30},"end":{"line":130,"column":58}},{"start":{"line":130,"column":62},"end":{"line":130,"column":63}}]},"10":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":27},"end":{"line":131,"column":52}},{"start":{"line":131,"column":56},"end":{"line":131,"column":57}}]},"11":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":31},"end":{"line":132,"column":60}},{"start":{"line":132,"column":64},"end":{"line":132,"column":65}}]},"12":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":30},"end":{"line":133,"column":58}},{"start":{"line":133,"column":62},"end":{"line":133,"column":64}}]},"13":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":32},"end":{"line":136,"column":60}},{"start":{"line":136,"column":64},"end":{"line":136,"column":65}}]},"14":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":30},"end":{"line":137,"column":56}},{"start":{"line":137,"column":60},"end":{"line":137,"column":61}}]},"15":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":27},"end":{"line":138,"column":50}},{"start":{"line":138,"column":54},"end":{"line":138,"column":55}}]},"16":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":31},"end":{"line":139,"column":58}},{"start":{"line":139,"column":62},"end":{"line":139,"column":63}}]},"17":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":30},"end":{"line":140,"column":56}},{"start":{"line":140,"column":60},"end":{"line":140,"column":62}}]},"18":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":12}},{"start":{"line":152,"column":12},"end":{"line":152,"column":12}}]},"19":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":20},"end":{"line":168,"column":20}},{"start":{"line":168,"column":20},"end":{"line":168,"column":20}}]},"20":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":24},"end":{"line":169,"column":24}},{"start":{"line":169,"column":24},"end":{"line":169,"column":24}}]},"21":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":24},"end":{"line":174,"column":24}},{"start":{"line":174,"column":24},"end":{"line":174,"column":24}}]},"22":{"line":188,"type":"cond-expr","locations":[{"start":{"line":188,"column":50},"end":{"line":188,"column":54}},{"start":{"line":188,"column":57},"end":{"line":188,"column":74}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var nopt = require('nopt'),","    path = require('path'),","    fs = require('fs'),","    Collector = require('../collector'),","    formatOption = require('../util/help-formatter').formatOption,","    util = require('util'),","    utils = require('../object-utils'),","    filesFor = require('../util/file-matcher').filesFor,","    Command = require('./index'),","    configuration = require('../config');","","function isAbsolute(file) {","    if (path.isAbsolute) {","        return path.isAbsolute(file);","    }","","    return path.resolve(file) === path.normalize(file);","}","","function CheckCoverageCommand() {","    Command.call(this);","}","","function removeFiles(covObj, root, files) {","    var filesObj = {},","        obj = {};","","    // Create lookup table.","    files.forEach(function (file) {","        filesObj[file] = true;","    });","","    Object.keys(covObj).forEach(function (key) {","        // Exclude keys will always be relative, but covObj keys can be absolute or relative","        var excludeKey = isAbsolute(key) ? path.relative(root, key) : key;","        // Also normalize for files that start with `./`, etc.","        excludeKey = path.normalize(excludeKey);","        if (filesObj[excludeKey] !== true) {","            obj[key] = covObj[key];","        }","    });","","    return obj;","}","","CheckCoverageCommand.TYPE = 'check-coverage';","util.inherits(CheckCoverageCommand, Command);","","Command.mix(CheckCoverageCommand, {","    synopsis: function () {","        return \"checks overall/per-file coverage against thresholds from coverage JSON files. Exits 1 if thresholds are not met, 0 otherwise\";","    },","","    usage: function () {","        console.error('\\nUsage: ' + this.toolName() + ' ' + this.type() + ' <options> [<include-pattern>]\\n\\nOptions are:\\n\\n' +","            [","                formatOption('--statements <threshold>', 'global statement coverage threshold'),","                formatOption('--functions <threshold>', 'global function coverage threshold'),","                formatOption('--branches <threshold>', 'global branch coverage threshold'),","                formatOption('--lines <threshold>', 'global line coverage threshold')","            ].join('\\n\\n') + '\\n');","","        console.error('\\n\\n');","","        console.error('Thresholds, when specified as a positive number are taken to be the minimum percentage required.');","        console.error('When a threshold is specified as a negative number it represents the maximum number of uncovered entities allowed.\\n');","        console.error('For example, --statements 90 implies minimum statement coverage is 90%.');","        console.error('             --statements -10 implies that no more than 10 uncovered statements are allowed\\n');","        console.error('Per-file thresholds can be specified via a configuration file.\\n');","        console.error('<include-pattern> is a glob pattern that can be used to select one or more coverage files ' +","            'for merge. This defaults to \"**/coverage*.json\"');","","        console.error('\\n');","    },","","    run: function (args, callback) {","","        var template = {","                config: path,","                root: path,","                statements: Number,","                lines: Number,","                branches: Number,","                functions: Number,","                verbose: Boolean","            },","            opts = nopt(template, { v : '--verbose' }, args, 0),","            // Translate to config opts.","            config = configuration.loadFile(opts.config, {","                verbose: opts.verbose,","                check: {","                    global: {","                        statements: opts.statements,","                        lines: opts.lines,","                        branches: opts.branches,","                        functions: opts.functions","                    }","                }","            }),","            includePattern = '**/coverage*.json',","            root,","            collector = new Collector(),","            errors = [];","","        if (opts.argv.remain.length > 0) {","            includePattern = opts.argv.remain[0];","        }","","        root = opts.root || process.cwd();","        filesFor({","            root: root,","            includes: [ includePattern ]","        }, function (err, files) {","            if (err) { throw err; }","            if (files.length === 0) {","               return callback('ERROR: No coverage files found.');","            }","            files.forEach(function (file) {","                var coverageObject = JSON.parse(fs.readFileSync(file, 'utf8'));","                collector.add(coverageObject);","            });","            var thresholds = {","                global: {","                    statements: config.check.global.statements || 0,","                    branches: config.check.global.branches || 0,","                    lines: config.check.global.lines || 0,","                    functions: config.check.global.functions || 0,","                    excludes: config.check.global.excludes || []","                },","                each: {","                    statements: config.check.each.statements || 0,","                    branches: config.check.each.branches || 0,","                    lines: config.check.each.lines || 0,","                    functions: config.check.each.functions || 0,","                    excludes: config.check.each.excludes || []","                }","            },","                rawCoverage = collector.getFinalCoverage(),","                globalResults = utils.summarizeCoverage(removeFiles(rawCoverage, root, thresholds.global.excludes)),","                eachResults = removeFiles(rawCoverage, root, thresholds.each.excludes);","","            // Summarize per-file results and mutate original results.","            Object.keys(eachResults).forEach(function (key) {","                eachResults[key] = utils.summarizeFileCoverage(eachResults[key]);","            });","","            if (config.verbose) {","                console.log('Compare actuals against thresholds');","                console.log(JSON.stringify({ global: globalResults, each: eachResults, thresholds: thresholds }, undefined, 4));","            }","","            function check(name, thresholds, actuals) {","                [","                    \"statements\",","                    \"branches\",","                    \"lines\",","                    \"functions\"","                ].forEach(function (key) {","                    var actual = actuals[key].pct,","                        actualUncovered = actuals[key].total - actuals[key].covered,","                        threshold = thresholds[key];","","                    if (threshold < 0) {","                        if (threshold * -1 < actualUncovered) {","                            errors.push('ERROR: Uncovered count for ' + key + ' (' + actualUncovered +","                                ') exceeds ' + name + ' threshold (' + -1 * threshold + ')');","                        }","                    } else {","                        if (actual < threshold) {","                            errors.push('ERROR: Coverage for ' + key + ' (' + actual +","                                '%) does not meet ' + name + ' threshold (' + threshold + '%)');","                        }","                    }","                });","            }","","            check(\"global\", thresholds.global, globalResults);","","            Object.keys(eachResults).forEach(function (key) {","                check(\"per-file\" + \" (\" + key + \") \", thresholds.each, eachResults[key]);","            });","","            return callback(errors.length === 0 ? null : errors.join(\"\\n\"));","        });","    }","});","","module.exports = CheckCoverageCommand;","","",""],"l":{"6":1,"17":1,"18":0,"19":0,"22":0,"25":1,"26":0,"29":1,"30":0,"34":0,"35":0,"38":0,"40":0,"42":0,"43":0,"44":0,"48":0,"51":1,"52":1,"54":1,"56":0,"60":0,"68":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"78":0,"83":0,"110":0,"111":0,"114":0,"115":0,"119":0,"120":0,"121":0,"123":0,"124":0,"125":0,"127":0,"148":0,"149":0,"152":0,"153":0,"154":0,"157":1,"158":0,"164":0,"168":0,"169":0,"170":0,"174":0,"175":0,"182":0,"184":0,"185":0,"188":0,"193":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/collector.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/collector.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"Collector","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":28}}},"2":{"name":"(anonymous_2)","line":66,"loc":{"start":{"line":66,"column":9},"end":{"line":66,"column":45}}},"3":{"name":"(anonymous_3)","line":68,"loc":{"start":{"line":68,"column":38},"end":{"line":68,"column":53}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":11},"end":{"line":82,"column":23}}},"5":{"name":"(anonymous_5)","line":92,"loc":{"start":{"line":92,"column":21},"end":{"line":92,"column":41}}},"6":{"name":"(anonymous_6)","line":104,"loc":{"start":{"line":104,"column":22},"end":{"line":104,"column":34}}},"7":{"name":"(anonymous_7)","line":107,"loc":{"start":{"line":107,"column":29},"end":{"line":107,"column":45}}},"8":{"name":"(anonymous_8)","line":117,"loc":{"start":{"line":117,"column":13},"end":{"line":117,"column":25}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":7,"column":38}},"2":{"start":{"line":52,"column":0},"end":{"line":55,"column":1}},"3":{"start":{"line":53,"column":4},"end":{"line":53,"column":28}},"4":{"start":{"line":54,"column":4},"end":{"line":54,"column":52}},"5":{"start":{"line":57,"column":0},"end":{"line":120,"column":2}},"6":{"start":{"line":67,"column":8},"end":{"line":67,"column":31}},"7":{"start":{"line":68,"column":8},"end":{"line":75,"column":11}},"8":{"start":{"line":69,"column":12},"end":{"line":69,"column":45}},"9":{"start":{"line":70,"column":12},"end":{"line":74,"column":13}},"10":{"start":{"line":71,"column":16},"end":{"line":71,"column":98}},"11":{"start":{"line":73,"column":16},"end":{"line":73,"column":51}},"12":{"start":{"line":83,"column":8},"end":{"line":83,"column":33}},"13":{"start":{"line":93,"column":8},"end":{"line":93,"column":49}},"14":{"start":{"line":94,"column":8},"end":{"line":94,"column":41}},"15":{"start":{"line":95,"column":8},"end":{"line":95,"column":19}},"16":{"start":{"line":105,"column":8},"end":{"line":106,"column":24}},"17":{"start":{"line":107,"column":8},"end":{"line":109,"column":11}},"18":{"start":{"line":108,"column":12},"end":{"line":108,"column":51}},"19":{"start":{"line":110,"column":8},"end":{"line":110,"column":19}},"20":{"start":{"line":118,"column":8},"end":{"line":118,"column":29}},"21":{"start":{"line":122,"column":0},"end":{"line":122,"column":27}}},"branchMap":{"1":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":14},"end":{"line":53,"column":21}},{"start":{"line":53,"column":25},"end":{"line":53,"column":27}}]},"2":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":17},"end":{"line":54,"column":30}},{"start":{"line":54,"column":34},"end":{"line":54,"column":51}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12}},{"start":{"line":70,"column":12},"end":{"line":70,"column":12}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","\"use strict\";","var MemoryStore = require('./store/memory'),","    utils = require('./object-utils');","","/**"," * a mechanism to merge multiple coverage objects into one. Handles the use case"," * of overlapping coverage information for the same files in multiple coverage"," * objects and does not double-count in this situation. For example, if"," * you pass the same coverage object multiple times, the final merged object will be"," * no different that any of the objects passed in (except for execution counts)."," *"," * The `Collector` is built for scale to handle thousands of coverage objects."," * By default, all processing is done in memory since the common use-case is of"," * one or a few coverage objects. You can work around memory"," * issues by passing in a `Store` implementation that stores temporary computations"," * on disk (the `tmp` store, for example)."," *"," * The `getFinalCoverage` method returns an object with merged coverage information"," * and is provided as a convenience for implementors working with coverage information"," * that can fit into memory. Reporters, in the interest of generality, should *not* use this method for"," * creating reports."," *"," * Usage"," * -----"," *"," *      var collector = new require('istanbul').Collector();"," *"," *      files.forEach(function (f) {"," *          //each coverage object can have overlapping information about multiple files"," *          collector.add(JSON.parse(fs.readFileSync(f, 'utf8')));"," *      });"," *"," *      collector.files().forEach(function(file) {"," *          var fileCoverage = collector.fileCoverageFor(file);"," *          console.log('Coverage for ' + file + ' is:' + JSON.stringify(fileCoverage));"," *      });"," *"," *      // convenience method: do not use this when dealing with a large number of files"," *      var finalCoverage = collector.getFinalCoverage();"," *"," * @class Collector"," * @module main"," * @constructor"," * @param {Object} options Optional. Configuration options."," * @param {Store} options.store - an implementation of `Store` to use for temporary"," *      calculations."," */","function Collector(options) {","    options = options || {};","    this.store = options.store || new MemoryStore();","}","","Collector.prototype = {","    /**","     * adds a coverage object to the collector.","     *","     * @method add","     * @param {Object} coverage the coverage object.","     * @param {String} testName Optional. The name of the test used to produce the object.","     *      This is currently not used.","     */","    add: function (coverage /*, testName */) {","        var store = this.store;","        Object.keys(coverage).forEach(function (key) {","            var fileCoverage = coverage[key];","            if (store.hasKey(key)) {","                store.setObject(key, utils.mergeFileCoverage(fileCoverage, store.getObject(key)));","            } else {","                store.setObject(key, fileCoverage);","            }","        });","    },","    /**","     * returns a list of unique file paths for which coverage information has been added.","     * @method files","     * @return {Array} an array of file paths for which coverage information is present.","     */","    files: function () {","        return this.store.keys();","    },","    /**","     * return file coverage information for a single file","     * @method fileCoverageFor","     * @param {String} fileName the path for the file for which coverage information is","     *      required. Must be one of the values returned in the `files()` method.","     * @return {Object} the coverage information for the specified file.","     */","    fileCoverageFor: function (fileName) {","        var ret = this.store.getObject(fileName);","        utils.addDerivedInfoForFile(ret);","        return ret;","    },","    /**","     * returns file coverage information for all files. This has the same format as","     * any of the objects passed in to the `add` method. The number of keys in this","     * object will be a superset of all keys found in the objects passed to `add()`","     * @method getFinalCoverage","     * @return {Object} the merged coverage information","     */","    getFinalCoverage: function () {","        var ret = {},","            that = this;","        this.files().forEach(function (file) {","            ret[file] = that.fileCoverageFor(file);","        });","        return ret;","    },","    /**","     * disposes this collector and reclaims temporary resources used in the","     * computation. Calls `dispose()` on the underlying store.","     * @method dispose","     */","    dispose: function () {","        this.store.dispose();","    }","};","","module.exports = Collector;"],"l":{"6":1,"52":1,"53":0,"54":0,"57":1,"67":0,"68":0,"69":0,"70":0,"71":0,"73":0,"83":0,"93":0,"94":0,"95":0,"105":0,"107":0,"108":0,"110":0,"118":0,"122":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/help-formatter.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/help-formatter.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"formatPara","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}}},"2":{"name":"formatOption","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":40}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":11,"column":44}},"2":{"start":{"line":13,"column":0},"end":{"line":15,"column":1}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":26}},"4":{"start":{"line":17,"column":0},"end":{"line":25,"column":1}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":39}},"6":{"start":{"line":20,"column":4},"end":{"line":24,"column":5}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":58}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":91}},"9":{"start":{"line":27,"column":0},"end":{"line":30,"column":2}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var OPT_PREFIX = \"      \",","    OPT_START = OPT_PREFIX.length,","    TEXT_START = 14,","    STOP = 80,","    wrap = require('wordwrap')(TEXT_START, STOP),","    paraWrap = require('wordwrap')(1, STOP);","","function formatPara(text) {","    return paraWrap(text);","}","","function formatOption(option, helpText) {","    var formattedText = wrap(helpText);","","    if (option.length > TEXT_START - OPT_START - 2) {","        return OPT_PREFIX + option + '\\n' + formattedText;","    } else {","        return OPT_PREFIX + option + formattedText.substring((OPT_PREFIX + option).length);","    }","}","","module.exports = {","    formatPara: formatPara,","    formatOption: formatOption","};"],"l":{"6":1,"13":1,"14":0,"17":1,"18":0,"20":0,"21":0,"23":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/file-matcher.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/file-matcher.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"filesFor","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":35},"end":{"line":33,"column":57}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":30},"end":{"line":38,"column":46}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":25},"end":{"line":44,"column":47}}},"5":{"name":"matcherFor","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":39}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":22},"end":{"line":60,"column":44}}},"7":{"name":"(anonymous_7)","line":64,"loc":{"start":{"line":64,"column":22},"end":{"line":64,"column":38}}},"8":{"name":"(anonymous_8)","line":66,"loc":{"start":{"line":66,"column":18},"end":{"line":66,"column":34}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":10,"column":12}},"2":{"start":{"line":12,"column":0},"end":{"line":48,"column":1}},"3":{"start":{"line":13,"column":4},"end":{"line":16,"column":5}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":27}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":28}},"7":{"start":{"line":19,"column":4},"end":{"line":24,"column":13}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":33}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":78}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":89}},"11":{"start":{"line":30,"column":4},"end":{"line":30,"column":56}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":13}},"13":{"start":{"line":32,"column":4},"end":{"line":32,"column":50}},"14":{"start":{"line":33,"column":4},"end":{"line":47,"column":7}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":42}},"16":{"start":{"line":34,"column":19},"end":{"line":34,"column":40}},"17":{"start":{"line":35,"column":8},"end":{"line":35,"column":54}},"18":{"start":{"line":35,"column":24},"end":{"line":35,"column":52}},"19":{"start":{"line":37,"column":8},"end":{"line":40,"column":9}},"20":{"start":{"line":38,"column":12},"end":{"line":38,"column":84}},"21":{"start":{"line":38,"column":48},"end":{"line":38,"column":80}},"22":{"start":{"line":39,"column":12},"end":{"line":39,"column":40}},"23":{"start":{"line":42,"column":8},"end":{"line":42,"column":68}},"24":{"start":{"line":44,"column":8},"end":{"line":46,"column":21}},"25":{"start":{"line":45,"column":12},"end":{"line":45,"column":71}},"26":{"start":{"line":50,"column":0},"end":{"line":70,"column":1}},"27":{"start":{"line":52,"column":4},"end":{"line":55,"column":5}},"28":{"start":{"line":53,"column":8},"end":{"line":53,"column":27}},"29":{"start":{"line":54,"column":8},"end":{"line":54,"column":23}},"30":{"start":{"line":56,"column":4},"end":{"line":56,"column":28}},"31":{"start":{"line":57,"column":4},"end":{"line":57,"column":29}},"32":{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},"33":{"start":{"line":60,"column":4},"end":{"line":69,"column":7}},"34":{"start":{"line":61,"column":8},"end":{"line":62,"column":20}},"35":{"start":{"line":63,"column":8},"end":{"line":63,"column":42}},"36":{"start":{"line":63,"column":19},"end":{"line":63,"column":40}},"37":{"start":{"line":64,"column":8},"end":{"line":64,"column":65}},"38":{"start":{"line":64,"column":40},"end":{"line":64,"column":61}},"39":{"start":{"line":66,"column":8},"end":{"line":66,"column":60}},"40":{"start":{"line":66,"column":36},"end":{"line":66,"column":57}},"41":{"start":{"line":67,"column":8},"end":{"line":67,"column":45}},"42":{"start":{"line":68,"column":8},"end":{"line":68,"column":39}},"43":{"start":{"line":72,"column":0},"end":{"line":75,"column":2}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":17}},{"start":{"line":13,"column":21},"end":{"line":13,"column":50}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":14},"end":{"line":17,"column":21}},{"start":{"line":17,"column":25},"end":{"line":17,"column":27}}]},"4":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":11},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":32}}]},"5":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":53},"end":{"line":27,"column":61}},{"start":{"line":27,"column":64},"end":{"line":27,"column":77}}]},"6":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":15},"end":{"line":27,"column":23}},{"start":{"line":27,"column":27},"end":{"line":27,"column":50}}]},"7":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":53},"end":{"line":28,"column":61}},{"start":{"line":28,"column":64},"end":{"line":28,"column":88}}]},"8":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":15},"end":{"line":28,"column":23}},{"start":{"line":28,"column":27},"end":{"line":28,"column":50}}]},"9":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]},"10":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":8}},{"start":{"line":35,"column":8},"end":{"line":35,"column":8}}]},"11":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]},"12":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":28},"end":{"line":42,"column":61}},{"start":{"line":42,"column":65},"end":{"line":42,"column":67}}]},"13":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"14":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":17}},{"start":{"line":52,"column":21},"end":{"line":52,"column":50}}]},"15":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":21}},{"start":{"line":56,"column":25},"end":{"line":56,"column":27}}]},"16":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var async = require('async'),","    glob = require('glob'),","    fs = require('fs'),","    path = require('path'),","    seq = 0;","","function filesFor(options, callback) {","    if (!callback && typeof options === 'function') {","        callback = options;","        options = null;","    }","    options = options || {};","","    var root = options.root,","        includes = options.includes,","        excludes = options.excludes,","        realpath = options.realpath,","        relative = options.relative,","        opts;","","    root = root || process.cwd();","    includes = includes && Array.isArray(includes) ? includes : [ '**/*.js' ];","    excludes = excludes && Array.isArray(excludes) ? excludes : [ '**/node_modules/**' ];","","    opts = { cwd: root, nodir: true, ignore: excludes };","    seq += 1;","    opts['x' + seq + new Date().getTime()] = true; //cache buster for minimatch cache bug","    glob(includes.join(' '), opts, function (err, files) {","        if (err) { return callback(err); }","        if (relative) { return callback(err, files); }","","        if (!realpath) {","            files = files.map(function (file) { return path.resolve(root, file); });","            return callback(err, files);","        }","","        var realPathCache = module.constructor._realpathCache || {};","","        async.map(files, function (file, done) {","            fs.realpath(path.resolve(root, file), realPathCache, done);","        }, callback);","    });","}","","function matcherFor(options, callback) {","","    if (!callback && typeof options === 'function') {","        callback = options;","        options = null;","    }","    options = options || {};","    options.relative = false; //force absolute paths","    options.realpath = true; //force real paths (to match Node.js module paths)","","    filesFor(options, function (err, files) {","        var fileMap = {},","            matchFn;","        if (err) { return callback(err); }","        files.forEach(function (file) { fileMap[file] = true; });","","        matchFn = function (file) { return fileMap[file]; };","        matchFn.files = Object.keys(fileMap);","        return callback(null, matchFn);","    });","}","","module.exports = {","    filesFor: filesFor,","    matcherFor: matcherFor","};","",""],"l":{"6":1,"12":1,"13":0,"14":0,"15":0,"17":0,"19":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"42":0,"44":0,"45":0,"50":1,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"60":0,"61":0,"63":0,"64":0,"66":0,"67":0,"68":0,"72":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/config.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/config.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":19,"11":17,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":3,"33":3,"34":19,"35":19,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":1,"43":1,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":1,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":1,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":19,"3":17,"4":0,"5":0,"6":0,"7":0,"8":0,"9":3,"10":19,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"defaultConfig","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}}},"2":{"name":"dasherize","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":25}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":39},"end":{"line":70,"column":66}}},"4":{"name":"isScalar","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":21}}},"5":{"name":"isObject","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":21}}},"6":{"name":"mergeObjects","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":42}}},"7":{"name":"(anonymous_7)","line":87,"loc":{"start":{"line":87,"column":34},"end":{"line":87,"column":47}}},"8":{"name":"mergeDefaults","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":43}}},"9":{"name":"addMethods","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":22}}},"10":{"name":"(anonymous_10)","line":111,"loc":{"start":{"line":111,"column":17},"end":{"line":111,"column":32}}},"11":{"name":"(anonymous_11)","line":114,"loc":{"start":{"line":114,"column":33},"end":{"line":114,"column":45}}},"12":{"name":"InstrumentOptions","line":127,"loc":{"start":{"line":127,"column":0},"end":{"line":127,"column":35}}},"13":{"name":"(anonymous_13)","line":204,"loc":{"start":{"line":204,"column":35},"end":{"line":204,"column":47}}},"14":{"name":"(anonymous_14)","line":212,"loc":{"start":{"line":212,"column":39},"end":{"line":212,"column":63}}},"15":{"name":"ReportingOptions","line":231,"loc":{"start":{"line":231,"column":0},"end":{"line":231,"column":34}}},"16":{"name":"isInvalidMark","line":266,"loc":{"start":{"line":266,"column":0},"end":{"line":266,"column":31}}},"17":{"name":"(anonymous_17)","line":301,"loc":{"start":{"line":301,"column":40},"end":{"line":301,"column":52}}},"18":{"name":"(anonymous_18)","line":306,"loc":{"start":{"line":306,"column":30},"end":{"line":306,"column":43}}},"19":{"name":"HookOptions","line":327,"loc":{"start":{"line":327,"column":0},"end":{"line":327,"column":29}}},"20":{"name":"Configuration","line":375,"loc":{"start":{"line":375,"column":0},"end":{"line":375,"column":39}}},"21":{"name":"loadFile","line":416,"loc":{"start":{"line":416,"column":0},"end":{"line":416,"column":35}}},"22":{"name":"loadObject","line":442,"loc":{"start":{"line":442,"column":0},"end":{"line":442,"column":36}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":11,"column":51}},"2":{"start":{"line":13,"column":0},"end":{"line":67,"column":1}},"3":{"start":{"line":14,"column":4},"end":{"line":58,"column":6}},"4":{"start":{"line":59,"column":4},"end":{"line":59,"column":53}},"5":{"start":{"line":60,"column":4},"end":{"line":60,"column":68}},"6":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"7":{"start":{"line":63,"column":8},"end":{"line":63,"column":55}},"8":{"start":{"line":66,"column":4},"end":{"line":66,"column":15}},"9":{"start":{"line":69,"column":0},"end":{"line":73,"column":1}},"10":{"start":{"line":70,"column":4},"end":{"line":72,"column":7}},"11":{"start":{"line":71,"column":8},"end":{"line":71,"column":45}},"12":{"start":{"line":74,"column":0},"end":{"line":77,"column":1}},"13":{"start":{"line":75,"column":4},"end":{"line":75,"column":36}},"14":{"start":{"line":75,"column":22},"end":{"line":75,"column":34}},"15":{"start":{"line":76,"column":4},"end":{"line":76,"column":73}},"16":{"start":{"line":79,"column":0},"end":{"line":81,"column":1}},"17":{"start":{"line":80,"column":4},"end":{"line":80,"column":68}},"18":{"start":{"line":83,"column":0},"end":{"line":101,"column":1}},"19":{"start":{"line":85,"column":4},"end":{"line":85,"column":17}},"20":{"start":{"line":87,"column":4},"end":{"line":99,"column":7}},"21":{"start":{"line":88,"column":8},"end":{"line":89,"column":29}},"22":{"start":{"line":91,"column":8},"end":{"line":98,"column":9}},"23":{"start":{"line":92,"column":12},"end":{"line":92,"column":66}},"24":{"start":{"line":93,"column":15},"end":{"line":98,"column":9}},"25":{"start":{"line":94,"column":12},"end":{"line":94,"column":40}},"26":{"start":{"line":95,"column":12},"end":{"line":95,"column":42}},"27":{"start":{"line":97,"column":12},"end":{"line":97,"column":44}},"28":{"start":{"line":100,"column":4},"end":{"line":100,"column":15}},"29":{"start":{"line":103,"column":0},"end":{"line":105,"column":1}},"30":{"start":{"line":104,"column":4},"end":{"line":104,"column":50}},"31":{"start":{"line":107,"column":0},"end":{"line":118,"column":1}},"32":{"start":{"line":108,"column":4},"end":{"line":109,"column":28}},"33":{"start":{"line":111,"column":4},"end":{"line":117,"column":7}},"34":{"start":{"line":112,"column":8},"end":{"line":113,"column":38}},"35":{"start":{"line":114,"column":8},"end":{"line":116,"column":10}},"36":{"start":{"line":115,"column":12},"end":{"line":115,"column":41}},"37":{"start":{"line":127,"column":0},"end":{"line":133,"column":1}},"38":{"start":{"line":128,"column":4},"end":{"line":131,"column":5}},"39":{"start":{"line":129,"column":8},"end":{"line":129,"column":107}},"40":{"start":{"line":130,"column":8},"end":{"line":130,"column":66}},"41":{"start":{"line":132,"column":4},"end":{"line":132,"column":25}},"42":{"start":{"line":192,"column":0},"end":{"line":196,"column":39}},"43":{"start":{"line":204,"column":0},"end":{"line":204,"column":90}},"44":{"start":{"line":204,"column":49},"end":{"line":204,"column":87}},"45":{"start":{"line":212,"column":0},"end":{"line":222,"column":2}},"46":{"start":{"line":213,"column":4},"end":{"line":213,"column":13}},"47":{"start":{"line":214,"column":4},"end":{"line":220,"column":5}},"48":{"start":{"line":215,"column":8},"end":{"line":215,"column":40}},"49":{"start":{"line":216,"column":8},"end":{"line":218,"column":9}},"50":{"start":{"line":217,"column":12},"end":{"line":217,"column":62}},"51":{"start":{"line":219,"column":8},"end":{"line":219,"column":49}},"52":{"start":{"line":221,"column":4},"end":{"line":221,"column":32}},"53":{"start":{"line":231,"column":0},"end":{"line":233,"column":1}},"54":{"start":{"line":232,"column":4},"end":{"line":232,"column":25}},"55":{"start":{"line":264,"column":0},"end":{"line":264,"column":72}},"56":{"start":{"line":266,"column":0},"end":{"line":288,"column":1}},"57":{"start":{"line":267,"column":4},"end":{"line":267,"column":49}},"58":{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},"59":{"start":{"line":270,"column":8},"end":{"line":270,"column":55}},"60":{"start":{"line":272,"column":4},"end":{"line":272,"column":24}},"61":{"start":{"line":273,"column":4},"end":{"line":273,"column":24}},"62":{"start":{"line":275,"column":4},"end":{"line":277,"column":5}},"63":{"start":{"line":276,"column":8},"end":{"line":276,"column":50}},"64":{"start":{"line":278,"column":4},"end":{"line":280,"column":5}},"65":{"start":{"line":279,"column":8},"end":{"line":279,"column":51}},"66":{"start":{"line":281,"column":4},"end":{"line":283,"column":5}},"67":{"start":{"line":282,"column":8},"end":{"line":282,"column":44}},"68":{"start":{"line":284,"column":4},"end":{"line":286,"column":5}},"69":{"start":{"line":285,"column":8},"end":{"line":285,"column":53}},"70":{"start":{"line":287,"column":4},"end":{"line":287,"column":16}},"71":{"start":{"line":301,"column":0},"end":{"line":317,"column":2}},"72":{"start":{"line":302,"column":4},"end":{"line":304,"column":17}},"73":{"start":{"line":306,"column":4},"end":{"line":315,"column":7}},"74":{"start":{"line":307,"column":8},"end":{"line":308,"column":45}},"75":{"start":{"line":309,"column":8},"end":{"line":314,"column":9}},"76":{"start":{"line":310,"column":12},"end":{"line":310,"column":35}},"77":{"start":{"line":311,"column":12},"end":{"line":311,"column":29}},"78":{"start":{"line":313,"column":12},"end":{"line":313,"column":26}},"79":{"start":{"line":316,"column":4},"end":{"line":316,"column":15}},"80":{"start":{"line":327,"column":0},"end":{"line":329,"column":1}},"81":{"start":{"line":328,"column":4},"end":{"line":328,"column":25}},"82":{"start":{"line":356,"column":0},"end":{"line":356,"column":79}},"83":{"start":{"line":375,"column":0},"end":{"line":392,"column":1}},"84":{"start":{"line":377,"column":4},"end":{"line":377,"column":57}},"85":{"start":{"line":378,"column":4},"end":{"line":380,"column":5}},"86":{"start":{"line":379,"column":8},"end":{"line":379,"column":50}},"87":{"start":{"line":381,"column":4},"end":{"line":386,"column":5}},"88":{"start":{"line":382,"column":8},"end":{"line":382,"column":45}},"89":{"start":{"line":383,"column":8},"end":{"line":383,"column":45}},"90":{"start":{"line":384,"column":8},"end":{"line":384,"column":74}},"91":{"start":{"line":385,"column":8},"end":{"line":385,"column":47}},"92":{"start":{"line":387,"column":4},"end":{"line":387,"column":34}},"93":{"start":{"line":388,"column":4},"end":{"line":388,"column":73}},"94":{"start":{"line":389,"column":4},"end":{"line":389,"column":60}},"95":{"start":{"line":390,"column":4},"end":{"line":390,"column":47}},"96":{"start":{"line":391,"column":4},"end":{"line":391,"column":30}},"97":{"start":{"line":416,"column":0},"end":{"line":440,"column":1}},"98":{"start":{"line":417,"column":4},"end":{"line":418,"column":21}},"99":{"start":{"line":420,"column":4},"end":{"line":428,"column":5}},"100":{"start":{"line":421,"column":8},"end":{"line":423,"column":9}},"101":{"start":{"line":422,"column":12},"end":{"line":422,"column":76}},"102":{"start":{"line":425,"column":8},"end":{"line":427,"column":9}},"103":{"start":{"line":426,"column":12},"end":{"line":426,"column":37}},"104":{"start":{"line":430,"column":4},"end":{"line":437,"column":5}},"105":{"start":{"line":431,"column":8},"end":{"line":433,"column":9}},"106":{"start":{"line":432,"column":12},"end":{"line":432,"column":53}},"107":{"start":{"line":434,"column":8},"end":{"line":436,"column":40}},"108":{"start":{"line":439,"column":4},"end":{"line":439,"column":54}},"109":{"start":{"line":442,"column":0},"end":{"line":444,"column":1}},"110":{"start":{"line":443,"column":4},"end":{"line":443,"column":45}},"111":{"start":{"line":460,"column":0},"end":{"line":491,"column":2}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":17},"end":{"line":7,"column":30}},{"start":{"line":7,"column":34},"end":{"line":7,"column":49}}]},"2":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"4":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":11},"end":{"line":76,"column":26}},{"start":{"line":76,"column":30},"end":{"line":76,"column":47}},{"start":{"line":76,"column":51},"end":{"line":76,"column":72}}]},"5":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":11},"end":{"line":80,"column":32}},{"start":{"line":80,"column":36},"end":{"line":80,"column":46}},{"start":{"line":80,"column":50},"end":{"line":80,"column":67}}]},"6":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":8}},{"start":{"line":91,"column":8},"end":{"line":91,"column":8}}]},"7":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":58},"end":{"line":92,"column":60}},{"start":{"line":92,"column":63},"end":{"line":92,"column":65}}]},"8":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":21},"end":{"line":92,"column":38}},{"start":{"line":92,"column":42},"end":{"line":92,"column":55}}]},"9":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":15},"end":{"line":93,"column":15}},{"start":{"line":93,"column":15},"end":{"line":93,"column":15}}]},"10":{"line":94,"type":"cond-expr","locations":[{"start":{"line":94,"column":32},"end":{"line":94,"column":34}},{"start":{"line":94,"column":37},"end":{"line":94,"column":39}}]},"11":{"line":97,"type":"cond-expr","locations":[{"start":{"line":97,"column":36},"end":{"line":97,"column":38}},{"start":{"line":97,"column":41},"end":{"line":97,"column":43}}]},"12":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":24},"end":{"line":104,"column":32}},{"start":{"line":104,"column":36},"end":{"line":104,"column":38}}]},"13":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"14":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"15":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":8}},{"start":{"line":216,"column":8},"end":{"line":216,"column":8}}]},"16":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":269,"column":4}},{"start":{"line":269,"column":4},"end":{"line":269,"column":4}}]},"17":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":275,"column":4}},{"start":{"line":275,"column":4},"end":{"line":275,"column":4}}]},"18":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":8},"end":{"line":275,"column":19}},{"start":{"line":275,"column":23},"end":{"line":275,"column":34}}]},"19":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":4},"end":{"line":278,"column":4}},{"start":{"line":278,"column":4},"end":{"line":278,"column":4}}]},"20":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":8},"end":{"line":278,"column":16}},{"start":{"line":278,"column":20},"end":{"line":278,"column":28}}]},"21":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":4},"end":{"line":281,"column":4}},{"start":{"line":281,"column":4},"end":{"line":281,"column":4}}]},"22":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"23":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8}},{"start":{"line":309,"column":8},"end":{"line":309,"column":8}}]},"24":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":4},"end":{"line":378,"column":4}},{"start":{"line":378,"column":4},"end":{"line":378,"column":4}}]},"25":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":381,"column":4}},{"start":{"line":381,"column":4},"end":{"line":381,"column":4}}]},"26":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4}}]},"27":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":8},"end":{"line":421,"column":8}},{"start":{"line":421,"column":8},"end":{"line":421,"column":8}}]},"28":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":8},"end":{"line":425,"column":8}},{"start":{"line":425,"column":8},"end":{"line":425,"column":8}}]},"29":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":4},"end":{"line":430,"column":4}},{"start":{"line":430,"column":4},"end":{"line":430,"column":4}}]},"30":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":8},"end":{"line":431,"column":8}},{"start":{"line":431,"column":8},"end":{"line":431,"column":8}}]},"31":{"line":431,"type":"binary-expr","locations":[{"start":{"line":431,"column":12},"end":{"line":431,"column":21}},{"start":{"line":431,"column":25},"end":{"line":431,"column":51}}]},"32":{"line":434,"type":"cond-expr","locations":[{"start":{"line":435,"column":12},"end":{"line":435,"column":76}},{"start":{"line":436,"column":12},"end":{"line":436,"column":39}}]}},"code":["/*"," Copyright (c) 2013, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","var path = require('path'),","    fs = require('fs'),","    existsSync = fs.existsSync || path.existsSync,","    CAMEL_PATTERN = /([a-z])([A-Z])/g,","    YML_PATTERN = /\\.ya?ml$/,","    yaml = require('js-yaml'),","    defaults = require('./report/common/defaults');","","function defaultConfig(includeBackCompatAttrs) {","    var ret = {","        verbose: false,","        instrumentation: {","            root: '.',","            extensions: ['.js'],","            'default-excludes': true,","            excludes: [],","            'embed-source': false,","            variable: '__coverage__',","            compact: true,","            'preserve-comments': false,","            'complete-copy': false,","            'save-baseline': false,","            'baseline-file': './coverage/coverage-baseline.json',","            'include-all-sources': false,","            'include-pid': false,","            'es-modules': false","        },","        reporting: {","            print: 'summary',","            reports: [ 'lcov' ],","            dir: './coverage'","        },","        hooks: {","            'hook-run-in-context': false,","            'post-require-hook': null,","            'handle-sigint': false","        },","        check: {","            global: {","                statements: 0,","                lines: 0,","                branches: 0,","                functions: 0,","                excludes: [] // Currently list of files (root + path). For future, extend to patterns.","            },","            each: {","                statements: 0,","                lines: 0,","                branches: 0,","                functions: 0,","                excludes: []","            }","        }","    };","    ret.reporting.watermarks = defaults.watermarks();","    ret.reporting['report-config'] = defaults.defaultReportConfig();","","    if (includeBackCompatAttrs) {","        ret.instrumentation['preload-sources'] = false;","    }","","    return ret;","}","","function dasherize(word) {","    return word.replace(CAMEL_PATTERN, function (match, lch, uch) {","        return lch + '-' + uch.toLowerCase();","    });","}","function isScalar(v) {","    if (v === null) { return true; }","    return v !== undefined && !Array.isArray(v) && typeof v !== 'object';","}","","function isObject(v) {","    return typeof v === 'object' && v !== null && !Array.isArray(v);","}","","function mergeObjects(explicit, template) {","","    var ret = {};","","    Object.keys(template).forEach(function (k) {","        var v1 = template[k],","            v2 = explicit[k];","","        if (Array.isArray(v1)) {","            ret[k] = Array.isArray(v2) && v2.length > 0 ? v2 : v1;","        } else if (isObject(v1)) {","            v2 = isObject(v2) ? v2 : {};","            ret[k] = mergeObjects(v2, v1);","        } else {","            ret[k] = isScalar(v2) ? v2 : v1;","        }","    });","    return ret;","}","","function mergeDefaults(explicit, implicit) {","    return mergeObjects(explicit || {}, implicit);","}","","function addMethods() {","    var args = Array.prototype.slice.call(arguments),","        cons = args.shift();","","    args.forEach(function (arg) {","        var method = arg,","            property = dasherize(arg);","        cons.prototype[method] = function () {","            return this.config[property];","        };","    });","}","","/**"," * Object that returns instrumentation options"," * @class InstrumentOptions"," * @module config"," * @constructor"," * @param config the instrumentation part of the config object"," */","function InstrumentOptions(config) {","    if (config['preload-sources']) {","        console.error('The preload-sources option is deprecated, please use include-all-sources instead.');","        config['include-all-sources'] = config['preload-sources'];","    }","    this.config = config;","}","","/**"," * returns if default excludes should be turned on. Used by the `cover` command."," * @method defaultExcludes"," * @return {Boolean} true if default excludes should be turned on"," */","/**"," * returns if non-JS files should be copied during instrumentation. Used by the"," * `instrument` command."," * @method completeCopy"," * @return {Boolean} true if non-JS files should be copied"," */","/**"," * returns if the source should be embedded in the instrumented code. Used by the"," * `instrument` command."," * @method embedSource"," * @return {Boolean} true if the source should be embedded in the instrumented code"," */","/**"," * the coverage variable name to use. Used by the `instrument` command."," * @method variable"," * @return {String} the coverage variable name to use"," */","/**"," * returns if the output should be compact JS. Used by the `instrument` command."," * @method compact"," * @return {Boolean} true if the output should be compact"," */","/**"," * returns if comments should be preserved in the generated JS. Used by the"," * `cover` and `instrument` commands."," * @method preserveComments"," * @return {Boolean} true if comments should be preserved in the generated JS"," */","/**"," * returns if a zero-coverage baseline file should be written as part of"," * instrumentation. This allows reporting to display numbers for files that have"," * no tests. Used by the  `instrument` command."," * @method saveBaseline"," * @return {Boolean} true if a baseline coverage file should be written."," */","/**"," * Sets the baseline coverage filename. Used by the  `instrument` command."," * @method baselineFile"," * @return {String} the name of the baseline coverage file."," */","/**"," * returns if comments the JS to instrument contains es6 Module syntax."," * @method esModules"," * @return {Boolean} true if code contains es6 import/export statements."," */","/**"," * returns if the coverage filename should include the PID. Used by the  `instrument` command."," * @method includePid"," * @return {Boolean} true to include pid in coverage filename."," */","","","addMethods(InstrumentOptions,","    'extensions', 'defaultExcludes', 'completeCopy',","    'embedSource', 'variable', 'compact', 'preserveComments',","    'saveBaseline', 'baselineFile', 'esModules',","    'includeAllSources', 'includePid');","","/**"," * returns the root directory used by istanbul which is typically the root of the"," * source tree. Used by the `cover` and `report` commands."," * @method root"," * @return {String} the root directory used by istanbul."," */","InstrumentOptions.prototype.root = function () { return path.resolve(this.config.root); };","/**"," * returns an array of glob patterns that should be excluded for instrumentation."," * Used by the `instrument` and `cover` commands."," * @method excludes"," * @return {Array} an array of glob patterns that should be excluded for"," *  instrumentation."," */","InstrumentOptions.prototype.excludes = function (excludeTests) {","    var defs;","    if (this.defaultExcludes()) {","        defs = [ '**/node_modules/**' ];","        if (excludeTests) {","            defs = defs.concat(['**/test/**', '**/tests/**']);","        }","        return defs.concat(this.config.excludes);","    }","    return this.config.excludes;","};","","/**"," * Object that returns reporting options"," * @class ReportingOptions"," * @module config"," * @constructor"," * @param config the reporting part of the config object"," */","function ReportingOptions(config) {","    this.config = config;","}","","/**"," * returns the kind of information to be printed on the console. May be one"," * of `summary`, `detail`, `both` or `none`. Used by the"," * `cover` command."," * @method print"," * @return {String} the kind of information to print to the console at the end"," * of the `cover` command execution."," */","/**"," * returns a list of reports that should be generated at the end of a run. Used"," * by the `cover` and `report` commands."," * @method reports"," * @return {Array} an array of reports that should be produced"," */","/**"," * returns the directory under which reports should be generated. Used by the"," * `cover` and `report` commands."," *"," * @method dir"," * @return {String} the directory under which reports should be generated."," */","/**"," * returns an object that has keys that are report format names and values that are objects"," * containing detailed configuration for each format. Running `istanbul help config`"," * will give you all the keys per report format that can be overridden."," * Used by the `cover` and `report` commands."," * @method reportConfig"," * @return {Object} detailed report configuration per report format."," */","addMethods(ReportingOptions, 'print', 'reports', 'dir', 'reportConfig');","","function isInvalidMark(v, key) {","    var prefix = 'Watermark for [' + key + '] :';","","    if (v.length !== 2) {","        return prefix + 'must be an array of length 2';","    }","    v[0] = Number(v[0]);","    v[1] = Number(v[1]);","","    if (isNaN(v[0]) || isNaN(v[1])) {","        return prefix + 'must have valid numbers';","    }","    if (v[0] < 0 || v[1] < 0) {","        return prefix + 'must be positive numbers';","    }","    if (v[1] > 100) {","        return prefix + 'cannot exceed 100';","    }","    if (v[1] <= v[0]) {","        return prefix + 'low must be less than high';","    }","    return null;","}","","/**"," * returns the low and high watermarks to be used to designate whether coverage"," * is `low`, `medium` or `high`. Statements, functions, branches and lines can"," * have independent watermarks. These are respected by all reports"," * that color for low, medium and high coverage. See the default configuration for exact syntax"," * using `istanbul help config`. Used by the `cover` and `report` commands."," *"," * @method watermarks"," * @return {Object} an object containing low and high watermarks for statements,"," *  branches, functions and lines."," */","ReportingOptions.prototype.watermarks = function () {","    var v = this.config.watermarks,","        defs = defaults.watermarks(),","        ret = {};","","    Object.keys(defs).forEach(function (k) {","        var mark = v[k], //it will already be a non-zero length array because of the way the merge works","            message = isInvalidMark(mark, k);","        if (message) {","            console.error(message);","            ret[k] = defs[k];","        } else {","            ret[k] = mark;","        }","    });","    return ret;","};","","/**"," * Object that returns hook options. Note that istanbul does not provide an"," * option to hook `require`. This is always done by the `cover` command."," * @class HookOptions"," * @module config"," * @constructor"," * @param config the hooks part of the config object"," */","function HookOptions(config) {","    this.config = config;","}","","/**"," * returns if `vm.runInThisContext` needs to be hooked, in addition to the standard"," * `require` hooks added by istanbul. This should be true for code that uses"," * RequireJS for example. Used by the `cover` command."," * @method hookRunInContext"," * @return {Boolean} true if `vm.runInThisContext` needs to be hooked for coverage"," */","/**"," * returns a path to JS file or a dependent module that should be used for"," * post-processing files after they have been required. See the `yui-istanbul` module for"," * an example of a post-require hook. This particular hook modifies the yui loader when"," * that file is required to add istanbul interceptors. Use by the `cover` command"," *"," * @method postRequireHook"," * @return {String} a path to a JS file or the name of a node module that needs"," * to be used as a `require` post-processor"," */","/**"," * returns if istanbul needs to add a SIGINT (control-c, usually) handler to"," * save coverage information. Useful for getting code coverage out of processes"," * that run forever and need a SIGINT to terminate."," * @method handleSigint"," * @return {Boolean} true if SIGINT needs to be hooked to write coverage information"," */","","addMethods(HookOptions, 'hookRunInContext', 'postRequireHook', 'handleSigint');","","/**"," * represents the istanbul configuration and provides sub-objects that can"," * return instrumentation, reporting and hook options respectively."," * Usage"," * -----"," *"," *      var configObj = require('istanbul').config.loadFile();"," *"," *      console.log(configObj.reporting.reports());"," *"," * @class Configuration"," * @module config"," * @param {Object} obj  the base object to use as the configuration"," * @param {Object} overrides optional - override attributes that are merged into"," *  the base config"," * @constructor"," */","function Configuration(obj, overrides) {","","    var config = mergeDefaults(obj, defaultConfig(true));","    if (isObject(overrides)) {","        config = mergeDefaults(overrides, config);","    }","    if (config.verbose) {","        console.error('Using configuration');","        console.error('-------------------');","        console.error(yaml.safeDump(config, { indent: 4, flowLevel: 3 }));","        console.error('-------------------\\n');","    }","    this.verbose = config.verbose;","    this.instrumentation = new InstrumentOptions(config.instrumentation);","    this.reporting = new ReportingOptions(config.reporting);","    this.hooks = new HookOptions(config.hooks);","    this.check = config.check; // Pass raw config sub-object.","}","","/**"," * true if verbose logging is required"," * @property verbose"," * @type Boolean"," */","/**"," * instrumentation options"," * @property instrumentation"," * @type InstrumentOptions"," */","/**"," * reporting options"," * @property reporting"," * @type ReportingOptions"," */","/**"," * hook options"," * @property hooks"," * @type HookOptions"," */","","","function loadFile(file, overrides) {","    var defaultConfigFile = path.resolve('.istanbul.yml'),","        configObject;","","    if (file) {","        if (!existsSync(file)) {","            throw new Error('Invalid configuration file specified:' + file);","        }","    } else {","        if (existsSync(defaultConfigFile)) {","            file = defaultConfigFile;","        }","    }","","    if (file) {","        if (overrides && overrides.verbose === true) {","            console.error('Loading config: ' + file);","        }","        configObject = file.match(YML_PATTERN) ?","            yaml.safeLoad(fs.readFileSync(file, 'utf8'), { filename: file }) :","            require(path.resolve(file));","    }","","    return new Configuration(configObject, overrides);","}","","function loadObject(obj, overrides) {","    return new Configuration(obj, overrides);","}","","/**"," * methods to load the configuration object."," * Usage"," * -----"," *"," *      var config = require('istanbul').config,"," *          configObj = config.loadFile();"," *"," *      console.log(configObj.reporting.reports());"," *"," * @class Config"," * @module main"," * @static"," */","module.exports = {","    /**","     * loads the specified configuration file with optional overrides. Throws","     * when a file is specified and it is not found.","     * @method loadFile","     * @static","     * @param {String} file the file to load. If falsy, the default config file, if present, is loaded.","     *  If not a default config is used.","     * @param {Object} overrides - an object with override keys that are merged into the","     *  config object loaded","     * @return {Configuration} the config object with overrides applied","     */","    loadFile: loadFile,","    /**","     * loads the specified configuration object with optional overrides.","     * @method loadObject","     * @static","     * @param {Object} obj the object to use as the base configuration.","     * @param {Object} overrides - an object with override keys that are merged into the","     *  config object","     * @return {Configuration} the config object with overrides applied","     */","    loadObject: loadObject,","    /**","     * returns the default configuration object. Note that this is a plain object","     * and not a `Configuration` instance.","     * @method defaultConfig","     * @static","     * @return {Object} an object that represents the default config","     */","    defaultConfig: defaultConfig","};",""],"l":{"5":1,"13":1,"14":0,"59":0,"60":0,"62":0,"63":0,"66":0,"69":1,"70":19,"71":17,"74":1,"75":0,"76":0,"79":1,"80":0,"83":1,"85":0,"87":0,"88":0,"91":0,"92":0,"93":0,"94":0,"95":0,"97":0,"100":0,"103":1,"104":0,"107":1,"108":3,"111":3,"112":19,"114":19,"115":0,"127":1,"128":0,"129":0,"130":0,"132":0,"192":1,"204":1,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"219":0,"221":0,"231":1,"232":0,"264":1,"266":1,"267":0,"269":0,"270":0,"272":0,"273":0,"275":0,"276":0,"278":0,"279":0,"281":0,"282":0,"284":0,"285":0,"287":0,"301":1,"302":0,"306":0,"307":0,"309":0,"310":0,"311":0,"313":0,"316":0,"327":1,"328":0,"356":1,"375":1,"377":0,"378":0,"379":0,"381":0,"382":0,"383":0,"384":0,"385":0,"387":0,"388":0,"389":0,"390":0,"391":0,"416":1,"417":0,"420":0,"421":0,"422":0,"425":0,"426":0,"430":0,"431":0,"432":0,"434":0,"439":0,"442":1,"443":0,"460":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/cover.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/cover.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"CoverCommand","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":24}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":26}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":23}}},"4":{"name":"(anonymous_4)","line":26,"loc":{"start":{"line":26,"column":9},"end":{"line":26,"column":35}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":8,"column":33}},"2":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":23}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"6":{"start":{"line":17,"column":0},"end":{"line":29,"column":3}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":132}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":57}},"9":{"start":{"line":27,"column":8},"end":{"line":27,"column":60}},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":30}}},"branchMap":{},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var runWithCover = require('./common/run-with-cover'),","    util = require('util'),","    Command = require('./index');","","function CoverCommand() {","    Command.call(this);","}","","CoverCommand.TYPE = 'cover';","util.inherits(CoverCommand, Command);","","Command.mix(CoverCommand, {","    synopsis: function () {","        return \"transparently adds coverage information to a node command. Saves coverage.json and reports at the end of execution\";","    },","","    usage: function () {","        runWithCover.usage(this.toolName(), this.type());","    },","","    run: function (args, callback) {","        runWithCover.run(args, this.type(), true, callback);","    }","});","","","module.exports = CoverCommand;","",""],"l":{"6":1,"10":1,"11":0,"14":1,"15":1,"17":1,"19":0,"23":0,"27":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/common/run-with-cover.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/common/run-with-cover.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"usage","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":30}}},"2":{"name":"run","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":55}}},"3":{"name":"(anonymous_3)","line":116,"loc":{"start":{"line":116,"column":12},"end":{"line":116,"column":24}}},"4":{"name":"(anonymous_4)","line":150,"loc":{"start":{"line":150,"column":72},"end":{"line":150,"column":87}}},"5":{"name":"(anonymous_5)","line":155,"loc":{"start":{"line":155,"column":12},"end":{"line":155,"column":36}}},"6":{"name":"(anonymous_6)","line":206,"loc":{"start":{"line":206,"column":37},"end":{"line":206,"column":49}}},"7":{"name":"(anonymous_7)","line":222,"loc":{"start":{"line":222,"column":46},"end":{"line":222,"column":62}}},"8":{"name":"(anonymous_8)","line":229,"loc":{"start":{"line":229,"column":79},"end":{"line":229,"column":94}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":20,"column":44}},"2":{"start":{"line":22,"column":0},"end":{"line":42,"column":1}},"3":{"start":{"line":24,"column":4},"end":{"line":40,"column":31}},"4":{"start":{"line":41,"column":4},"end":{"line":41,"column":24}},"5":{"start":{"line":44,"column":0},"end":{"line":256,"column":1}},"6":{"start":{"line":46,"column":4},"end":{"line":97,"column":17}},"7":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"8":{"start":{"line":100,"column":8},"end":{"line":100,"column":108}},"9":{"start":{"line":103,"column":4},"end":{"line":103,"column":29}},"10":{"start":{"line":104,"column":4},"end":{"line":104,"column":25}},"11":{"start":{"line":106,"column":4},"end":{"line":114,"column":5}},"12":{"start":{"line":107,"column":8},"end":{"line":111,"column":9}},"13":{"start":{"line":108,"column":12},"end":{"line":108,"column":34}},"14":{"start":{"line":110,"column":12},"end":{"line":110,"column":87}},"15":{"start":{"line":113,"column":8},"end":{"line":113,"column":32}},"16":{"start":{"line":116,"column":4},"end":{"line":123,"column":6}},"17":{"start":{"line":117,"column":8},"end":{"line":117,"column":53}},"18":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"19":{"start":{"line":119,"column":12},"end":{"line":119,"column":62}},"20":{"start":{"line":121,"column":8},"end":{"line":121,"column":45}},"21":{"start":{"line":122,"column":8},"end":{"line":122,"column":40}},"22":{"start":{"line":125,"column":4},"end":{"line":125,"column":53}},"23":{"start":{"line":127,"column":4},"end":{"line":255,"column":5}},"24":{"start":{"line":128,"column":8},"end":{"line":128,"column":60}},"25":{"start":{"line":129,"column":8},"end":{"line":129,"column":34}},"26":{"start":{"line":130,"column":8},"end":{"line":130,"column":36}},"27":{"start":{"line":131,"column":8},"end":{"line":131,"column":52}},"28":{"start":{"line":132,"column":8},"end":{"line":145,"column":9}},"29":{"start":{"line":133,"column":12},"end":{"line":144,"column":13}},"30":{"start":{"line":135,"column":16},"end":{"line":135,"column":37}},"31":{"start":{"line":136,"column":16},"end":{"line":136,"column":22}},"32":{"start":{"line":138,"column":16},"end":{"line":138,"column":37}},"33":{"start":{"line":139,"column":16},"end":{"line":139,"column":45}},"34":{"start":{"line":140,"column":16},"end":{"line":140,"column":22}},"35":{"start":{"line":142,"column":16},"end":{"line":142,"column":45}},"36":{"start":{"line":143,"column":16},"end":{"line":143,"column":22}},"37":{"start":{"line":147,"column":8},"end":{"line":147,"column":88}},"38":{"start":{"line":148,"column":8},"end":{"line":252,"column":15}},"39":{"start":{"line":151,"column":16},"end":{"line":151,"column":36}},"40":{"start":{"line":156,"column":16},"end":{"line":156,"column":50}},"41":{"start":{"line":156,"column":27},"end":{"line":156,"column":48}},"42":{"start":{"line":158,"column":16},"end":{"line":163,"column":37}},"43":{"start":{"line":165,"column":16},"end":{"line":169,"column":17}},"44":{"start":{"line":166,"column":20},"end":{"line":166,"column":69}},"45":{"start":{"line":167,"column":23},"end":{"line":169,"column":17}},"46":{"start":{"line":168,"column":20},"end":{"line":168,"column":91}},"47":{"start":{"line":171,"column":16},"end":{"line":181,"column":17}},"48":{"start":{"line":172,"column":20},"end":{"line":180,"column":21}},"49":{"start":{"line":173,"column":24},"end":{"line":179,"column":25}},"50":{"start":{"line":174,"column":28},"end":{"line":174,"column":105}},"51":{"start":{"line":176,"column":28},"end":{"line":176,"column":123}},"52":{"start":{"line":176,"column":43},"end":{"line":176,"column":121}},"53":{"start":{"line":177,"column":28},"end":{"line":177,"column":41}},"54":{"start":{"line":178,"column":28},"end":{"line":178,"column":35}},"55":{"start":{"line":182,"column":16},"end":{"line":185,"column":17}},"56":{"start":{"line":183,"column":20},"end":{"line":183,"column":94}},"57":{"start":{"line":183,"column":35},"end":{"line":183,"column":92}},"58":{"start":{"line":184,"column":20},"end":{"line":184,"column":101}},"59":{"start":{"line":187,"column":16},"end":{"line":189,"column":17}},"60":{"start":{"line":188,"column":20},"end":{"line":188,"column":53}},"61":{"start":{"line":191,"column":16},"end":{"line":193,"column":17}},"62":{"start":{"line":192,"column":20},"end":{"line":192,"column":78}},"63":{"start":{"line":194,"column":16},"end":{"line":194,"column":65}},"64":{"start":{"line":197,"column":16},"end":{"line":197,"column":41}},"65":{"start":{"line":202,"column":16},"end":{"line":204,"column":17}},"66":{"start":{"line":203,"column":20},"end":{"line":203,"column":57}},"67":{"start":{"line":206,"column":16},"end":{"line":250,"column":19}},"68":{"start":{"line":207,"column":20},"end":{"line":210,"column":28}},"69":{"start":{"line":211,"column":20},"end":{"line":216,"column":21}},"70":{"start":{"line":212,"column":24},"end":{"line":212,"column":122}},"71":{"start":{"line":213,"column":24},"end":{"line":213,"column":31}},"72":{"start":{"line":215,"column":24},"end":{"line":215,"column":50}},"73":{"start":{"line":219,"column":20},"end":{"line":236,"column":21}},"74":{"start":{"line":222,"column":24},"end":{"line":235,"column":27}},"75":{"start":{"line":223,"column":28},"end":{"line":234,"column":29}},"76":{"start":{"line":224,"column":32},"end":{"line":224,"column":82}},"77":{"start":{"line":229,"column":32},"end":{"line":231,"column":35}},"78":{"start":{"line":230,"column":36},"end":{"line":230,"column":71}},"79":{"start":{"line":233,"column":32},"end":{"line":233,"column":68}},"80":{"start":{"line":237,"column":20},"end":{"line":237,"column":46}},"81":{"start":{"line":238,"column":20},"end":{"line":241,"column":21}},"82":{"start":{"line":239,"column":24},"end":{"line":239,"column":119}},"83":{"start":{"line":240,"column":24},"end":{"line":240,"column":80}},"84":{"start":{"line":242,"column":20},"end":{"line":242,"column":72}},"85":{"start":{"line":243,"column":20},"end":{"line":243,"column":48}},"86":{"start":{"line":244,"column":20},"end":{"line":244,"column":39}},"87":{"start":{"line":245,"column":20},"end":{"line":248,"column":21}},"88":{"start":{"line":246,"column":24},"end":{"line":246,"column":92}},"89":{"start":{"line":247,"column":24},"end":{"line":247,"column":119}},"90":{"start":{"line":249,"column":20},"end":{"line":249,"column":62}},"91":{"start":{"line":251,"column":16},"end":{"line":251,"column":24}},"92":{"start":{"line":254,"column":8},"end":{"line":254,"column":16}},"93":{"start":{"line":258,"column":0},"end":{"line":261,"column":2}}},"branchMap":{"1":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":17},"end":{"line":11,"column":30}},{"start":{"line":11,"column":34},"end":{"line":11,"column":49}}]},"2":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"3":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"4":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":8}},{"start":{"line":118,"column":8},"end":{"line":118,"column":8}}]},"5":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"6":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":8}},{"start":{"line":132,"column":8},"end":{"line":132,"column":8}}]},"7":{"line":133,"type":"switch","locations":[{"start":{"line":134,"column":12},"end":{"line":136,"column":22}},{"start":{"line":137,"column":12},"end":{"line":140,"column":22}},{"start":{"line":141,"column":12},"end":{"line":143,"column":22}}]},"8":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":18},"end":{"line":149,"column":47}},{"start":{"line":149,"column":51},"end":{"line":149,"column":64}}]},"9":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":22},"end":{"line":150,"column":28}},{"start":{"line":150,"column":32},"end":{"line":152,"column":14}}]},"10":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":16},"end":{"line":156,"column":16}},{"start":{"line":156,"column":16},"end":{"line":156,"column":16}}]},"11":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":16},"end":{"line":165,"column":16}},{"start":{"line":165,"column":16},"end":{"line":165,"column":16}}]},"12":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":23},"end":{"line":167,"column":23}},{"start":{"line":167,"column":23},"end":{"line":167,"column":23}}]},"13":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":16},"end":{"line":171,"column":16}},{"start":{"line":171,"column":16},"end":{"line":171,"column":16}}]},"14":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":20},"end":{"line":172,"column":20}},{"start":{"line":172,"column":20},"end":{"line":172,"column":20}}]},"15":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":28},"end":{"line":176,"column":28}},{"start":{"line":176,"column":28},"end":{"line":176,"column":28}}]},"16":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":16},"end":{"line":182,"column":16}},{"start":{"line":182,"column":16},"end":{"line":182,"column":16}}]},"17":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":20},"end":{"line":183,"column":20}},{"start":{"line":183,"column":20},"end":{"line":183,"column":20}}]},"18":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":16},"end":{"line":187,"column":16}},{"start":{"line":187,"column":16},"end":{"line":187,"column":16}}]},"19":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":16},"end":{"line":191,"column":16}},{"start":{"line":191,"column":16},"end":{"line":191,"column":16}}]},"20":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":16},"end":{"line":202,"column":16}},{"start":{"line":202,"column":16},"end":{"line":202,"column":16}}]},"21":{"line":207,"type":"cond-expr","locations":[{"start":{"line":207,"column":47},"end":{"line":207,"column":64}},{"start":{"line":207,"column":68},"end":{"line":207,"column":70}}]},"22":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":20},"end":{"line":211,"column":20}},{"start":{"line":211,"column":20},"end":{"line":211,"column":20}}]},"23":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":24},"end":{"line":211,"column":66}},{"start":{"line":211,"column":70},"end":{"line":211,"column":115}}]},"24":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":20},"end":{"line":219,"column":20}},{"start":{"line":219,"column":20},"end":{"line":219,"column":20}}]},"25":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":28},"end":{"line":223,"column":28}},{"start":{"line":223,"column":28},"end":{"line":223,"column":28}}]},"26":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":20},"end":{"line":238,"column":20}},{"start":{"line":238,"column":20},"end":{"line":238,"column":20}}]},"27":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":20},"end":{"line":245,"column":20}},{"start":{"line":245,"column":20},"end":{"line":245,"column":20}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","var Module = require('module'),","    path = require('path'),","    fs = require('fs'),","    nopt = require('nopt'),","    which = require('which'),","    mkdirp = require('mkdirp'),","    existsSync = fs.existsSync || path.existsSync,","    inputError = require('../../util/input-error'),","    matcherFor = require('../../util/file-matcher').matcherFor,","    Instrumenter = require('../../instrumenter'),","    Collector = require('../../collector'),","    formatOption = require('../../util/help-formatter').formatOption,","    hook = require('../../hook'),","    Reporter = require('../../reporter'),","    resolve = require('resolve'),","    configuration = require('../../config');","","function usage(arg0, command) {","","    console.error('\\nUsage: ' + arg0 + ' ' + command + ' [<options>] <executable-js-file-or-command> [-- <arguments-to-jsfile>]\\n\\nOptions are:\\n\\n'","        + [","            formatOption('--config <path-to-config>', 'the configuration file to use, defaults to .istanbul.yml'),","            formatOption('--root <path> ', 'the root path to look for files to instrument, defaults to .'),","            formatOption('-x <exclude-pattern> [-x <exclude-pattern>]', 'one or more glob patterns e.g. \"**/vendor/**\"'),","            formatOption('-i <include-pattern> [-i <include-pattern>]', 'one or more glob patterns e.g. \"**/*.js\"'),","            formatOption('--[no-]default-excludes', 'apply default excludes [ **/node_modules/**, **/test/**, **/tests/** ], defaults to true'),","            formatOption('--hook-run-in-context', 'hook vm.runInThisContext in addition to require (supports RequireJS), defaults to false'),","            formatOption('--post-require-hook <file> | <module>', 'JS module that exports a function for post-require processing'),","            formatOption('--report <format> [--report <format>] ', 'report format, defaults to lcov (= lcov.info + HTML)'),","            formatOption('--dir <report-dir>', 'report directory, defaults to ./coverage'),","            formatOption('--print <type>', 'type of report to print to console, one of summary (default), detail, both or none'),","            formatOption('--verbose, -v', 'verbose mode'),","            formatOption('--[no-]preserve-comments', 'remove / preserve comments in the output, defaults to false'),","            formatOption('--include-all-sources', 'instrument all unused sources after running tests, defaults to false'),","            formatOption('--[no-]include-pid', 'include PID in output coverage filename')","        ].join('\\n\\n') + '\\n');","    console.error('\\n');","}","","function run(args, commandName, enableHooks, callback) {","","    var template = {","            config: path,","            root: path,","            x: [ Array, String ],","            report: [Array, String ],","            dir: path,","            verbose: Boolean,","            yui: Boolean,","            'default-excludes': Boolean,","            print: String,","            'self-test': Boolean,","            'hook-run-in-context': Boolean,","            'post-require-hook': String,","            'preserve-comments': Boolean,","            'include-all-sources': Boolean,","            'preload-sources': Boolean,","            i: [ Array, String ],","            'include-pid': Boolean","        },","        opts = nopt(template, { v : '--verbose' }, args, 0),","        overrides = {","            verbose: opts.verbose,","            instrumentation: {","                root: opts.root,","                'default-excludes': opts['default-excludes'],","                excludes: opts.x,","                'include-all-sources': opts['include-all-sources'],","                'preload-sources': opts['preload-sources'],","                'include-pid': opts['include-pid']","            },","            reporting: {","                reports: opts.report,","                print: opts.print,","                dir: opts.dir","            },","            hooks: {","                'hook-run-in-context': opts['hook-run-in-context'],","                'post-require-hook': opts['post-require-hook'],","                'handle-sigint': opts['handle-sigint']","            }","        },","        config = configuration.loadFile(opts.config, overrides),","        verbose = config.verbose,","        cmdAndArgs = opts.argv.remain,","        preserveComments = opts['preserve-comments'],","        includePid = opts['include-pid'],","        cmd,","        cmdArgs,","        reportingDir,","        reporter = new Reporter(config),","        runFn,","        excludes;","","    if (cmdAndArgs.length === 0) {","        return callback(inputError.create('Need a filename argument for the ' + commandName + ' command!'));","    }","","    cmd = cmdAndArgs.shift();","    cmdArgs = cmdAndArgs;","","    if (!existsSync(cmd)) {","        try {","            cmd = which.sync(cmd);","        } catch (ex) {","            return callback(inputError.create('Unable to resolve file [' + cmd + ']'));","        }","    } else {","        cmd = path.resolve(cmd);","    }","","    runFn = function () {","        process.argv = [\"node\", cmd].concat(cmdArgs);","        if (verbose) {","            console.log('Running: ' + process.argv.join(' '));","        }","        process.env.running_under_istanbul=1;","        Module.runMain(cmd, null, true);","    };","","    excludes = config.instrumentation.excludes(true);","","    if (enableHooks) {","        reportingDir = path.resolve(config.reporting.dir());","        mkdirp.sync(reportingDir); //ensure we fail early if we cannot do this","        reporter.dir = reportingDir;","        reporter.addAll(config.reporting.reports());","        if (config.reporting.print() !== 'none') {","            switch (config.reporting.print()) {","            case 'detail':","                reporter.add('text');","                break;","            case 'both':","                reporter.add('text');","                reporter.add('text-summary');","                break;","            default:","                reporter.add('text-summary');","                break;","            }","        }","","        excludes.push(path.relative(process.cwd(), path.join(reportingDir, '**', '*')));","        matcherFor({","            root: config.instrumentation.root() || process.cwd(),","            includes: opts.i || config.instrumentation.extensions().map(function (ext) {","                return '**/*' + ext;","            }),","            excludes: excludes","        },","            function (err, matchFn) {","                if (err) { return callback(err); }","","                var coverageVar = '$$cov_' + new Date().getTime() + '$$',","                    instrumenter = new Instrumenter({ coverageVariable: coverageVar , preserveComments: preserveComments}),","                    transformer = instrumenter.instrumentSync.bind(instrumenter),","                    hookOpts = { verbose: verbose, extensions: config.instrumentation.extensions() },","                    postRequireHook = config.hooks.postRequireHook(),","                    postLoadHookFile;","","                if (postRequireHook) {","                    postLoadHookFile = path.resolve(postRequireHook);","                } else if (opts.yui) { //EXPERIMENTAL code: do not rely on this in anyway until the docs say it is allowed","                    postLoadHookFile = path.resolve(__dirname, '../../util/yui-load-hook');","                }","","                if (postRequireHook) {","                    if (!existsSync(postLoadHookFile)) { //assume it is a module name and resolve it","                        try {","                            postLoadHookFile = resolve.sync(postRequireHook, { basedir: process.cwd() });","                        } catch (ex) {","                            if (verbose) { console.error('Unable to resolve [' + postRequireHook + '] as a node module'); }","                            callback(ex);","                            return;","                        }","                    }","                }","                if (postLoadHookFile) {","                    if (verbose) { console.error('Use post-load-hook: ' + postLoadHookFile); }","                    hookOpts.postLoadHook = require(postLoadHookFile)(matchFn, transformer, verbose);","                }","","                if (opts['self-test']) {","                    hook.unloadRequireCache(matchFn);","                }","                // runInThisContext is used by RequireJS [issue #23]","                if (config.hooks.hookRunInContext()) {","                    hook.hookRunInThisContext(matchFn, transformer, hookOpts);","                }","                hook.hookRequire(matchFn, transformer, hookOpts);","","                //initialize the global variable to stop mocha from complaining about leaks","                global[coverageVar] = {};","","                // enable passing --handle-sigint to write reports on SIGINT.","                // This allows a user to manually kill a process while","                // still getting the istanbul report.","                if (config.hooks.handleSigint()) {","                    process.once('SIGINT', process.exit);","                }","","                process.once('exit', function () {","                    var pidExt = includePid ? ('-' + process.pid) : '',","                        file = path.resolve(reportingDir, 'coverage' + pidExt + '.json'),","                        collector,","                        cov;","                    if (typeof global[coverageVar] === 'undefined' || Object.keys(global[coverageVar]).length === 0) {","                        console.error('No coverage information was collected, exit without writing coverage information');","                        return;","                    } else {","                        cov = global[coverageVar];","                    }","                    //important: there is no event loop at this point","                    //everything that happens in this exit handler MUST be synchronous","                    if (config.instrumentation.includeAllSources()) {","                        // Files that are not touched by code ran by the test runner is manually instrumented, to","                        // illustrate the missing coverage.","                        matchFn.files.forEach(function (file) {","                            if (!cov[file]) {","                                transformer(fs.readFileSync(file, 'utf-8'), file);","","                                // When instrumenting the code, istanbul will give each FunctionDeclaration a value of 1 in coverState.s,","                                // presumably to compensate for function hoisting. We need to reset this, as the function was not hoisted,","                                // as it was never loaded.","                                Object.keys(instrumenter.coverState.s).forEach(function (key) {","                                    instrumenter.coverState.s[key] = 0;","                                });","","                                cov[file] = instrumenter.coverState;","                            }","                        });","                    }","                    mkdirp.sync(reportingDir); //yes, do this again since some test runners could clean the dir initially created","                    if (config.reporting.print() !== 'none') {","                        console.error('=============================================================================');","                        console.error('Writing coverage object [' + file + ']');","                    }","                    fs.writeFileSync(file, JSON.stringify(cov), 'utf8');","                    collector = new Collector();","                    collector.add(cov);","                    if (config.reporting.print() !== 'none') {","                        console.error('Writing coverage reports at [' + reportingDir + ']');","                        console.error('=============================================================================');","                    }","                    reporter.write(collector, true, callback);","                });","                runFn();","            });","    } else {","        runFn();","    }","}","","module.exports = {","    run: run,","    usage: usage","};",""],"l":{"5":1,"22":1,"24":0,"41":0,"44":1,"46":0,"99":0,"100":0,"103":0,"104":0,"106":0,"107":0,"108":0,"110":0,"113":0,"116":0,"117":0,"118":0,"119":0,"121":0,"122":0,"125":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"135":0,"136":0,"138":0,"139":0,"140":0,"142":0,"143":0,"147":0,"148":0,"151":0,"156":0,"158":0,"165":0,"166":0,"167":0,"168":0,"171":0,"172":0,"173":0,"174":0,"176":0,"177":0,"178":0,"182":0,"183":0,"184":0,"187":0,"188":0,"191":0,"192":0,"194":0,"197":0,"202":0,"203":0,"206":0,"207":0,"211":0,"212":0,"213":0,"215":0,"219":0,"222":0,"223":0,"224":0,"229":0,"230":0,"233":0,"237":0,"238":0,"239":0,"240":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"249":0,"251":0,"254":0,"258":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/input-error.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/input-error.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":24},"end":{"line":6,"column":43}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":10,"column":2}},"2":{"start":{"line":7,"column":4},"end":{"line":7,"column":33}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":26}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":15}}},"branchMap":{},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","module.exports.create = function (message) {","    var err = new Error(message);","    err.inputError = true;","    return err;","};","","",""],"l":{"6":1,"7":0,"8":0,"9":0}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/instrumenter.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/instrumenter.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":1,"28":1,"29":71,"30":71,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":1,"384":1,"385":0},"b":{"1":[1,0],"2":[1,0],"3":[1,0],"4":[0,1],"5":[0,0],"6":[0,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[71,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0,0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0,0,0,0],"89":[0,0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0,0],"109":[0,0,0],"110":[0,0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[1,0],"127":[1,1,1]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":1},"end":{"line":7,"column":19}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":35}},"skip":true},"3":{"name":"generateTrackerVar","line":43,"loc":{"start":{"line":43,"column":4},"end":{"line":43,"column":54}}},"4":{"name":"pushAll","line":61,"loc":{"start":{"line":61,"column":4},"end":{"line":61,"column":33}}},"5":{"name":"(anonymous_5)","line":151,"loc":{"start":{"line":151,"column":18},"end":{"line":151,"column":34}}},"6":{"name":"(anonymous_6)","line":152,"loc":{"start":{"line":152,"column":23},"end":{"line":152,"column":38}}},"7":{"name":"(anonymous_7)","line":153,"loc":{"start":{"line":153,"column":24},"end":{"line":153,"column":39}}},"8":{"name":"(anonymous_8)","line":154,"loc":{"start":{"line":154,"column":19},"end":{"line":154,"column":39}}},"9":{"name":"(anonymous_9)","line":155,"loc":{"start":{"line":155,"column":13},"end":{"line":155,"column":35}}},"10":{"name":"(anonymous_10)","line":156,"loc":{"start":{"line":156,"column":19},"end":{"line":156,"column":39}}},"11":{"name":"(anonymous_11)","line":157,"loc":{"start":{"line":157,"column":23},"end":{"line":157,"column":38}}},"12":{"name":"(anonymous_12)","line":158,"loc":{"start":{"line":158,"column":18},"end":{"line":158,"column":38}}},"13":{"name":"(anonymous_13)","line":159,"loc":{"start":{"line":159,"column":25},"end":{"line":159,"column":41}}},"14":{"name":"Walker","line":162,"loc":{"start":{"line":162,"column":4},"end":{"line":162,"column":57}}},"15":{"name":"defaultWalker","line":173,"loc":{"start":{"line":173,"column":4},"end":{"line":173,"column":41}}},"16":{"name":"(anonymous_16)","line":284,"loc":{"start":{"line":284,"column":19},"end":{"line":284,"column":35}}},"17":{"name":"(anonymous_17)","line":289,"loc":{"start":{"line":289,"column":15},"end":{"line":289,"column":52}}},"18":{"name":"(anonymous_18)","line":311,"loc":{"start":{"line":311,"column":26},"end":{"line":311,"column":42}}},"19":{"name":"(anonymous_19)","line":315,"loc":{"start":{"line":315,"column":18},"end":{"line":315,"column":31}}},"20":{"name":"(anonymous_20)","line":319,"loc":{"start":{"line":319,"column":16},"end":{"line":319,"column":28}}},"21":{"name":"(anonymous_21)","line":323,"loc":{"start":{"line":323,"column":19},"end":{"line":323,"column":31}}},"22":{"name":"Instrumenter","line":382,"loc":{"start":{"line":382,"column":4},"end":{"line":382,"column":35}}},"23":{"name":"(anonymous_23)","line":447,"loc":{"start":{"line":447,"column":24},"end":{"line":447,"column":50}}},"24":{"name":"(anonymous_24)","line":482,"loc":{"start":{"line":482,"column":21},"end":{"line":482,"column":41}}},"25":{"name":"(anonymous_25)","line":502,"loc":{"start":{"line":502,"column":28},"end":{"line":502,"column":44}}},"26":{"name":"(anonymous_26)","line":531,"loc":{"start":{"line":531,"column":27},"end":{"line":531,"column":70}}},"27":{"name":"(anonymous_27)","line":599,"loc":{"start":{"line":599,"column":20},"end":{"line":599,"column":56}}},"28":{"name":"(anonymous_28)","line":621,"loc":{"start":{"line":621,"column":26},"end":{"line":621,"column":38}}},"29":{"name":"(anonymous_29)","line":631,"loc":{"start":{"line":631,"column":23},"end":{"line":631,"column":35}}},"30":{"name":"(anonymous_30)","line":634,"loc":{"start":{"line":634,"column":28},"end":{"line":634,"column":50}}},"31":{"name":"(anonymous_31)","line":636,"loc":{"start":{"line":636,"column":24},"end":{"line":636,"column":39}}},"32":{"name":"(anonymous_32)","line":671,"loc":{"start":{"line":671,"column":21},"end":{"line":671,"column":58}}},"33":{"name":"(anonymous_33)","line":679,"loc":{"start":{"line":679,"column":27},"end":{"line":679,"column":40}}},"34":{"name":"(anonymous_34)","line":680,"loc":{"start":{"line":680,"column":27},"end":{"line":680,"column":39}}},"35":{"name":"(anonymous_35)","line":708,"loc":{"start":{"line":708,"column":21},"end":{"line":708,"column":33}}},"36":{"name":"(anonymous_36)","line":712,"loc":{"start":{"line":712,"column":19},"end":{"line":712,"column":31}}},"37":{"name":"(anonymous_37)","line":716,"loc":{"start":{"line":716,"column":24},"end":{"line":716,"column":40}}},"38":{"name":"(anonymous_38)","line":726,"loc":{"start":{"line":726,"column":29},"end":{"line":726,"column":45}}},"39":{"name":"(anonymous_39)","line":737,"loc":{"start":{"line":737,"column":30},"end":{"line":737,"column":46}}},"40":{"name":"(anonymous_40)","line":747,"loc":{"start":{"line":747,"column":26},"end":{"line":747,"column":42}}},"41":{"name":"(anonymous_41)","line":752,"loc":{"start":{"line":752,"column":28},"end":{"line":752,"column":44}}},"42":{"name":"(anonymous_42)","line":756,"loc":{"start":{"line":756,"column":28},"end":{"line":756,"column":44}}},"43":{"name":"(anonymous_43)","line":760,"loc":{"start":{"line":760,"column":23},"end":{"line":760,"column":54}}},"44":{"name":"(anonymous_44)","line":773,"loc":{"start":{"line":773,"column":18},"end":{"line":773,"column":48}}},"45":{"name":"(anonymous_45)","line":779,"loc":{"start":{"line":779,"column":18},"end":{"line":779,"column":48}}},"46":{"name":"(anonymous_46)","line":783,"loc":{"start":{"line":783,"column":31},"end":{"line":783,"column":47}}},"47":{"name":"(anonymous_47)","line":789,"loc":{"start":{"line":789,"column":23},"end":{"line":789,"column":45}}},"48":{"name":"(anonymous_48)","line":802,"loc":{"start":{"line":802,"column":27},"end":{"line":802,"column":57}}},"49":{"name":"(anonymous_49)","line":806,"loc":{"start":{"line":806,"column":24},"end":{"line":806,"column":48}}},"50":{"name":"(anonymous_50)","line":851,"loc":{"start":{"line":851,"column":21},"end":{"line":851,"column":45}}},"51":{"name":"(anonymous_51)","line":871,"loc":{"start":{"line":871,"column":16},"end":{"line":871,"column":52}}},"52":{"name":"(anonymous_52)","line":877,"loc":{"start":{"line":877,"column":22},"end":{"line":877,"column":54}}},"53":{"name":"(anonymous_53)","line":882,"loc":{"start":{"line":882,"column":24},"end":{"line":882,"column":40}}},"54":{"name":"(anonymous_54)","line":898,"loc":{"start":{"line":898,"column":23},"end":{"line":898,"column":47}}},"55":{"name":"(anonymous_55)","line":929,"loc":{"start":{"line":929,"column":20},"end":{"line":929,"column":62}}},"56":{"name":"(anonymous_56)","line":947,"loc":{"start":{"line":947,"column":32},"end":{"line":947,"column":70}}},"57":{"name":"(anonymous_57)","line":961,"loc":{"start":{"line":961,"column":27},"end":{"line":961,"column":44}}},"58":{"name":"(anonymous_58)","line":970,"loc":{"start":{"line":970,"column":26},"end":{"line":970,"column":50}}},"59":{"name":"(anonymous_59)","line":977,"loc":{"start":{"line":977,"column":26},"end":{"line":977,"column":38}}},"60":{"name":"(anonymous_60)","line":991,"loc":{"start":{"line":991,"column":27},"end":{"line":991,"column":50}}},"61":{"name":"(anonymous_61)","line":995,"loc":{"start":{"line":995,"column":30},"end":{"line":995,"column":54}}},"62":{"name":"(anonymous_62)","line":1010,"loc":{"start":{"line":1010,"column":28},"end":{"line":1010,"column":44}}},"63":{"name":"(anonymous_63)","line":1018,"loc":{"start":{"line":1018,"column":35},"end":{"line":1018,"column":59}}},"64":{"name":"(anonymous_64)","line":1029,"loc":{"start":{"line":1029,"column":22},"end":{"line":1029,"column":48}}},"65":{"name":"(anonymous_65)","line":1030,"loc":{"start":{"line":1030,"column":19},"end":{"line":1030,"column":35}}},"66":{"name":"(anonymous_66)","line":1044,"loc":{"start":{"line":1044,"column":41},"end":{"line":1044,"column":65}}},"67":{"name":"(anonymous_67)","line":1061,"loc":{"start":{"line":1061,"column":50},"end":{"line":1061,"column":66}}},"68":{"name":"(anonymous_68)","line":1070,"loc":{"start":{"line":1070,"column":20},"end":{"line":1070,"column":67}}},"69":{"name":"(anonymous_69)","line":1078,"loc":{"start":{"line":1078,"column":22},"end":{"line":1078,"column":52}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":1097,"column":109}},"2":{"start":{"line":9,"column":4},"end":{"line":20,"column":32}},"3":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"4":{"start":{"line":24,"column":8},"end":{"line":24,"column":116},"skip":true},"5":{"start":{"line":24,"column":37},"end":{"line":24,"column":113},"skip":true},"6":{"start":{"line":27,"column":4},"end":{"line":41,"column":5}},"7":{"start":{"line":28,"column":8},"end":{"line":34,"column":10}},"8":{"start":{"line":36,"column":8},"end":{"line":40,"column":9},"skip":true},"9":{"start":{"line":37,"column":12},"end":{"line":39,"column":13},"skip":true},"10":{"start":{"line":38,"column":16},"end":{"line":38,"column":68},"skip":true},"11":{"start":{"line":38,"column":44},"end":{"line":38,"column":66},"skip":true},"12":{"start":{"line":43,"column":4},"end":{"line":59,"column":5}},"13":{"start":{"line":44,"column":8},"end":{"line":44,"column":25}},"14":{"start":{"line":45,"column":8},"end":{"line":57,"column":9}},"15":{"start":{"line":46,"column":12},"end":{"line":46,"column":44}},"16":{"start":{"line":47,"column":12},"end":{"line":47,"column":34}},"17":{"start":{"line":48,"column":12},"end":{"line":48,"column":43}},"18":{"start":{"line":50,"column":12},"end":{"line":52,"column":52}},"19":{"start":{"line":54,"column":12},"end":{"line":54,"column":53}},"20":{"start":{"line":55,"column":12},"end":{"line":55,"column":34}},"21":{"start":{"line":56,"column":12},"end":{"line":56,"column":38}},"22":{"start":{"line":58,"column":8},"end":{"line":58,"column":53}},"23":{"start":{"line":61,"column":4},"end":{"line":66,"column":5}},"24":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"25":{"start":{"line":63,"column":12},"end":{"line":63,"column":30}},"26":{"start":{"line":65,"column":8},"end":{"line":65,"column":47}},"27":{"start":{"line":68,"column":4},"end":{"line":141,"column":6}},"28":{"start":{"line":143,"column":4},"end":{"line":148,"column":5}},"29":{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},"30":{"start":{"line":146,"column":12},"end":{"line":146,"column":78}},"31":{"start":{"line":150,"column":4},"end":{"line":160,"column":6}},"32":{"start":{"line":151,"column":36},"end":{"line":151,"column":88}},"33":{"start":{"line":152,"column":40},"end":{"line":152,"column":97}},"34":{"start":{"line":153,"column":41},"end":{"line":153,"column":98}},"35":{"start":{"line":154,"column":41},"end":{"line":154,"column":112}},"36":{"start":{"line":155,"column":37},"end":{"line":155,"column":130}},"37":{"start":{"line":156,"column":41},"end":{"line":156,"column":131}},"38":{"start":{"line":157,"column":40},"end":{"line":157,"column":132}},"39":{"start":{"line":158,"column":40},"end":{"line":158,"column":113}},"40":{"start":{"line":159,"column":43},"end":{"line":159,"column":104}},"41":{"start":{"line":162,"column":4},"end":{"line":171,"column":5}},"42":{"start":{"line":163,"column":8},"end":{"line":163,"column":31}},"43":{"start":{"line":164,"column":8},"end":{"line":164,"column":41}},"44":{"start":{"line":165,"column":8},"end":{"line":165,"column":27}},"45":{"start":{"line":166,"column":8},"end":{"line":166,"column":27}},"46":{"start":{"line":167,"column":8},"end":{"line":170,"column":9}},"47":{"start":{"line":168,"column":12},"end":{"line":168,"column":27}},"48":{"start":{"line":169,"column":12},"end":{"line":169,"column":28}},"49":{"start":{"line":173,"column":4},"end":{"line":281,"column":5}},"50":{"start":{"line":175,"column":8},"end":{"line":192,"column":19}},"51":{"start":{"line":194,"column":8},"end":{"line":198,"column":9}},"52":{"start":{"line":195,"column":12},"end":{"line":195,"column":32}},"53":{"start":{"line":196,"column":12},"end":{"line":196,"column":59}},"54":{"start":{"line":197,"column":12},"end":{"line":197,"column":19}},"55":{"start":{"line":199,"column":8},"end":{"line":199,"column":41}},"56":{"start":{"line":201,"column":8},"end":{"line":201,"column":114}},"57":{"start":{"line":201,"column":28},"end":{"line":201,"column":112},"skip":true},"58":{"start":{"line":202,"column":8},"end":{"line":202,"column":28}},"59":{"start":{"line":204,"column":8},"end":{"line":204,"column":54}},"60":{"start":{"line":206,"column":8},"end":{"line":206,"column":40}},"61":{"start":{"line":207,"column":8},"end":{"line":210,"column":9}},"62":{"start":{"line":208,"column":12},"end":{"line":208,"column":36}},"63":{"start":{"line":209,"column":12},"end":{"line":209,"column":51}},"64":{"start":{"line":212,"column":8},"end":{"line":225,"column":9}},"65":{"start":{"line":213,"column":12},"end":{"line":220,"column":13}},"66":{"start":{"line":214,"column":16},"end":{"line":214,"column":61}},"67":{"start":{"line":215,"column":16},"end":{"line":215,"column":63}},"68":{"start":{"line":217,"column":16},"end":{"line":219,"column":17},"skip":true},"69":{"start":{"line":218,"column":20},"end":{"line":218,"column":122},"skip":true},"70":{"start":{"line":222,"column":12},"end":{"line":224,"column":13}},"71":{"start":{"line":223,"column":16},"end":{"line":223,"column":51}},"72":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"73":{"start":{"line":228,"column":12},"end":{"line":228,"column":19}},"74":{"start":{"line":231,"column":8},"end":{"line":270,"column":9}},"75":{"start":{"line":232,"column":12},"end":{"line":232,"column":36}},"76":{"start":{"line":233,"column":12},"end":{"line":233,"column":40}},"77":{"start":{"line":234,"column":12},"end":{"line":269,"column":13}},"78":{"start":{"line":235,"column":16},"end":{"line":235,"column":66}},"79":{"start":{"line":236,"column":16},"end":{"line":268,"column":17}},"80":{"start":{"line":237,"column":20},"end":{"line":237,"column":36}},"81":{"start":{"line":238,"column":20},"end":{"line":251,"column":21}},"82":{"start":{"line":239,"column":24},"end":{"line":239,"column":52}},"83":{"start":{"line":240,"column":24},"end":{"line":240,"column":46}},"84":{"start":{"line":241,"column":24},"end":{"line":249,"column":25}},"85":{"start":{"line":242,"column":26},"end":{"line":242,"column":85}},"86":{"start":{"line":243,"column":26},"end":{"line":246,"column":27}},"87":{"start":{"line":244,"column":30},"end":{"line":244,"column":70}},"88":{"start":{"line":245,"column":30},"end":{"line":245,"column":56}},"89":{"start":{"line":248,"column":28},"end":{"line":248,"column":51}},"90":{"start":{"line":250,"column":24},"end":{"line":250,"column":56}},"91":{"start":{"line":252,"column":20},"end":{"line":252,"column":49}},"92":{"start":{"line":254,"column":20},"end":{"line":254,"column":76}},"93":{"start":{"line":256,"column":20},"end":{"line":267,"column":21}},"94":{"start":{"line":257,"column":24},"end":{"line":257,"column":123},"skip":true},"95":{"start":{"line":266,"column":24},"end":{"line":266,"column":53}},"96":{"start":{"line":272,"column":8},"end":{"line":272,"column":42}},"97":{"start":{"line":273,"column":8},"end":{"line":276,"column":9}},"98":{"start":{"line":274,"column":12},"end":{"line":274,"column":37}},"99":{"start":{"line":275,"column":12},"end":{"line":275,"column":51}},"100":{"start":{"line":278,"column":8},"end":{"line":278,"column":28}},"101":{"start":{"line":280,"column":8},"end":{"line":280,"column":19}},"102":{"start":{"line":283,"column":4},"end":{"line":327,"column":6}},"103":{"start":{"line":285,"column":12},"end":{"line":285,"column":27}},"104":{"start":{"line":286,"column":12},"end":{"line":286,"column":29}},"105":{"start":{"line":290,"column":12},"end":{"line":290,"column":36}},"106":{"start":{"line":292,"column":12},"end":{"line":292,"column":45}},"107":{"start":{"line":293,"column":12},"end":{"line":300,"column":13}},"108":{"start":{"line":294,"column":16},"end":{"line":294,"column":30}},"109":{"start":{"line":295,"column":16},"end":{"line":295,"column":32}},"110":{"start":{"line":296,"column":16},"end":{"line":296,"column":31}},"111":{"start":{"line":297,"column":16},"end":{"line":297,"column":28}},"112":{"start":{"line":298,"column":16},"end":{"line":298,"column":73}},"113":{"start":{"line":298,"column":54},"end":{"line":298,"column":71}},"114":{"start":{"line":299,"column":16},"end":{"line":299,"column":73}},"115":{"start":{"line":301,"column":12},"end":{"line":301,"column":61}},"116":{"start":{"line":301,"column":31},"end":{"line":301,"column":59}},"117":{"start":{"line":302,"column":12},"end":{"line":302,"column":54}},"118":{"start":{"line":303,"column":12},"end":{"line":303,"column":49}},"119":{"start":{"line":303,"column":31},"end":{"line":303,"column":47}},"120":{"start":{"line":304,"column":12},"end":{"line":307,"column":13}},"121":{"start":{"line":305,"column":16},"end":{"line":305,"column":32}},"122":{"start":{"line":306,"column":16},"end":{"line":306,"column":74}},"123":{"start":{"line":308,"column":12},"end":{"line":308,"column":31}},"124":{"start":{"line":312,"column":12},"end":{"line":312,"column":117}},"125":{"start":{"line":316,"column":12},"end":{"line":316,"column":119}},"126":{"start":{"line":320,"column":12},"end":{"line":320,"column":36}},"127":{"start":{"line":324,"column":12},"end":{"line":324,"column":35}},"128":{"start":{"line":325,"column":12},"end":{"line":325,"column":71}},"129":{"start":{"line":382,"column":4},"end":{"line":435,"column":5}},"130":{"start":{"line":383,"column":8},"end":{"line":393,"column":10}},"131":{"start":{"line":395,"column":8},"end":{"line":400,"column":9}},"132":{"start":{"line":396,"column":12},"end":{"line":396,"column":40}},"133":{"start":{"line":397,"column":12},"end":{"line":399,"column":13}},"134":{"start":{"line":398,"column":16},"end":{"line":398,"column":83}},"135":{"start":{"line":402,"column":8},"end":{"line":429,"column":63}},"136":{"start":{"line":432,"column":8},"end":{"line":434,"column":9}},"137":{"start":{"line":433,"column":12},"end":{"line":433,"column":42}},"138":{"start":{"line":437,"column":4},"end":{"line":1089,"column":6}},"139":{"start":{"line":448,"column":12},"end":{"line":448,"column":24}},"140":{"start":{"line":451,"column":12},"end":{"line":451,"column":85}},"141":{"start":{"line":451,"column":44},"end":{"line":451,"column":83}},"142":{"start":{"line":452,"column":12},"end":{"line":454,"column":13}},"143":{"start":{"line":453,"column":16},"end":{"line":453,"column":35}},"144":{"start":{"line":455,"column":12},"end":{"line":457,"column":13}},"145":{"start":{"line":456,"column":16},"end":{"line":456,"column":57}},"146":{"start":{"line":458,"column":12},"end":{"line":469,"column":13}},"147":{"start":{"line":459,"column":16},"end":{"line":465,"column":19}},"148":{"start":{"line":467,"column":16},"end":{"line":467,"column":65}},"149":{"start":{"line":468,"column":16},"end":{"line":468,"column":24}},"150":{"start":{"line":470,"column":12},"end":{"line":472,"column":13}},"151":{"start":{"line":471,"column":16},"end":{"line":471,"column":91}},"152":{"start":{"line":473,"column":12},"end":{"line":479,"column":13}},"153":{"start":{"line":474,"column":16},"end":{"line":478,"column":18}},"154":{"start":{"line":480,"column":12},"end":{"line":480,"column":67}},"155":{"start":{"line":483,"column":12},"end":{"line":486,"column":23}},"156":{"start":{"line":487,"column":12},"end":{"line":489,"column":13}},"157":{"start":{"line":488,"column":16},"end":{"line":488,"column":27}},"158":{"start":{"line":490,"column":12},"end":{"line":499,"column":13}},"159":{"start":{"line":491,"column":16},"end":{"line":491,"column":38}},"160":{"start":{"line":493,"column":16},"end":{"line":498,"column":17}},"161":{"start":{"line":494,"column":20},"end":{"line":494,"column":69}},"162":{"start":{"line":495,"column":20},"end":{"line":497,"column":21}},"163":{"start":{"line":496,"column":24},"end":{"line":496,"column":102}},"164":{"start":{"line":500,"column":12},"end":{"line":500,"column":23}},"165":{"start":{"line":503,"column":12},"end":{"line":503,"column":40}},"166":{"start":{"line":503,"column":31},"end":{"line":503,"column":38}},"167":{"start":{"line":504,"column":12},"end":{"line":507,"column":21}},"168":{"start":{"line":508,"column":12},"end":{"line":508,"column":49}},"169":{"start":{"line":509,"column":12},"end":{"line":518,"column":13}},"170":{"start":{"line":510,"column":16},"end":{"line":510,"column":32}},"171":{"start":{"line":511,"column":16},"end":{"line":517,"column":17}},"172":{"start":{"line":512,"column":20},"end":{"line":512,"column":57}},"173":{"start":{"line":513,"column":20},"end":{"line":513,"column":59}},"174":{"start":{"line":514,"column":20},"end":{"line":514,"column":27}},"175":{"start":{"line":516,"column":20},"end":{"line":516,"column":26}},"176":{"start":{"line":532,"column":12},"end":{"line":537,"column":18}},"177":{"start":{"line":538,"column":12},"end":{"line":538,"column":72}},"178":{"start":{"line":539,"column":12},"end":{"line":539,"column":34}},"179":{"start":{"line":540,"column":12},"end":{"line":548,"column":14}},"180":{"start":{"line":549,"column":12},"end":{"line":559,"column":14}},"181":{"start":{"line":560,"column":12},"end":{"line":565,"column":13}},"182":{"start":{"line":562,"column":16},"end":{"line":562,"column":37}},"183":{"start":{"line":564,"column":16},"end":{"line":564,"column":35}},"184":{"start":{"line":566,"column":12},"end":{"line":566,"column":43}},"185":{"start":{"line":567,"column":12},"end":{"line":567,"column":109}},"186":{"start":{"line":568,"column":12},"end":{"line":568,"column":64}},"187":{"start":{"line":571,"column":12},"end":{"line":571,"column":65}},"188":{"start":{"line":572,"column":12},"end":{"line":572,"column":73}},"189":{"start":{"line":574,"column":12},"end":{"line":582,"column":13}},"190":{"start":{"line":575,"column":16},"end":{"line":575,"column":64}},"191":{"start":{"line":577,"column":16},"end":{"line":579,"column":17}},"192":{"start":{"line":578,"column":20},"end":{"line":578,"column":81}},"193":{"start":{"line":580,"column":16},"end":{"line":580,"column":47}},"194":{"start":{"line":581,"column":16},"end":{"line":581,"column":43}},"195":{"start":{"line":584,"column":12},"end":{"line":584,"column":54}},"196":{"start":{"line":601,"column":12},"end":{"line":604,"column":13}},"197":{"start":{"line":602,"column":16},"end":{"line":602,"column":36}},"198":{"start":{"line":603,"column":16},"end":{"line":603,"column":32}},"199":{"start":{"line":605,"column":12},"end":{"line":609,"column":13}},"200":{"start":{"line":606,"column":16},"end":{"line":606,"column":68}},"201":{"start":{"line":608,"column":16},"end":{"line":608,"column":29}},"202":{"start":{"line":622,"column":12},"end":{"line":622,"column":35}},"203":{"start":{"line":632,"column":12},"end":{"line":632,"column":34}},"204":{"start":{"line":635,"column":12},"end":{"line":647,"column":26}},"205":{"start":{"line":637,"column":20},"end":{"line":639,"column":21}},"206":{"start":{"line":638,"column":24},"end":{"line":638,"column":51}},"207":{"start":{"line":640,"column":20},"end":{"line":642,"column":21}},"208":{"start":{"line":641,"column":24},"end":{"line":641,"column":49}},"209":{"start":{"line":649,"column":12},"end":{"line":649,"column":42}},"210":{"start":{"line":650,"column":12},"end":{"line":653,"column":13}},"211":{"start":{"line":652,"column":16},"end":{"line":652,"column":61}},"212":{"start":{"line":652,"column":45},"end":{"line":652,"column":59}},"213":{"start":{"line":654,"column":12},"end":{"line":654,"column":35}},"214":{"start":{"line":655,"column":12},"end":{"line":658,"column":13}},"215":{"start":{"line":657,"column":16},"end":{"line":657,"column":65}},"216":{"start":{"line":657,"column":45},"end":{"line":657,"column":63}},"217":{"start":{"line":659,"column":12},"end":{"line":659,"column":39}},"218":{"start":{"line":660,"column":12},"end":{"line":668,"column":13}},"219":{"start":{"line":662,"column":16},"end":{"line":667,"column":17}},"220":{"start":{"line":663,"column":20},"end":{"line":663,"column":49}},"221":{"start":{"line":664,"column":20},"end":{"line":666,"column":21}},"222":{"start":{"line":665,"column":24},"end":{"line":665,"column":44}},"223":{"start":{"line":672,"column":12},"end":{"line":682,"column":21}},"224":{"start":{"line":680,"column":20},"end":{"line":680,"column":53}},"225":{"start":{"line":680,"column":41},"end":{"line":680,"column":50}},"226":{"start":{"line":683,"column":12},"end":{"line":685,"column":13}},"227":{"start":{"line":684,"column":16},"end":{"line":684,"column":57}},"228":{"start":{"line":686,"column":12},"end":{"line":688,"column":13}},"229":{"start":{"line":687,"column":16},"end":{"line":687,"column":72}},"230":{"start":{"line":689,"column":12},"end":{"line":689,"column":123}},"231":{"start":{"line":690,"column":12},"end":{"line":704,"column":60}},"232":{"start":{"line":705,"column":12},"end":{"line":705,"column":24}},"233":{"start":{"line":709,"column":12},"end":{"line":709,"column":44}},"234":{"start":{"line":713,"column":12},"end":{"line":713,"column":44}},"235":{"start":{"line":717,"column":12},"end":{"line":723,"column":13}},"236":{"start":{"line":718,"column":16},"end":{"line":718,"column":60}},"237":{"start":{"line":719,"column":19},"end":{"line":723,"column":13}},"238":{"start":{"line":720,"column":16},"end":{"line":720,"column":28}},"239":{"start":{"line":722,"column":16},"end":{"line":722,"column":66}},"240":{"start":{"line":727,"column":12},"end":{"line":727,"column":29}},"241":{"start":{"line":728,"column":12},"end":{"line":734,"column":13}},"242":{"start":{"line":729,"column":16},"end":{"line":729,"column":65}},"243":{"start":{"line":731,"column":16},"end":{"line":731,"column":49}},"244":{"start":{"line":732,"column":16},"end":{"line":732,"column":62}},"245":{"start":{"line":733,"column":16},"end":{"line":733,"column":40}},"246":{"start":{"line":742,"column":12},"end":{"line":744,"column":13},"skip":true},"247":{"start":{"line":743,"column":16},"end":{"line":743,"column":48},"skip":true},"248":{"start":{"line":748,"column":12},"end":{"line":748,"column":67}},"249":{"start":{"line":749,"column":12},"end":{"line":749,"column":65}},"250":{"start":{"line":753,"column":12},"end":{"line":753,"column":55}},"251":{"start":{"line":757,"column":12},"end":{"line":757,"column":55}},"252":{"start":{"line":761,"column":12},"end":{"line":762,"column":56}},"253":{"start":{"line":764,"column":12},"end":{"line":764,"column":50}},"254":{"start":{"line":765,"column":12},"end":{"line":765,"column":39}},"255":{"start":{"line":766,"column":12},"end":{"line":766,"column":45}},"256":{"start":{"line":767,"column":12},"end":{"line":767,"column":48}},"257":{"start":{"line":768,"column":12},"end":{"line":768,"column":59}},"258":{"start":{"line":769,"column":12},"end":{"line":769,"column":49}},"259":{"start":{"line":770,"column":12},"end":{"line":770,"column":25}},"260":{"start":{"line":774,"column":12},"end":{"line":776,"column":13}},"261":{"start":{"line":775,"column":16},"end":{"line":775,"column":42}},"262":{"start":{"line":780,"column":12},"end":{"line":780,"column":38}},"263":{"start":{"line":784,"column":12},"end":{"line":786,"column":55}},"264":{"start":{"line":790,"column":12},"end":{"line":792,"column":76}},"265":{"start":{"line":794,"column":12},"end":{"line":798,"column":13}},"266":{"start":{"line":795,"column":16},"end":{"line":795,"column":35}},"267":{"start":{"line":796,"column":16},"end":{"line":796,"column":52}},"268":{"start":{"line":797,"column":16},"end":{"line":797,"column":28}},"269":{"start":{"line":799,"column":12},"end":{"line":799,"column":25}},"270":{"start":{"line":803,"column":11},"end":{"line":803,"column":32}},"271":{"start":{"line":807,"column":12},"end":{"line":810,"column":28}},"272":{"start":{"line":812,"column":12},"end":{"line":812,"column":45}},"273":{"start":{"line":814,"column":12},"end":{"line":824,"column":13}},"274":{"start":{"line":815,"column":16},"end":{"line":815,"column":49}},"275":{"start":{"line":817,"column":16},"end":{"line":823,"column":17}},"276":{"start":{"line":818,"column":20},"end":{"line":822,"column":21}},"277":{"start":{"line":821,"column":24},"end":{"line":821,"column":31}},"278":{"start":{"line":826,"column":12},"end":{"line":848,"column":13}},"279":{"start":{"line":828,"column":16},"end":{"line":828,"column":48}},"280":{"start":{"line":831,"column":16},"end":{"line":831,"column":41}},"281":{"start":{"line":832,"column":16},"end":{"line":834,"column":17}},"282":{"start":{"line":833,"column":20},"end":{"line":833,"column":27}},"283":{"start":{"line":836,"column":16},"end":{"line":836,"column":53}},"284":{"start":{"line":838,"column":16},"end":{"line":845,"column":18}},"285":{"start":{"line":847,"column":16},"end":{"line":847,"column":62}},"286":{"start":{"line":852,"column":12},"end":{"line":852,"column":42}},"287":{"start":{"line":854,"column":12},"end":{"line":854,"column":82}},"288":{"start":{"line":854,"column":73},"end":{"line":854,"column":80}},"289":{"start":{"line":856,"column":12},"end":{"line":856,"column":45}},"290":{"start":{"line":858,"column":12},"end":{"line":858,"column":61}},"291":{"start":{"line":859,"column":12},"end":{"line":866,"column":14}},"292":{"start":{"line":868,"column":12},"end":{"line":868,"column":58}},"293":{"start":{"line":872,"column":12},"end":{"line":872,"column":78}},"294":{"start":{"line":873,"column":12},"end":{"line":873,"column":58}},"295":{"start":{"line":874,"column":12},"end":{"line":874,"column":52}},"296":{"start":{"line":878,"column":12},"end":{"line":878,"column":40}},"297":{"start":{"line":879,"column":12},"end":{"line":885,"column":18}},"298":{"start":{"line":883,"column":20},"end":{"line":883,"column":78}},"299":{"start":{"line":884,"column":20},"end":{"line":884,"column":66}},"300":{"start":{"line":886,"column":12},"end":{"line":893,"column":14}},"301":{"start":{"line":894,"column":12},"end":{"line":894,"column":38}},"302":{"start":{"line":895,"column":12},"end":{"line":895,"column":22}},"303":{"start":{"line":899,"column":12},"end":{"line":902,"column":23}},"304":{"start":{"line":904,"column":12},"end":{"line":904,"column":45}},"305":{"start":{"line":906,"column":12},"end":{"line":909,"column":15}},"306":{"start":{"line":911,"column":12},"end":{"line":913,"column":13}},"307":{"start":{"line":912,"column":16},"end":{"line":912,"column":43}},"308":{"start":{"line":914,"column":12},"end":{"line":923,"column":14}},"309":{"start":{"line":924,"column":12},"end":{"line":926,"column":13}},"310":{"start":{"line":925,"column":16},"end":{"line":925,"column":42}},"311":{"start":{"line":930,"column":12},"end":{"line":934,"column":56}},"312":{"start":{"line":935,"column":12},"end":{"line":935,"column":42}},"313":{"start":{"line":936,"column":12},"end":{"line":936,"column":45}},"314":{"start":{"line":937,"column":12},"end":{"line":941,"column":13}},"315":{"start":{"line":938,"column":16},"end":{"line":938,"column":87}},"316":{"start":{"line":939,"column":16},"end":{"line":939,"column":49}},"317":{"start":{"line":940,"column":16},"end":{"line":940,"column":30}},"318":{"start":{"line":942,"column":12},"end":{"line":942,"column":45}},"319":{"start":{"line":943,"column":12},"end":{"line":943,"column":101}},"320":{"start":{"line":944,"column":12},"end":{"line":944,"column":25}},"321":{"start":{"line":948,"column":12},"end":{"line":957,"column":14}},"322":{"start":{"line":958,"column":12},"end":{"line":958,"column":23}},"323":{"start":{"line":962,"column":12},"end":{"line":963,"column":18}},"324":{"start":{"line":964,"column":12},"end":{"line":966,"column":13}},"325":{"start":{"line":965,"column":16},"end":{"line":965,"column":39}},"326":{"start":{"line":967,"column":12},"end":{"line":967,"column":23}},"327":{"start":{"line":971,"column":12},"end":{"line":984,"column":22}},"328":{"start":{"line":977,"column":40},"end":{"line":977,"column":76}},"329":{"start":{"line":985,"column":12},"end":{"line":985,"column":86}},"330":{"start":{"line":986,"column":12},"end":{"line":986,"column":86}},"331":{"start":{"line":987,"column":12},"end":{"line":987,"column":133}},"332":{"start":{"line":987,"column":30},"end":{"line":987,"column":54}},"333":{"start":{"line":987,"column":55},"end":{"line":987,"column":93}},"334":{"start":{"line":987,"column":94},"end":{"line":987,"column":131}},"335":{"start":{"line":988,"column":12},"end":{"line":988,"column":132}},"336":{"start":{"line":988,"column":30},"end":{"line":988,"column":53}},"337":{"start":{"line":988,"column":54},"end":{"line":988,"column":92}},"338":{"start":{"line":988,"column":93},"end":{"line":988,"column":130}},"339":{"start":{"line":992,"column":12},"end":{"line":992,"column":68}},"340":{"start":{"line":996,"column":12},"end":{"line":998,"column":18}},"341":{"start":{"line":1000,"column":12},"end":{"line":1002,"column":13}},"342":{"start":{"line":1001,"column":16},"end":{"line":1001,"column":23}},"343":{"start":{"line":1003,"column":12},"end":{"line":1003,"column":108}},"344":{"start":{"line":1004,"column":12},"end":{"line":1007,"column":13}},"345":{"start":{"line":1005,"column":16},"end":{"line":1005,"column":75}},"346":{"start":{"line":1006,"column":16},"end":{"line":1006,"column":101}},"347":{"start":{"line":1011,"column":12},"end":{"line":1011,"column":47}},"348":{"start":{"line":1012,"column":12},"end":{"line":1012,"column":39}},"349":{"start":{"line":1013,"column":12},"end":{"line":1015,"column":13}},"350":{"start":{"line":1014,"column":16},"end":{"line":1014,"column":37}},"351":{"start":{"line":1019,"column":12},"end":{"line":1021,"column":61}},"352":{"start":{"line":1023,"column":12},"end":{"line":1023,"column":95}},"353":{"start":{"line":1024,"column":12},"end":{"line":1024,"column":94}},"354":{"start":{"line":1025,"column":12},"end":{"line":1025,"column":69}},"355":{"start":{"line":1026,"column":12},"end":{"line":1026,"column":67}},"356":{"start":{"line":1030,"column":12},"end":{"line":1041,"column":14}},"357":{"start":{"line":1031,"column":16},"end":{"line":1033,"column":82}},"358":{"start":{"line":1034,"column":16},"end":{"line":1037,"column":17}},"359":{"start":{"line":1035,"column":20},"end":{"line":1035,"column":39}},"360":{"start":{"line":1036,"column":20},"end":{"line":1036,"column":56}},"361":{"start":{"line":1038,"column":16},"end":{"line":1040,"column":17}},"362":{"start":{"line":1039,"column":20},"end":{"line":1039,"column":47}},"363":{"start":{"line":1045,"column":12},"end":{"line":1049,"column":18}},"364":{"start":{"line":1051,"column":12},"end":{"line":1051,"column":45}},"365":{"start":{"line":1053,"column":12},"end":{"line":1056,"column":13}},"366":{"start":{"line":1055,"column":16},"end":{"line":1055,"column":23}},"367":{"start":{"line":1058,"column":12},"end":{"line":1058,"column":42}},"368":{"start":{"line":1059,"column":12},"end":{"line":1062,"column":14}},"369":{"start":{"line":1061,"column":68},"end":{"line":1061,"column":85}},"370":{"start":{"line":1063,"column":12},"end":{"line":1067,"column":13}},"371":{"start":{"line":1064,"column":16},"end":{"line":1064,"column":34}},"372":{"start":{"line":1065,"column":16},"end":{"line":1065,"column":114}},"373":{"start":{"line":1066,"column":16},"end":{"line":1066,"column":94}},"374":{"start":{"line":1071,"column":12},"end":{"line":1076,"column":13}},"375":{"start":{"line":1072,"column":16},"end":{"line":1072,"column":70}},"376":{"start":{"line":1073,"column":16},"end":{"line":1073,"column":72}},"377":{"start":{"line":1075,"column":16},"end":{"line":1075,"column":85}},"378":{"start":{"line":1079,"column":12},"end":{"line":1081,"column":22}},"379":{"start":{"line":1082,"column":12},"end":{"line":1087,"column":13}},"380":{"start":{"line":1083,"column":16},"end":{"line":1083,"column":33}},"381":{"start":{"line":1084,"column":16},"end":{"line":1086,"column":17}},"382":{"start":{"line":1085,"column":20},"end":{"line":1085,"column":54}},"383":{"start":{"line":1091,"column":4},"end":{"line":1095,"column":5}},"384":{"start":{"line":1092,"column":8},"end":{"line":1092,"column":38}},"385":{"start":{"line":1094,"column":8},"end":{"line":1094,"column":43}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":41}},{"start":{"line":11,"column":44},"end":{"line":11,"column":51}}]},"2":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":26},"end":{"line":12,"column":46}},{"start":{"line":12,"column":49},"end":{"line":12,"column":58}}]},"3":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":43}},{"start":{"line":13,"column":46},"end":{"line":13,"column":50}}]},"4":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4},"skip":true},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"5":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":44},"end":{"line":24,"column":49},"skip":true},{"start":{"line":24,"column":54},"end":{"line":24,"column":112},"skip":true}]},"6":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"7":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":12},"skip":true},{"start":{"line":37,"column":12},"end":{"line":37,"column":12},"skip":true}]},"8":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":16},"end":{"line":38,"column":16},"skip":true},{"start":{"line":38,"column":16},"end":{"line":38,"column":16},"skip":true}]},"9":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"10":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":31},"end":{"line":54,"column":47}},{"start":{"line":54,"column":51},"end":{"line":54,"column":52}}]},"11":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":40},"end":{"line":58,"column":42}},{"start":{"line":58,"column":45},"end":{"line":58,"column":51}}]},"12":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":8}},{"start":{"line":62,"column":8},"end":{"line":62,"column":8}}]},"13":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":8}},{"start":{"line":145,"column":8},"end":{"line":145,"column":8},"skip":true}]},"14":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":167,"column":8}},{"start":{"line":167,"column":8},"end":{"line":167,"column":8}}]},"15":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":32},"end":{"line":180,"column":42}},{"start":{"line":180,"column":46},"end":{"line":180,"column":79}}]},"16":{"line":181,"type":"cond-expr","locations":[{"start":{"line":181,"column":43},"end":{"line":181,"column":63}},{"start":{"line":181,"column":66},"end":{"line":181,"column":70}}]},"17":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":194,"column":8}},{"start":{"line":194,"column":8},"end":{"line":194,"column":8}}]},"18":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":8},"skip":true},{"start":{"line":201,"column":8},"end":{"line":201,"column":8}}]},"19":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"20":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":8},"end":{"line":212,"column":8}},{"start":{"line":212,"column":8},"end":{"line":212,"column":8}}]},"21":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":16},"end":{"line":217,"column":16},"skip":true},{"start":{"line":217,"column":16},"end":{"line":217,"column":16},"skip":true}]},"22":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":20},"end":{"line":217,"column":37},"skip":true},{"start":{"line":217,"column":41},"end":{"line":217,"column":48},"skip":true}]},"23":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":12},"end":{"line":222,"column":12}},{"start":{"line":222,"column":12},"end":{"line":222,"column":12}}]},"24":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":227,"column":8}},{"start":{"line":227,"column":8},"end":{"line":227,"column":8}}]},"25":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":12},"end":{"line":234,"column":12}},{"start":{"line":234,"column":12},"end":{"line":234,"column":12}}]},"26":{"line":234,"type":"binary-expr","locations":[{"start":{"line":234,"column":16},"end":{"line":234,"column":25}},{"start":{"line":234,"column":29},"end":{"line":234,"column":48}}]},"27":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":16},"end":{"line":236,"column":16}},{"start":{"line":236,"column":16},"end":{"line":236,"column":16}}]},"28":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":24},"end":{"line":241,"column":24}},{"start":{"line":241,"column":24},"end":{"line":241,"column":24}}]},"29":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":26},"end":{"line":243,"column":26}},{"start":{"line":243,"column":26},"end":{"line":243,"column":26}}]},"30":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":20},"end":{"line":256,"column":20},"skip":true},{"start":{"line":256,"column":20},"end":{"line":256,"column":20}}]},"31":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":8},"end":{"line":273,"column":8}},{"start":{"line":273,"column":8},"end":{"line":273,"column":8}}]},"32":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":21},"end":{"line":292,"column":27}},{"start":{"line":292,"column":31},"end":{"line":292,"column":44}}]},"33":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":12},"end":{"line":293,"column":12}},{"start":{"line":293,"column":12},"end":{"line":293,"column":12}}]},"34":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":12},"end":{"line":301,"column":12}},{"start":{"line":301,"column":12},"end":{"line":301,"column":12}}]},"35":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":12},"end":{"line":303,"column":12}},{"start":{"line":303,"column":12},"end":{"line":303,"column":12}}]},"36":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":12},"end":{"line":304,"column":12}},{"start":{"line":304,"column":12},"end":{"line":304,"column":12}}]},"37":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":19},"end":{"line":308,"column":22}},{"start":{"line":308,"column":26},"end":{"line":308,"column":30}}]},"38":{"line":312,"type":"cond-expr","locations":[{"start":{"line":312,"column":56},"end":{"line":312,"column":75}},{"start":{"line":312,"column":112},"end":{"line":312,"column":116},"skip":true}]},"39":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":19},"end":{"line":312,"column":23}},{"start":{"line":312,"column":27},"end":{"line":312,"column":35}},{"start":{"line":312,"column":39},"end":{"line":312,"column":53}}]},"40":{"line":316,"type":"cond-expr","locations":[{"start":{"line":316,"column":46},"end":{"line":316,"column":77}},{"start":{"line":316,"column":114},"end":{"line":316,"column":118},"skip":true}]},"41":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":19},"end":{"line":325,"column":21}},{"start":{"line":325,"column":25},"end":{"line":325,"column":70}}]},"42":{"line":383,"type":"binary-expr","locations":[{"start":{"line":383,"column":20},"end":{"line":383,"column":27}},{"start":{"line":383,"column":31},"end":{"line":393,"column":9}}]},"43":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":8},"end":{"line":395,"column":8}},{"start":{"line":395,"column":8},"end":{"line":395,"column":8}}]},"44":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":12},"end":{"line":395,"column":31}},{"start":{"line":395,"column":35},"end":{"line":395,"column":56}}]},"45":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":12},"end":{"line":397,"column":12}},{"start":{"line":397,"column":12},"end":{"line":397,"column":12}}]},"46":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":8},"end":{"line":432,"column":8}},{"start":{"line":432,"column":8},"end":{"line":432,"column":8}}]},"47":{"line":432,"type":"binary-expr","locations":[{"start":{"line":432,"column":12},"end":{"line":432,"column":30}},{"start":{"line":432,"column":34},"end":{"line":432,"column":70}}]},"48":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":12},"end":{"line":451,"column":12}},{"start":{"line":451,"column":12},"end":{"line":451,"column":12}}]},"49":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":12},"end":{"line":452,"column":12}},{"start":{"line":452,"column":12},"end":{"line":452,"column":12}}]},"50":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":12},"end":{"line":455,"column":12}},{"start":{"line":455,"column":12},"end":{"line":455,"column":12}}]},"51":{"line":464,"type":"cond-expr","locations":[{"start":{"line":464,"column":54},"end":{"line":464,"column":62}},{"start":{"line":464,"column":65},"end":{"line":464,"column":73}}]},"52":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":12},"end":{"line":470,"column":12}},{"start":{"line":470,"column":12},"end":{"line":470,"column":12}}]},"53":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":12},"end":{"line":473,"column":12}},{"start":{"line":473,"column":12},"end":{"line":473,"column":12}}]},"54":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":12},"end":{"line":487,"column":12}},{"start":{"line":487,"column":12},"end":{"line":487,"column":12}}]},"55":{"line":487,"type":"binary-expr","locations":[{"start":{"line":487,"column":18},"end":{"line":487,"column":26}},{"start":{"line":487,"column":30},"end":{"line":487,"column":47}}]},"56":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":16},"end":{"line":493,"column":16}},{"start":{"line":493,"column":16},"end":{"line":493,"column":16},"skip":true}]},"57":{"line":493,"type":"binary-expr","locations":[{"start":{"line":493,"column":20},"end":{"line":493,"column":27}},{"start":{"line":493,"column":31},"end":{"line":493,"column":44}},{"start":{"line":493,"column":48},"end":{"line":493,"column":61}},{"start":{"line":493,"column":65},"end":{"line":493,"column":87}}]},"58":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":20},"end":{"line":495,"column":20}},{"start":{"line":495,"column":20},"end":{"line":495,"column":20}}]},"59":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":12},"end":{"line":503,"column":12}},{"start":{"line":503,"column":12},"end":{"line":503,"column":12}}]},"60":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":16},"end":{"line":511,"column":16}},{"start":{"line":511,"column":16},"end":{"line":511,"column":16}}]},"61":{"line":538,"type":"binary-expr","locations":[{"start":{"line":538,"column":23},"end":{"line":538,"column":31}},{"start":{"line":538,"column":35},"end":{"line":538,"column":71}}]},"62":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":12},"end":{"line":560,"column":12}},{"start":{"line":560,"column":12},"end":{"line":560,"column":12}}]},"63":{"line":560,"type":"binary-expr","locations":[{"start":{"line":560,"column":16},"end":{"line":560,"column":28}},{"start":{"line":560,"column":32},"end":{"line":560,"column":55}},{"start":{"line":560,"column":59},"end":{"line":560,"column":102}}]},"64":{"line":567,"type":"binary-expr","locations":[{"start":{"line":567,"column":29},"end":{"line":567,"column":60}},{"start":{"line":567,"column":64},"end":{"line":567,"column":108}}]},"65":{"line":572,"type":"binary-expr","locations":[{"start":{"line":572,"column":40},"end":{"line":572,"column":52}},{"start":{"line":572,"column":56},"end":{"line":572,"column":58}}]},"66":{"line":574,"type":"if","locations":[{"start":{"line":574,"column":12},"end":{"line":574,"column":12}},{"start":{"line":574,"column":12},"end":{"line":574,"column":12}}]},"67":{"line":574,"type":"binary-expr","locations":[{"start":{"line":574,"column":16},"end":{"line":574,"column":29}},{"start":{"line":574,"column":33},"end":{"line":574,"column":47}}]},"68":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":12},"end":{"line":601,"column":12}},{"start":{"line":601,"column":12},"end":{"line":601,"column":12}}]},"69":{"line":601,"type":"binary-expr","locations":[{"start":{"line":601,"column":16},"end":{"line":601,"column":25}},{"start":{"line":601,"column":29},"end":{"line":601,"column":59}}]},"70":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":20},"end":{"line":637,"column":20}},{"start":{"line":637,"column":20},"end":{"line":637,"column":20}}]},"71":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":20},"end":{"line":640,"column":20}},{"start":{"line":640,"column":20},"end":{"line":640,"column":20}}]},"72":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":16},"end":{"line":652,"column":16}},{"start":{"line":652,"column":16},"end":{"line":652,"column":16},"skip":true}]},"73":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":16},"end":{"line":657,"column":16}},{"start":{"line":657,"column":16},"end":{"line":657,"column":16},"skip":true}]},"74":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":16},"end":{"line":662,"column":16}},{"start":{"line":662,"column":16},"end":{"line":662,"column":16},"skip":true}]},"75":{"line":672,"type":"binary-expr","locations":[{"start":{"line":672,"column":26},"end":{"line":672,"column":52}},{"start":{"line":672,"column":56},"end":{"line":672,"column":70}}]},"76":{"line":676,"type":"cond-expr","locations":[{"start":{"line":676,"column":45},"end":{"line":676,"column":60}},{"start":{"line":676,"column":63},"end":{"line":676,"column":65}}]},"77":{"line":683,"type":"if","locations":[{"start":{"line":683,"column":12},"end":{"line":683,"column":12}},{"start":{"line":683,"column":12},"end":{"line":683,"column":12}}]},"78":{"line":686,"type":"if","locations":[{"start":{"line":686,"column":12},"end":{"line":686,"column":12}},{"start":{"line":686,"column":12},"end":{"line":686,"column":12}}]},"79":{"line":689,"type":"cond-expr","locations":[{"start":{"line":689,"column":43},"end":{"line":689,"column":88}},{"start":{"line":689,"column":91},"end":{"line":689,"column":122}}]},"80":{"line":717,"type":"if","locations":[{"start":{"line":717,"column":12},"end":{"line":717,"column":12}},{"start":{"line":717,"column":12},"end":{"line":717,"column":12}}]},"81":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":19},"end":{"line":719,"column":19}},{"start":{"line":719,"column":19},"end":{"line":719,"column":19}}]},"82":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":12},"end":{"line":728,"column":12}},{"start":{"line":728,"column":12},"end":{"line":728,"column":12}}]},"83":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":12},"end":{"line":742,"column":12},"skip":true},{"start":{"line":742,"column":12},"end":{"line":742,"column":12},"skip":true}]},"84":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":16},"end":{"line":742,"column":29},"skip":true},{"start":{"line":742,"column":33},"end":{"line":742,"column":46},"skip":true}]},"85":{"line":764,"type":"binary-expr","locations":[{"start":{"line":764,"column":28},"end":{"line":764,"column":36}},{"start":{"line":764,"column":40},"end":{"line":764,"column":49}}]},"86":{"line":765,"type":"binary-expr","locations":[{"start":{"line":765,"column":24},"end":{"line":765,"column":33}},{"start":{"line":765,"column":37},"end":{"line":765,"column":38}}]},"87":{"line":774,"type":"if","locations":[{"start":{"line":774,"column":12},"end":{"line":774,"column":12}},{"start":{"line":774,"column":12},"end":{"line":774,"column":12}}]},"88":{"line":784,"type":"binary-expr","locations":[{"start":{"line":784,"column":19},"end":{"line":784,"column":23}},{"start":{"line":784,"column":27},"end":{"line":784,"column":72}},{"start":{"line":785,"column":16},"end":{"line":785,"column":31}},{"start":{"line":785,"column":36},"end":{"line":785,"column":80}},{"start":{"line":786,"column":16},"end":{"line":786,"column":54}}]},"89":{"line":792,"type":"binary-expr","locations":[{"start":{"line":792,"column":29},"end":{"line":792,"column":45}},{"start":{"line":792,"column":49},"end":{"line":792,"column":53}},{"start":{"line":792,"column":57},"end":{"line":792,"column":75}}]},"90":{"line":794,"type":"if","locations":[{"start":{"line":794,"column":12},"end":{"line":794,"column":12}},{"start":{"line":794,"column":12},"end":{"line":794,"column":12}}]},"91":{"line":814,"type":"if","locations":[{"start":{"line":814,"column":12},"end":{"line":814,"column":12}},{"start":{"line":814,"column":12},"end":{"line":814,"column":12}}]},"92":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":16},"end":{"line":817,"column":16}},{"start":{"line":817,"column":16},"end":{"line":817,"column":16},"skip":true}]},"93":{"line":818,"type":"if","locations":[{"start":{"line":818,"column":20},"end":{"line":818,"column":20}},{"start":{"line":818,"column":20},"end":{"line":818,"column":20}}]},"94":{"line":818,"type":"binary-expr","locations":[{"start":{"line":818,"column":25},"end":{"line":818,"column":81}},{"start":{"line":819,"column":24},"end":{"line":819,"column":81}},{"start":{"line":820,"column":24},"end":{"line":820,"column":61}}]},"95":{"line":826,"type":"if","locations":[{"start":{"line":826,"column":12},"end":{"line":826,"column":12}},{"start":{"line":826,"column":12},"end":{"line":826,"column":12}}]},"96":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":16},"end":{"line":832,"column":16}},{"start":{"line":832,"column":16},"end":{"line":832,"column":16}}]},"97":{"line":832,"type":"binary-expr","locations":[{"start":{"line":832,"column":20},"end":{"line":832,"column":26}},{"start":{"line":832,"column":30},"end":{"line":832,"column":85}}]},"98":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":12},"end":{"line":854,"column":12}},{"start":{"line":854,"column":12},"end":{"line":854,"column":12}}]},"99":{"line":854,"type":"binary-expr","locations":[{"start":{"line":854,"column":17},"end":{"line":854,"column":34}},{"start":{"line":854,"column":38},"end":{"line":854,"column":68}}]},"100":{"line":872,"type":"cond-expr","locations":[{"start":{"line":872,"column":50},"end":{"line":872,"column":70}},{"start":{"line":872,"column":73},"end":{"line":872,"column":77}}]},"101":{"line":873,"type":"binary-expr","locations":[{"start":{"line":873,"column":33},"end":{"line":873,"column":51}},{"start":{"line":873,"column":55},"end":{"line":873,"column":57}}]},"102":{"line":881,"type":"cond-expr","locations":[{"start":{"line":881,"column":33},"end":{"line":881,"column":45}},{"start":{"line":881,"column":48},"end":{"line":881,"column":72}}]},"103":{"line":883,"type":"binary-expr","locations":[{"start":{"line":883,"column":30},"end":{"line":883,"column":44}},{"start":{"line":883,"column":75},"end":{"line":883,"column":77},"skip":true}]},"104":{"line":892,"type":"binary-expr","locations":[{"start":{"line":892,"column":22},"end":{"line":892,"column":30}},{"start":{"line":892,"column":34},"end":{"line":892,"column":43}}]},"105":{"line":911,"type":"if","locations":[{"start":{"line":911,"column":12},"end":{"line":911,"column":12}},{"start":{"line":911,"column":12},"end":{"line":911,"column":12}}]},"106":{"line":911,"type":"binary-expr","locations":[{"start":{"line":911,"column":16},"end":{"line":911,"column":36}},{"start":{"line":911,"column":40},"end":{"line":911,"column":80}}]},"107":{"line":924,"type":"if","locations":[{"start":{"line":924,"column":12},"end":{"line":924,"column":12}},{"start":{"line":924,"column":12},"end":{"line":924,"column":12}}]},"108":{"line":938,"type":"binary-expr","locations":[{"start":{"line":938,"column":40},"end":{"line":938,"column":61}},{"start":{"line":938,"column":65},"end":{"line":938,"column":73}},{"start":{"line":938,"column":77},"end":{"line":938,"column":86}}]},"109":{"line":973,"type":"binary-expr","locations":[{"start":{"line":973,"column":29},"end":{"line":973,"column":45}},{"start":{"line":973,"column":49},"end":{"line":973,"column":53}},{"start":{"line":973,"column":57},"end":{"line":973,"column":75}}]},"110":{"line":974,"type":"binary-expr","locations":[{"start":{"line":974,"column":29},"end":{"line":974,"column":45}},{"start":{"line":974,"column":49},"end":{"line":974,"column":53}},{"start":{"line":974,"column":57},"end":{"line":974,"column":77}}]},"111":{"line":979,"type":"binary-expr","locations":[{"start":{"line":979,"column":62},"end":{"line":979,"column":72}},{"start":{"line":979,"column":76},"end":{"line":979,"column":85}}]},"112":{"line":980,"type":"binary-expr","locations":[{"start":{"line":980,"column":62},"end":{"line":980,"column":72}},{"start":{"line":980,"column":76},"end":{"line":980,"column":85}}]},"113":{"line":987,"type":"if","locations":[{"start":{"line":987,"column":12},"end":{"line":987,"column":12}},{"start":{"line":987,"column":12},"end":{"line":987,"column":12}}]},"114":{"line":988,"type":"if","locations":[{"start":{"line":988,"column":12},"end":{"line":988,"column":12}},{"start":{"line":988,"column":12},"end":{"line":988,"column":12}}]},"115":{"line":1000,"type":"if","locations":[{"start":{"line":1000,"column":12},"end":{"line":1000,"column":12}},{"start":{"line":1000,"column":12},"end":{"line":1000,"column":12}}]},"116":{"line":1000,"type":"binary-expr","locations":[{"start":{"line":1000,"column":18},"end":{"line":1000,"column":23}},{"start":{"line":1000,"column":27},"end":{"line":1000,"column":43}}]},"117":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":12},"end":{"line":1013,"column":12}},{"start":{"line":1013,"column":12},"end":{"line":1013,"column":12}}]},"118":{"line":1033,"type":"binary-expr","locations":[{"start":{"line":1033,"column":33},"end":{"line":1033,"column":49}},{"start":{"line":1033,"column":53},"end":{"line":1033,"column":57}},{"start":{"line":1033,"column":61},"end":{"line":1033,"column":81}}]},"119":{"line":1034,"type":"if","locations":[{"start":{"line":1034,"column":16},"end":{"line":1034,"column":16}},{"start":{"line":1034,"column":16},"end":{"line":1034,"column":16}}]},"120":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":16},"end":{"line":1038,"column":16}},{"start":{"line":1038,"column":16},"end":{"line":1038,"column":16}}]},"121":{"line":1038,"type":"binary-expr","locations":[{"start":{"line":1038,"column":20},"end":{"line":1038,"column":30}},{"start":{"line":1038,"column":34},"end":{"line":1038,"column":49}}]},"122":{"line":1053,"type":"if","locations":[{"start":{"line":1053,"column":12},"end":{"line":1053,"column":12}},{"start":{"line":1053,"column":12},"end":{"line":1053,"column":12}}]},"123":{"line":1053,"type":"binary-expr","locations":[{"start":{"line":1053,"column":16},"end":{"line":1053,"column":22}},{"start":{"line":1053,"column":26},"end":{"line":1053,"column":76}}]},"124":{"line":1071,"type":"if","locations":[{"start":{"line":1071,"column":12},"end":{"line":1071,"column":12}},{"start":{"line":1071,"column":12},"end":{"line":1071,"column":12}}]},"125":{"line":1084,"type":"if","locations":[{"start":{"line":1084,"column":16},"end":{"line":1084,"column":16}},{"start":{"line":1084,"column":16},"end":{"line":1084,"column":16}}]},"126":{"line":1091,"type":"if","locations":[{"start":{"line":1091,"column":4},"end":{"line":1091,"column":4}},{"start":{"line":1091,"column":4},"end":{"line":1091,"column":4}}]},"127":{"line":1097,"type":"binary-expr","locations":[{"start":{"line":1097,"column":2},"end":{"line":1097,"column":31}},{"start":{"line":1097,"column":35},"end":{"line":1097,"column":72}},{"start":{"line":1097,"column":76},"end":{"line":1097,"column":106}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","/*global esprima, escodegen, window */","(function (isNode) {","    \"use strict\";","    var SYNTAX,","        nodeType,","        ESP = isNode ? require('esprima') : esprima,","        ESPGEN = isNode ? require('escodegen') : escodegen,  //TODO - package as dependency","        crypto = isNode ? require('crypto') : null,","        LEADER_WRAP = '(function () { ',","        TRAILER_WRAP = '\\n}());',","        COMMENT_RE = /^\\s*istanbul\\s+ignore\\s+(if|else|next)(?=\\W|$)/,","        astgen,","        preconditions,","        cond,","        isArray = Array.isArray;","","    /* istanbul ignore if: untestable */","    if (!isArray) {","        isArray = function (thing) { return thing &&  Object.prototype.toString.call(thing) === '[object Array]'; };","    }","","    if (!isNode) {","        preconditions = {","            'Could not find esprima': ESP,","            'Could not find escodegen': ESPGEN,","            'JSON object not in scope': JSON,","            'Array does not implement push': [].push,","            'Array does not implement unshift': [].unshift","        };","        /* istanbul ignore next: untestable */","        for (cond in preconditions) {","            if (preconditions.hasOwnProperty(cond)) {","                if (!preconditions[cond]) { throw new Error(cond); }","            }","        }","    }","","    function generateTrackerVar(filename, omitSuffix) {","        var hash, suffix;","        if (crypto !== null) {","            hash = crypto.createHash('md5');","            hash.update(filename);","            suffix = hash.digest('base64');","            //trim trailing equal signs, turn identifier unsafe chars to safe ones + => _ and / => $","            suffix = suffix.replace(new RegExp('=', 'g'), '')","                .replace(new RegExp('\\\\+', 'g'), '_')","                .replace(new RegExp('/', 'g'), '$');","        } else {","            window.__cov_seq = window.__cov_seq || 0;","            window.__cov_seq += 1;","            suffix = window.__cov_seq;","        }","        return '__cov_' + (omitSuffix ? '' : suffix);","    }","","    function pushAll(ary, thing) {","        if (!isArray(thing)) {","            thing = [ thing ];","        }","        Array.prototype.push.apply(ary, thing);","    }","","    SYNTAX = {","        // keep in sync with estraverse's VisitorKeys","        AssignmentExpression: ['left', 'right'],","        AssignmentPattern: ['left', 'right'],","        ArrayExpression: ['elements'],","        ArrayPattern: ['elements'],","        ArrowFunctionExpression: ['params', 'body'],","        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.","        BlockStatement: ['body'],","        BinaryExpression: ['left', 'right'],","        BreakStatement: ['label'],","        CallExpression: ['callee', 'arguments'],","        CatchClause: ['param', 'body'],","        ClassBody: ['body'],","        ClassDeclaration: ['id', 'superClass', 'body'],","        ClassExpression: ['id', 'superClass', 'body'],","        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.","        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.","        ConditionalExpression: ['test', 'consequent', 'alternate'],","        ContinueStatement: ['label'],","        DebuggerStatement: [],","        DirectiveStatement: [],","        DoWhileStatement: ['body', 'test'],","        EmptyStatement: [],","        ExportAllDeclaration: ['source'],","        ExportDefaultDeclaration: ['declaration'],","        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],","        ExportSpecifier: ['exported', 'local'],","        ExpressionStatement: ['expression'],","        ForStatement: ['init', 'test', 'update', 'body'],","        ForInStatement: ['left', 'right', 'body'],","        ForOfStatement: ['left', 'right', 'body'],","        FunctionDeclaration: ['id', 'params', 'body'],","        FunctionExpression: ['id', 'params', 'body'],","        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.","        Identifier: [],","        IfStatement: ['test', 'consequent', 'alternate'],","        ImportDeclaration: ['specifiers', 'source'],","        ImportDefaultSpecifier: ['local'],","        ImportNamespaceSpecifier: ['local'],","        ImportSpecifier: ['imported', 'local'],","        Literal: [],","        LabeledStatement: ['label', 'body'],","        LogicalExpression: ['left', 'right'],","        MetaProperty: ['meta', 'property'],","        MemberExpression: ['object', 'property'],","        MethodDefinition: ['key', 'value'],","        ModuleSpecifier: [],","        NewExpression: ['callee', 'arguments'],","        ObjectExpression: ['properties'],","        ObjectPattern: ['properties'],","        Program: ['body'],","        Property: ['key', 'value'],","        RestElement: [ 'argument' ],","        ReturnStatement: ['argument'],","        SequenceExpression: ['expressions'],","        SpreadElement: ['argument'],","        Super: [],","        SwitchStatement: ['discriminant', 'cases'],","        SwitchCase: ['test', 'consequent'],","        TaggedTemplateExpression: ['tag', 'quasi'],","        TemplateElement: [],","        TemplateLiteral: ['quasis', 'expressions'],","        ThisExpression: [],","        ThrowStatement: ['argument'],","        TryStatement: ['block', 'handler', 'finalizer'],","        UnaryExpression: ['argument'],","        UpdateExpression: ['argument'],","        VariableDeclaration: ['declarations'],","        VariableDeclarator: ['id', 'init'],","        WhileStatement: ['test', 'body'],","        WithStatement: ['object', 'body'],","        YieldExpression: ['argument']","    };","","    for (nodeType in SYNTAX) {","        /* istanbul ignore else: has own property */","        if (SYNTAX.hasOwnProperty(nodeType)) {","            SYNTAX[nodeType] = { name: nodeType, children: SYNTAX[nodeType] };","        }","    }","","    astgen = {","        variable: function (name) { return { type: SYNTAX.Identifier.name, name: name }; },","        stringLiteral: function (str) { return { type: SYNTAX.Literal.name, value: String(str) }; },","        numericLiteral: function (num) { return { type: SYNTAX.Literal.name, value: Number(num) }; },","        statement: function (contents) { return { type: SYNTAX.ExpressionStatement.name, expression: contents }; },","        dot: function (obj, field) { return { type: SYNTAX.MemberExpression.name, computed: false, object: obj, property: field }; },","        subscript: function (obj, sub) { return { type: SYNTAX.MemberExpression.name, computed: true, object: obj, property: sub }; },","        postIncrement: function (obj) { return { type: SYNTAX.UpdateExpression.name, operator: '++', prefix: false, argument: obj }; },","        sequence: function (one, two) { return { type: SYNTAX.SequenceExpression.name, expressions: [one, two] }; },","        returnStatement: function (expr) { return { type: SYNTAX.ReturnStatement.name, argument: expr }; }","    };","","    function Walker(walkMap, preprocessor, scope, debug) {","        this.walkMap = walkMap;","        this.preprocessor = preprocessor;","        this.scope = scope;","        this.debug = debug;","        if (this.debug) {","            this.level = 0;","            this.seq = true;","        }","    }","","    function defaultWalker(node, walker) {","","        var type = node.type,","            preprocessor,","            postprocessor,","            children = SYNTAX[type],","            // don't run generated nodes thru custom walks otherwise we will attempt to instrument the instrumentation code :)","            applyCustomWalker = !!node.loc || node.type === SYNTAX.Program.name,","            walkerFn = applyCustomWalker ? walker.walkMap[type] : null,","            i,","            j,","            walkFnIndex,","            childType,","            childNode,","            ret,","            childArray,","            childElement,","            pathElement,","            assignNode,","            isLast;","","        if (!SYNTAX[type]) {","            console.error(node);","            console.error('Unsupported node type:' + type);","            return;","        }","        children = SYNTAX[type].children;","        /* istanbul ignore if: guard */","        if (node.walking) { throw new Error('Infinite regress: Custom walkers may NOT call walker.apply(node)'); }","        node.walking = true;","","        ret = walker.apply(node, walker.preprocessor);","","        preprocessor = ret.preprocessor;","        if (preprocessor) {","            delete ret.preprocessor;","            ret = walker.apply(node, preprocessor);","        }","","        if (isArray(walkerFn)) {","            for (walkFnIndex = 0; walkFnIndex < walkerFn.length; walkFnIndex += 1) {","                isLast = walkFnIndex === walkerFn.length - 1;","                ret = walker.apply(ret, walkerFn[walkFnIndex]);","                /*istanbul ignore next: paranoid check */","                if (ret.type !== type && !isLast) {","                    throw new Error('Only the last walker is allowed to change the node type: [type was: ' + type + ' ]');","                }","            }","        } else {","            if (walkerFn) {","                ret = walker.apply(node, walkerFn);","            }","        }","","        if (node.skipSelf) {","            return;","        }","","        for (i = 0; i < children.length; i += 1) {","            childType = children[i];","            childNode = node[childType];","            if (childNode && !childNode.skipWalk) {","                pathElement = { node: node, property: childType };","                if (isArray(childNode)) {","                    childArray = [];","                    for (j = 0; j < childNode.length; j += 1) {","                        childElement = childNode[j];","                        pathElement.index = j;","                        if (childElement) {","                          assignNode = walker.apply(childElement, null, pathElement);","                          if (isArray(assignNode.prepend)) {","                              pushAll(childArray, assignNode.prepend);","                              delete assignNode.prepend;","                          }","                        } else {","                            assignNode = undefined;","                        }","                        pushAll(childArray, assignNode);","                    }","                    node[childType] = childArray;","                } else {","                    assignNode = walker.apply(childNode, null, pathElement);","                    /*istanbul ignore if: paranoid check */","                    if (isArray(assignNode.prepend)) {","                        throw new Error('Internal error: attempt to prepend statements in disallowed (non-array) context');","                        /* if this should be allowed, this is how to solve it","                        tmpNode = { type: 'BlockStatement', body: [] };","                        pushAll(tmpNode.body, assignNode.prepend);","                        pushAll(tmpNode.body, assignNode);","                        node[childType] = tmpNode;","                        delete assignNode.prepend;","                        */","                    } else {","                        node[childType] = assignNode;","                    }","                }","            }","        }","","        postprocessor = ret.postprocessor;","        if (postprocessor) {","            delete ret.postprocessor;","            ret = walker.apply(ret, postprocessor);","        }","","        delete node.walking;","","        return ret;","    }","","    Walker.prototype = {","        startWalk: function (node) {","            this.path = [];","            this.apply(node);","        },","","        apply: function (node, walkFn, pathElement) {","            var ret, i, seq, prefix;","","            walkFn = walkFn || defaultWalker;","            if (this.debug) {","                this.seq += 1;","                this.level += 1;","                seq = this.seq;","                prefix = '';","                for (i = 0; i < this.level; i += 1) { prefix += '    '; }","                console.log(prefix + 'Enter (' + seq + '):' + node.type);","            }","            if (pathElement) { this.path.push(pathElement); }","            ret = walkFn.call(this.scope, node, this);","            if (pathElement) { this.path.pop(); }","            if (this.debug) {","                this.level -= 1;","                console.log(prefix + 'Return (' + seq + '):' + node.type);","            }","            return ret || node;","        },","","        startLineForNode: function (node) {","            return node && node.loc && node.loc.start ? node.loc.start.line : /* istanbul ignore next: guard */ null;","        },","","        ancestor: function (n) {","            return this.path.length > n - 1 ? this.path[this.path.length - n] : /* istanbul ignore next: guard */ null;","        },","","        parent: function () {","            return this.ancestor(1);","        },","","        isLabeled: function () {","            var el = this.parent();","            return el && el.node.type === SYNTAX.LabeledStatement.name;","        }","    };","","    /**","     * mechanism to instrument code for coverage. It uses the `esprima` and","     * `escodegen` libraries for JS parsing and code generation respectively.","     *","     * Works on `node` as well as the browser.","     *","     * Usage on nodejs","     * ---------------","     *","     *      var instrumenter = new require('istanbul').Instrumenter(),","     *          changed = instrumenter.instrumentSync('function meaningOfLife() { return 42; }', 'filename.js');","     *","     * Usage in a browser","     * ------------------","     *","     * Load `esprima.js`, `escodegen.js` and `instrumenter.js` (this file) using `script` tags or other means.","     *","     * Create an instrumenter object as:","     *","     *      var instrumenter = new Instrumenter(),","     *          changed = instrumenter.instrumentSync('function meaningOfLife() { return 42; }', 'filename.js');","     *","     * Aside from demonstration purposes, it is unclear why you would want to instrument code in a browser.","     *","     * @class Instrumenter","     * @constructor","     * @param {Object} options Optional. Configuration options.","     * @param {String} [options.coverageVariable] the global variable name to use for","     *      tracking coverage. Defaults to `__coverage__`","     * @param {Boolean} [options.embedSource] whether to embed the source code of every","     *      file as an array in the file coverage object for that file. Defaults to `false`","     * @param {Boolean} [options.preserveComments] whether comments should be preserved in the output. Defaults to `false`","     * @param {Boolean} [options.noCompact] emit readable code when set. Defaults to `false`","     * @param {Boolean} [options.esModules] whether the code to instrument contains uses es","     *      imports or exports.","     * @param {Boolean} [options.noAutoWrap] do not automatically wrap the source in","     *      an anonymous function before covering it. By default, code is wrapped in","     *      an anonymous function before it is parsed. This is done because","     *      some nodejs libraries have `return` statements outside of","     *      a function which is technically invalid Javascript and causes the parser to fail.","     *      This construct, however, works correctly in node since module loading","     *      is done in the context of an anonymous function.","     *","     * Note that the semantics of the code *returned* by the instrumenter does not change in any way.","     * The function wrapper is \"unwrapped\" before the instrumented code is generated.","     * @param {Object} [options.codeGenerationOptions] an object that is directly passed to the `escodegen`","     *      library as configuration for code generation. The `noCompact` setting is not honored when this","     *      option is specified","     * @param {Boolean} [options.debug] assist in debugging. Currently, the only effect of","     *      setting this option is a pretty-print of the coverage variable. Defaults to `false`","     * @param {Boolean} [options.walkDebug] assist in debugging of the AST walker used by this class.","     *","     */","    function Instrumenter(options) {","        this.opts = options || {","            debug: false,","            walkDebug: false,","            coverageVariable: '__coverage__',","            codeGenerationOptions: undefined,","            noAutoWrap: false,","            noCompact: false,","            embedSource: false,","            preserveComments: false,","            esModules: false","        };","","        if (this.opts.esModules && !this.opts.noAutoWrap) {","            this.opts.noAutoWrap = true;","            if (this.opts.debug) {","                console.log('Setting noAutoWrap to true as required by esModules');","            }","        }","","        this.walker = new Walker({","            ArrowFunctionExpression: [ this.arrowBlockConverter ],","            ExpressionStatement: this.coverStatement,","            ExportNamedDeclaration: this.coverExport,","            BreakStatement: this.coverStatement,","            ContinueStatement: this.coverStatement,","            DebuggerStatement: this.coverStatement,","            ReturnStatement: this.coverStatement,","            ThrowStatement: this.coverStatement,","            TryStatement: [ this.paranoidHandlerCheck, this.coverStatement],","            VariableDeclaration: this.coverStatement,","            IfStatement: [ this.ifBlockConverter, this.coverStatement, this.ifBranchInjector ],","            ForStatement: [ this.skipInit, this.loopBlockConverter, this.coverStatement ],","            ForInStatement: [ this.skipLeft, this.loopBlockConverter, this.coverStatement ],","            ForOfStatement: [ this.skipLeft, this.loopBlockConverter, this.coverStatement ],","            WhileStatement: [ this.loopBlockConverter, this.coverStatement ],","            DoWhileStatement: [ this.loopBlockConverter, this.coverStatement ],","            SwitchStatement: [ this.coverStatement, this.switchBranchInjector ],","            SwitchCase: [ this.switchCaseInjector ],","            WithStatement: [ this.withBlockConverter, this.coverStatement ],","            FunctionDeclaration: [ this.coverFunction, this.coverStatement ],","            FunctionExpression: this.coverFunction,","            LabeledStatement: this.coverStatement,","            ConditionalExpression: this.conditionalBranchInjector,","            LogicalExpression: this.logicalExpressionBranchInjector,","            ObjectExpression: this.maybeAddType,","            MetaProperty: this.coverMetaProperty,","        }, this.extractCurrentHint, this, this.opts.walkDebug);","","        //unit testing purposes only","        if (this.opts.backdoor && this.opts.backdoor.omitTrackerSuffix) {","            this.omitTrackerSuffix = true;","        }","    }","","    Instrumenter.prototype = {","        /**","         * synchronous instrumentation method. Throws when illegal code is passed to it","         * @method instrumentSync","         * @param {String} code the code to be instrumented as a String","         * @param {String} filename Optional. The name of the file from which","         *  the code was read. A temporary filename is generated when not specified.","         *  Not specifying a filename is only useful for unit tests and demonstrations","         *  of this library.","         */","        instrumentSync: function (code, filename) {","            var program;","","            //protect from users accidentally passing in a Buffer object instead","            if (typeof code !== 'string') { throw new Error('Code must be string'); }","            if (code.charAt(0) === '#') { //shebang, 'comment' it out, won't affect syntax tree locations for things we care about","                code = '//' + code;","            }","            if (!this.opts.noAutoWrap) {","                code = LEADER_WRAP + code + TRAILER_WRAP;","            }","            try {","                program = ESP.parse(code, {","                    loc: true,","                    range: true,","                    tokens: this.opts.preserveComments,","                    comment: true,","                    sourceType: this.opts.esModules ? 'module' : 'script'","                });","            } catch (e) {","                console.log('Failed to parse file: ' + filename);","                throw e;","            }","            if (this.opts.preserveComments) {","                program = ESPGEN.attachComments(program, program.comments, program.tokens);","            }","            if (!this.opts.noAutoWrap) {","                program = {","                    type: SYNTAX.Program.name,","                    body: program.body[0].expression.callee.body.body,","                    comments: program.comments","                };","            }","            return this.instrumentASTSync(program, filename, code);","        },","        filterHints: function (comments) {","            var ret = [],","                i,","                comment,","                groups;","            if (!(comments && isArray(comments))) {","                return ret;","            }","            for (i = 0; i < comments.length; i += 1) {","                comment = comments[i];","                /* istanbul ignore else: paranoid check */","                if (comment && comment.value && comment.range && isArray(comment.range)) {","                    groups = String(comment.value).match(COMMENT_RE);","                    if (groups) {","                        ret.push({ type: groups[1], start: comment.range[0], end: comment.range[1] });","                    }","                }","            }","            return ret;","        },","        extractCurrentHint: function (node) {","            if (!node.range) { return; }","            var i = this.currentState.lastHintPosition + 1,","                hints = this.currentState.hints,","                nodeStart = node.range[0],","                hint;","            this.currentState.currentHint = null;","            while (i < hints.length) {","                hint = hints[i];","                if (hint.end < nodeStart) {","                    this.currentState.currentHint = hint;","                    this.currentState.lastHintPosition = i;","                    i += 1;","                } else {","                    break;","                }","            }","        },","        /**","         * synchronous instrumentation method that instruments an AST instead.","         * @method instrumentASTSync","         * @param {String} program the AST to be instrumented","         * @param {String} filename Optional. The name of the file from which","         *  the code was read. A temporary filename is generated when not specified.","         *  Not specifying a filename is only useful for unit tests and demonstrations","         *  of this library.","         *  @param {String} originalCode the original code corresponding to the AST,","         *  used for embedding the source into the coverage object","         */","        instrumentASTSync: function (program, filename, originalCode) {","            var usingStrict = false,","                codegenOptions,","                generated,","                preamble,","                lineCount,","                i;","            filename = filename || String(new Date().getTime()) + '.js';","            this.sourceMap = null;","            this.coverState = {","                path: filename,","                s: {},","                b: {},","                f: {},","                fnMap: {},","                statementMap: {},","                branchMap: {}","            };","            this.currentState = {","                trackerVar: generateTrackerVar(filename, this.omitTrackerSuffix),","                func: 0,","                branch: 0,","                variable: 0,","                statement: 0,","                hints: this.filterHints(program.comments),","                currentHint: null,","                lastHintPosition: -1,","                ignoring: 0","            };","            if (program.body && program.body.length > 0 && this.isUseStrictExpression(program.body[0])) {","                //nuke it","                program.body.shift();","                //and add it back at code generation time","                usingStrict = true;","            }","            this.walker.startWalk(program);","            codegenOptions = this.opts.codeGenerationOptions || { format: { compact: !this.opts.noCompact }};","            codegenOptions.comment = this.opts.preserveComments;","            //console.log(JSON.stringify(program, undefined, 2));","","            generated = ESPGEN.generate(program, codegenOptions);","            preamble = this.getPreamble(originalCode || '', usingStrict);","","            if (generated.map && generated.code) {","                lineCount = preamble.split(/\\r\\n|\\r|\\n/).length;","                // offset all the generated line numbers by the number of lines in the preamble","                for (i = 0; i < generated.map._mappings._array.length; i += 1) {","                    generated.map._mappings._array[i].generatedLine += lineCount;","                }","                this.sourceMap = generated.map;","                generated = generated.code;","            }","","            return preamble + '\\n' + generated + '\\n';","        },","        /**","         * Callback based instrumentation. Note that this still executes synchronously in the same process tick","         * and calls back immediately. It only provides the options for callback style error handling as","         * opposed to a `try-catch` style and nothing more. Implemented as a wrapper over `instrumentSync`","         *","         * @method instrument","         * @param {String} code the code to be instrumented as a String","         * @param {String} filename Optional. The name of the file from which","         *  the code was read. A temporary filename is generated when not specified.","         *  Not specifying a filename is only useful for unit tests and demonstrations","         *  of this library.","         * @param {Function(err, instrumentedCode)} callback - the callback function","         */","        instrument: function (code, filename, callback) {","","            if (!callback && typeof filename === 'function') {","                callback = filename;","                filename = null;","            }","            try {","                callback(null, this.instrumentSync(code, filename));","            } catch (ex) {","                callback(ex);","            }","        },","        /**","         * returns the file coverage object for the code that was instrumented","         * just before calling this method. Note that this represents a","         * \"zero-coverage\" object which is not even representative of the code","         * being loaded in node or a browser (which would increase the statement","         * counts for mainline code).","         * @method lastFileCoverage","         * @return {Object} a \"zero-coverage\" file coverage object for the code last instrumented","         * by this instrumenter","         */","        lastFileCoverage: function () {","            return this.coverState;","        },","        /**","         * returns the source map object for the code that was instrumented","         * just before calling this method.","         * @method lastSourceMap","         * @return {Object} a source map object for the code last instrumented","         * by this instrumenter","         */","        lastSourceMap: function () {","            return this.sourceMap;","        },","        fixColumnPositions: function (coverState) {","            var offset = LEADER_WRAP.length,","                fixer = function (loc) {","                    if (loc.start.line === 1) {","                        loc.start.column -= offset;","                    }","                    if (loc.end.line === 1) {","                        loc.end.column -= offset;","                    }","                },","                k,","                obj,","                i,","                locations;","","            obj = coverState.statementMap;","            for (k in obj) {","                /* istanbul ignore else: has own property */","                if (obj.hasOwnProperty(k)) { fixer(obj[k]); }","            }","            obj = coverState.fnMap;","            for (k in obj) {","                /* istanbul ignore else: has own property */","                if (obj.hasOwnProperty(k)) { fixer(obj[k].loc); }","            }","            obj = coverState.branchMap;","            for (k in obj) {","                /* istanbul ignore else: has own property */","                if (obj.hasOwnProperty(k)) {","                    locations = obj[k].locations;","                    for (i = 0; i < locations.length; i += 1) {","                        fixer(locations[i]);","                    }","                }","            }","        },","","        getPreamble: function (sourceCode, emitUseStrict) {","            var varName = this.opts.coverageVariable || '__coverage__',","                file = this.coverState.path.replace(/\\\\/g, '\\\\\\\\'),","                tracker = this.currentState.trackerVar,","                coverState,","                strictLine = emitUseStrict ? '\"use strict\";' : '',","                // return replacements using the function to ensure that the replacement is","                // treated like a dumb string and not as a string with RE replacement patterns","                replacer = function (s) {","                    return function () { return s; };","                },","                code;","            if (!this.opts.noAutoWrap) {","                this.fixColumnPositions(this.coverState);","            }","            if (this.opts.embedSource) {","                this.coverState.code = sourceCode.split(/(?:\\r?\\n)|\\r/);","            }","            coverState = this.opts.debug ? JSON.stringify(this.coverState, undefined, 4) : JSON.stringify(this.coverState);","            code = [","                \"%STRICT%\",","                \"var %VAR% = (Function('return this'))();\",","                \"if (!%VAR%.%GLOBAL%) { %VAR%.%GLOBAL% = {}; }\",","                \"%VAR% = %VAR%.%GLOBAL%;\",","                \"if (!(%VAR%['%FILE%'])) {\",","                \"   %VAR%['%FILE%'] = %OBJECT%;\",","                \"}\",","                \"%VAR% = %VAR%['%FILE%'];\"","            ].join(\"\\n\")","                .replace(/%STRICT%/g, replacer(strictLine))","                .replace(/%VAR%/g, replacer(tracker))","                .replace(/%GLOBAL%/g, replacer(varName))","                .replace(/%FILE%/g, replacer(file))","                .replace(/%OBJECT%/g, replacer(coverState));","            return code;","        },","","        startIgnore: function () {","            this.currentState.ignoring += 1;","        },","","        endIgnore: function () {","            this.currentState.ignoring -= 1;","        },","","        convertToBlock: function (node) {","            if (!node) {","                return { type: 'BlockStatement', body: [] };","            } else if (node.type === 'BlockStatement') {","                return node;","            } else {","                return { type: 'BlockStatement', body: [ node ] };","            }","        },","","        arrowBlockConverter: function (node) {","            var retStatement;","            if (node.expression) { // turn expression nodes into a block with a return statement","                retStatement = astgen.returnStatement(node.body);","                // ensure the generated return statement is covered","                retStatement.loc = node.body.loc;","                node.body = this.convertToBlock(retStatement);","                node.expression = false;","            }","        },","","        paranoidHandlerCheck: function (node) {","            // if someone is using an older esprima on the browser","            // convert handlers array to single handler attribute","            // containing its first element","            /* istanbul ignore next */","            if (!node.handler && node.handlers) {","                node.handler = node.handlers[0];","            }","        },","","        ifBlockConverter: function (node) {","            node.consequent = this.convertToBlock(node.consequent);","            node.alternate = this.convertToBlock(node.alternate);","        },","","        loopBlockConverter: function (node) {","            node.body = this.convertToBlock(node.body);","        },","","        withBlockConverter: function (node) {","            node.body = this.convertToBlock(node.body);","        },","","        statementName: function (location, initValue) {","            var sName,","                ignoring = !!this.currentState.ignoring;","","            location.skip = ignoring || undefined;","            initValue = initValue || 0;","            this.currentState.statement += 1;","            sName = this.currentState.statement;","            this.coverState.statementMap[sName] = location;","            this.coverState.s[sName] = initValue;","            return sName;","        },","","        skipInit: function (node /*, walker */) {","            if (node.init) {","                node.init.skipWalk = true;","            }","        },","","        skipLeft: function (node /*, walker */) {","            node.left.skipWalk = true;","        },","","        isUseStrictExpression: function (node) {","            return node && node.type === SYNTAX.ExpressionStatement.name &&","                node.expression  && node.expression.type === SYNTAX.Literal.name &&","                node.expression.value === 'use strict';","        },","","        maybeSkipNode: function (node, type) {","            var alreadyIgnoring = !!this.currentState.ignoring,","                hint = this.currentState.currentHint,","                ignoreThis = !alreadyIgnoring && hint && hint.type === type;","","            if (ignoreThis) {","                this.startIgnore();","                node.postprocessor = this.endIgnore;","                return true;","            }","            return false;","        },","","        coverMetaProperty: function(node /* , walker */) {","           node.skipSelf = true;","        },","","        coverStatement: function (node, walker) {","            var sName,","                incrStatementCount,","                parent,","                grandParent;","","            this.maybeSkipNode(node, 'next');","","            if (this.isUseStrictExpression(node)) {","                grandParent = walker.ancestor(2);","                /* istanbul ignore else: difficult to test */","                if (grandParent) {","                    if ((grandParent.node.type === SYNTAX.FunctionExpression.name ||","                        grandParent.node.type === SYNTAX.FunctionDeclaration.name)  &&","                        walker.parent().node.body[0] === node) {","                        return;","                    }","                }","            }","","            if (node.type === SYNTAX.FunctionDeclaration.name) {","                // Called for the side-effect of setting the function's statement count to 1.","                this.statementName(node.loc, 1);","            } else {","                // We let `coverExport` handle ExportNamedDeclarations.","                parent = walker.parent();","                if (parent && parent.node.type === SYNTAX.ExportNamedDeclaration.name) {","                    return;","                }","","                sName = this.statementName(node.loc);","","                incrStatementCount = astgen.statement(","                    astgen.postIncrement(","                        astgen.subscript(","                            astgen.dot(astgen.variable(this.currentState.trackerVar), astgen.variable('s')),","                            astgen.stringLiteral(sName)","                        )","                    )","                );","","                this.splice(incrStatementCount, node, walker);","            }","        },","","        coverExport: function (node, walker) {","            var sName, incrStatementCount;","","            if ( !node.declaration || !node.declaration.declarations ) { return; }","","            this.maybeSkipNode(node, 'next');","","            sName = this.statementName(node.declaration.loc);","            incrStatementCount = astgen.statement(","                astgen.postIncrement(","                    astgen.subscript(","                        astgen.dot(astgen.variable(this.currentState.trackerVar), astgen.variable('s')),","                        astgen.stringLiteral(sName)","                    )","                )","            );","","            this.splice(incrStatementCount, node, walker);","        },","","        splice: function (statements, node, walker) {","            var targetNode = walker.isLabeled() ? walker.parent().node : node;","            targetNode.prepend = targetNode.prepend || [];","            pushAll(targetNode.prepend, statements);","        },","","        functionName: function (node, line, location) {","            this.currentState.func += 1;","            var id = this.currentState.func,","                ignoring = !!this.currentState.ignoring,","                name = node.id ? node.id.name : '(anonymous_' + id + ')',","                clone = function (attr) {","                    var obj = location[attr] || /* istanbul ignore next */ {};","                    return { line: obj.line, column: obj.column };","                };","            this.coverState.fnMap[id] = {","                name: name, line: line,","                loc: {","                    start: clone('start'),","                    end: clone('end')","                },","                skip: ignoring || undefined","            };","            this.coverState.f[id] = 0;","            return id;","        },","","        coverFunction: function (node, walker) {","            var id,","                body = node.body,","                blockBody = body.body,","                popped;","","            this.maybeSkipNode(node, 'next');","","            id = this.functionName(node, walker.startLineForNode(node), {","                start: node.loc.start,","                end: { line: node.body.loc.start.line, column: node.body.loc.start.column }","            });","","            if (blockBody.length > 0 && this.isUseStrictExpression(blockBody[0])) {","                popped = blockBody.shift();","            }","            blockBody.unshift(","                astgen.statement(","                    astgen.postIncrement(","                        astgen.subscript(","                            astgen.dot(astgen.variable(this.currentState.trackerVar), astgen.variable('f')),","                            astgen.stringLiteral(id)","                        )","                    )","                )","            );","            if (popped) {","                blockBody.unshift(popped);","            }","        },","","        branchName: function (type, startLine, pathLocations) {","            var bName,","                paths = [],","                locations = [],","                i,","                ignoring = !!this.currentState.ignoring;","            this.currentState.branch += 1;","            bName = this.currentState.branch;","            for (i = 0; i < pathLocations.length; i += 1) {","                pathLocations[i].skip = pathLocations[i].skip || ignoring || undefined;","                locations.push(pathLocations[i]);","                paths.push(0);","            }","            this.coverState.b[bName] = paths;","            this.coverState.branchMap[bName] = { line: startLine, type: type, locations: locations };","            return bName;","        },","","        branchIncrementExprAst: function (varName, branchIndex, down) {","            var ret = astgen.postIncrement(","                astgen.subscript(","                    astgen.subscript(","                        astgen.dot(astgen.variable(this.currentState.trackerVar), astgen.variable('b')),","                        astgen.stringLiteral(varName)","                    ),","                    astgen.numericLiteral(branchIndex)","                ),","                down","            );","            return ret;","        },","","        locationsForNodes: function (nodes) {","            var ret = [],","                i;","            for (i = 0; i < nodes.length; i += 1) {","                ret.push(nodes[i].loc);","            }","            return ret;","        },","","        ifBranchInjector: function (node, walker) {","            var alreadyIgnoring = !!this.currentState.ignoring,","                hint = this.currentState.currentHint,","                ignoreThen = !alreadyIgnoring && hint && hint.type === 'if',","                ignoreElse = !alreadyIgnoring && hint && hint.type === 'else',","                line = node.loc.start.line,","                col = node.loc.start.column,","                makeLoc = function () { return  { line: line, column: col }; },","                bName = this.branchName('if', walker.startLineForNode(node), [","                    { start: makeLoc(), end: makeLoc(), skip: ignoreThen || undefined },","                    { start: makeLoc(), end: makeLoc(), skip: ignoreElse || undefined }","                ]),","                thenBody = node.consequent.body,","                elseBody = node.alternate.body,","                child;","            thenBody.unshift(astgen.statement(this.branchIncrementExprAst(bName, 0)));","            elseBody.unshift(astgen.statement(this.branchIncrementExprAst(bName, 1)));","            if (ignoreThen) { child = node.consequent; child.preprocessor = this.startIgnore; child.postprocessor = this.endIgnore; }","            if (ignoreElse) { child = node.alternate; child.preprocessor = this.startIgnore; child.postprocessor = this.endIgnore; }","        },","","        branchLocationFor: function (name, index) {","            return this.coverState.branchMap[name].locations[index];","        },","","        switchBranchInjector: function (node, walker) {","            var cases = node.cases,","                bName,","                i;","","            if (!(cases && cases.length > 0)) {","                return;","            }","            bName = this.branchName('switch', walker.startLineForNode(node), this.locationsForNodes(cases));","            for (i = 0; i < cases.length; i += 1) {","                cases[i].branchLocation = this.branchLocationFor(bName, i);","                cases[i].consequent.unshift(astgen.statement(this.branchIncrementExprAst(bName, i)));","            }","        },","","        switchCaseInjector: function (node) {","            var location = node.branchLocation;","            delete node.branchLocation;","            if (this.maybeSkipNode(node, 'next')) {","                location.skip = true;","            }","        },","","        conditionalBranchInjector: function (node, walker) {","            var bName = this.branchName('cond-expr', walker.startLineForNode(node), this.locationsForNodes([ node.consequent, node.alternate ])),","                ast1 = this.branchIncrementExprAst(bName, 0),","                ast2 = this.branchIncrementExprAst(bName, 1);","","            node.consequent.preprocessor = this.maybeAddSkip(this.branchLocationFor(bName, 0));","            node.alternate.preprocessor = this.maybeAddSkip(this.branchLocationFor(bName, 1));","            node.consequent = astgen.sequence(ast1, node.consequent);","            node.alternate = astgen.sequence(ast2, node.alternate);","        },","","        maybeAddSkip: function (branchLocation) {","            return function (node) {","                var alreadyIgnoring = !!this.currentState.ignoring,","                    hint = this.currentState.currentHint,","                    ignoreThis = !alreadyIgnoring && hint && hint.type === 'next';","                if (ignoreThis) {","                    this.startIgnore();","                    node.postprocessor = this.endIgnore;","                }","                if (ignoreThis || alreadyIgnoring) {","                    branchLocation.skip = true;","                }","            };","        },","","        logicalExpressionBranchInjector: function (node, walker) {","            var parent = walker.parent(),","                leaves = [],","                bName,","                tuple,","                i;","","            this.maybeSkipNode(node, 'next');","","            if (parent && parent.node.type === SYNTAX.LogicalExpression.name) {","                //already covered","                return;","            }","","            this.findLeaves(node, leaves);","            bName = this.branchName('binary-expr',","                walker.startLineForNode(node),","                this.locationsForNodes(leaves.map(function (item) { return item.node; }))","            );","            for (i = 0; i < leaves.length; i += 1) {","                tuple = leaves[i];","                tuple.parent[tuple.property] = astgen.sequence(this.branchIncrementExprAst(bName, i), tuple.node);","                tuple.node.preprocessor = this.maybeAddSkip(this.branchLocationFor(bName, i));","            }","        },","","        findLeaves: function (node, accumulator, parent, property) {","            if (node.type === SYNTAX.LogicalExpression.name) {","                this.findLeaves(node.left, accumulator, node, 'left');","                this.findLeaves(node.right, accumulator, node, 'right');","            } else {","                accumulator.push({ node: node, parent: parent, property: property });","            }","        },","        maybeAddType: function (node /*, walker */) {","            var props = node.properties,","                i,","                child;","            for (i = 0; i < props.length; i += 1) {","                child = props[i];","                if (!child.type) {","                    child.type = SYNTAX.Property.name;","                }","            }","        },","    };","","    if (isNode) {","        module.exports = Instrumenter;","    } else {","        window.Instrumenter = Instrumenter;","    }","","}(typeof module !== 'undefined' && typeof module.exports !== 'undefined' && typeof exports !== 'undefined'));",""],"l":{"7":1,"9":1,"23":1,"24":1,"27":1,"28":0,"36":1,"37":1,"38":1,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"50":0,"54":0,"55":0,"56":0,"58":0,"61":1,"62":0,"63":0,"65":0,"68":1,"143":1,"145":71,"146":71,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"173":1,"175":0,"194":0,"195":0,"196":0,"197":0,"199":0,"201":1,"202":0,"204":0,"206":0,"207":0,"208":0,"209":0,"212":0,"213":0,"214":0,"215":0,"217":1,"218":1,"222":0,"223":0,"227":0,"228":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"248":0,"250":0,"252":0,"254":0,"256":0,"257":1,"266":0,"272":0,"273":0,"274":0,"275":0,"278":0,"280":0,"283":1,"285":0,"286":0,"290":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"308":0,"312":0,"316":0,"320":0,"324":0,"325":0,"382":1,"383":0,"395":0,"396":0,"397":0,"398":0,"402":0,"432":0,"433":0,"437":1,"448":0,"451":0,"452":0,"453":0,"455":0,"456":0,"458":0,"459":0,"467":0,"468":0,"470":0,"471":0,"473":0,"474":0,"480":0,"483":0,"487":0,"488":0,"490":0,"491":0,"493":0,"494":0,"495":0,"496":0,"500":0,"503":0,"504":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"516":0,"532":0,"538":0,"539":0,"540":0,"549":0,"560":0,"562":0,"564":0,"566":0,"567":0,"568":0,"571":0,"572":0,"574":0,"575":0,"577":0,"578":0,"580":0,"581":0,"584":0,"601":0,"602":0,"603":0,"605":0,"606":0,"608":0,"622":0,"632":0,"635":0,"637":0,"638":0,"640":0,"641":0,"649":0,"650":0,"652":0,"654":0,"655":0,"657":0,"659":0,"660":0,"662":0,"663":0,"664":0,"665":0,"672":0,"680":0,"683":0,"684":0,"686":0,"687":0,"689":0,"690":0,"705":0,"709":0,"713":0,"717":0,"718":0,"719":0,"720":0,"722":0,"727":0,"728":0,"729":0,"731":0,"732":0,"733":0,"742":1,"743":1,"748":0,"749":0,"753":0,"757":0,"761":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"774":0,"775":0,"780":0,"784":0,"790":0,"794":0,"795":0,"796":0,"797":0,"799":0,"803":0,"807":0,"812":0,"814":0,"815":0,"817":0,"818":0,"821":0,"826":0,"828":0,"831":0,"832":0,"833":0,"836":0,"838":0,"847":0,"852":0,"854":0,"856":0,"858":0,"859":0,"868":0,"872":0,"873":0,"874":0,"878":0,"879":0,"883":0,"884":0,"886":0,"894":0,"895":0,"899":0,"904":0,"906":0,"911":0,"912":0,"914":0,"924":0,"925":0,"930":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"942":0,"943":0,"944":0,"948":0,"958":0,"962":0,"964":0,"965":0,"967":0,"971":0,"977":0,"985":0,"986":0,"987":0,"988":0,"992":0,"996":0,"1000":0,"1001":0,"1003":0,"1004":0,"1005":0,"1006":0,"1011":0,"1012":0,"1013":0,"1014":0,"1019":0,"1023":0,"1024":0,"1025":0,"1026":0,"1030":0,"1031":0,"1034":0,"1035":0,"1036":0,"1038":0,"1039":0,"1045":0,"1051":0,"1053":0,"1055":0,"1058":0,"1059":0,"1061":0,"1063":0,"1064":0,"1065":0,"1066":0,"1071":0,"1072":0,"1073":0,"1075":0,"1079":0,"1082":0,"1083":0,"1084":0,"1085":0,"1091":1,"1092":1,"1094":0}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/hook.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/hook.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"transformFn","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":52}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":11},"end":{"line":44,"column":37}}},"3":{"name":"unloadRequireCache","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":37}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":43},"end":{"line":70,"column":63}}},"5":{"name":"hookRequire","line":91,"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":52}}},"6":{"name":"(anonymous_6)","line":100,"loc":{"start":{"line":100,"column":23},"end":{"line":100,"column":36}}},"7":{"name":"(anonymous_7)","line":104,"loc":{"start":{"line":104,"column":34},"end":{"line":104,"column":62}}},"8":{"name":"unhookRequire","line":122,"loc":{"start":{"line":122,"column":0},"end":{"line":122,"column":25}}},"9":{"name":"(anonymous_9)","line":123,"loc":{"start":{"line":123,"column":41},"end":{"line":123,"column":55}}},"10":{"name":"hookCreateScript","line":139,"loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":54}}},"11":{"name":"(anonymous_11)","line":142,"loc":{"start":{"line":142,"column":22},"end":{"line":142,"column":44}}},"12":{"name":"unhookCreateScript","line":153,"loc":{"start":{"line":153,"column":0},"end":{"line":153,"column":30}}},"13":{"name":"hookRunInThisContext","line":169,"loc":{"start":{"line":169,"column":0},"end":{"line":169,"column":58}}},"14":{"name":"(anonymous_14)","line":172,"loc":{"start":{"line":172,"column":26},"end":{"line":172,"column":48}}},"15":{"name":"unhookRunInThisContext","line":183,"loc":{"start":{"line":183,"column":0},"end":{"line":183,"column":34}}}},"statementMap":{"1":{"start":{"line":34,"column":0},"end":{"line":40,"column":51}},"2":{"start":{"line":42,"column":0},"end":{"line":66,"column":1}},"3":{"start":{"line":44,"column":4},"end":{"line":65,"column":6}},"4":{"start":{"line":45,"column":8},"end":{"line":47,"column":28}},"5":{"start":{"line":49,"column":8},"end":{"line":63,"column":9}},"6":{"start":{"line":50,"column":12},"end":{"line":52,"column":13}},"7":{"start":{"line":51,"column":16},"end":{"line":51,"column":80}},"8":{"start":{"line":53,"column":12},"end":{"line":60,"column":13}},"9":{"start":{"line":54,"column":16},"end":{"line":54,"column":58}},"10":{"start":{"line":55,"column":16},"end":{"line":55,"column":31}},"11":{"start":{"line":57,"column":16},"end":{"line":57,"column":76}},"12":{"start":{"line":58,"column":16},"end":{"line":58,"column":34}},"13":{"start":{"line":59,"column":16},"end":{"line":59,"column":35}},"14":{"start":{"line":62,"column":12},"end":{"line":62,"column":31}},"15":{"start":{"line":64,"column":8},"end":{"line":64,"column":55}},"16":{"start":{"line":68,"column":0},"end":{"line":76,"column":1}},"17":{"start":{"line":69,"column":4},"end":{"line":75,"column":5}},"18":{"start":{"line":70,"column":8},"end":{"line":74,"column":11}},"19":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"20":{"start":{"line":72,"column":16},"end":{"line":72,"column":47}},"21":{"start":{"line":91,"column":0},"end":{"line":116,"column":1}},"22":{"start":{"line":92,"column":4},"end":{"line":92,"column":28}},"23":{"start":{"line":93,"column":4},"end":{"line":96,"column":85}},"24":{"start":{"line":98,"column":4},"end":{"line":98,"column":47}},"25":{"start":{"line":100,"column":4},"end":{"line":115,"column":7}},"26":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"27":{"start":{"line":102,"column":12},"end":{"line":102,"column":88}},"28":{"start":{"line":104,"column":8},"end":{"line":114,"column":10}},"29":{"start":{"line":105,"column":12},"end":{"line":105,"column":70}},"30":{"start":{"line":106,"column":12},"end":{"line":110,"column":13}},"31":{"start":{"line":107,"column":16},"end":{"line":107,"column":52}},"32":{"start":{"line":109,"column":16},"end":{"line":109,"column":55}},"33":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"34":{"start":{"line":112,"column":16},"end":{"line":112,"column":39}},"35":{"start":{"line":122,"column":0},"end":{"line":126,"column":1}},"36":{"start":{"line":123,"column":4},"end":{"line":125,"column":7}},"37":{"start":{"line":124,"column":8},"end":{"line":124,"column":55}},"38":{"start":{"line":139,"column":0},"end":{"line":146,"column":1}},"39":{"start":{"line":140,"column":4},"end":{"line":140,"column":22}},"40":{"start":{"line":141,"column":4},"end":{"line":141,"column":61}},"41":{"start":{"line":142,"column":4},"end":{"line":145,"column":6}},"42":{"start":{"line":143,"column":8},"end":{"line":143,"column":33}},"43":{"start":{"line":144,"column":8},"end":{"line":144,"column":52}},"44":{"start":{"line":153,"column":0},"end":{"line":155,"column":1}},"45":{"start":{"line":154,"column":4},"end":{"line":154,"column":43}},"46":{"start":{"line":169,"column":0},"end":{"line":176,"column":1}},"47":{"start":{"line":170,"column":4},"end":{"line":170,"column":22}},"48":{"start":{"line":171,"column":4},"end":{"line":171,"column":61}},"49":{"start":{"line":172,"column":4},"end":{"line":175,"column":6}},"50":{"start":{"line":173,"column":8},"end":{"line":173,"column":33}},"51":{"start":{"line":174,"column":8},"end":{"line":174,"column":56}},"52":{"start":{"line":183,"column":0},"end":{"line":185,"column":1}},"53":{"start":{"line":184,"column":4},"end":{"line":184,"column":51}},"54":{"start":{"line":188,"column":0},"end":{"line":196,"column":2}}},"branchMap":{"1":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":25},"end":{"line":45,"column":53}},{"start":{"line":45,"column":57},"end":{"line":45,"column":88}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":12}},{"start":{"line":50,"column":12},"end":{"line":50,"column":12}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"5":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":15}},{"start":{"line":69,"column":19},"end":{"line":69,"column":49}},{"start":{"line":69,"column":53},"end":{"line":69,"column":60}},{"start":{"line":69,"column":64},"end":{"line":69,"column":77}}]},"6":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":12}},{"start":{"line":71,"column":12},"end":{"line":71,"column":12}}]},"7":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":14},"end":{"line":92,"column":21}},{"start":{"line":92,"column":25},"end":{"line":92,"column":27}}]},"8":{"line":95,"type":"cond-expr","locations":[{"start":{"line":96,"column":57},"end":{"line":96,"column":77}},{"start":{"line":96,"column":80},"end":{"line":96,"column":84}}]},"9":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":23},"end":{"line":95,"column":43}},{"start":{"line":96,"column":12},"end":{"line":96,"column":54}}]},"10":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":17},"end":{"line":98,"column":35}},{"start":{"line":98,"column":39},"end":{"line":98,"column":46}}]},"11":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"12":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":35},"end":{"line":102,"column":58}},{"start":{"line":102,"column":62},"end":{"line":102,"column":87}}]},"13":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":12}},{"start":{"line":106,"column":12},"end":{"line":106,"column":12}}]},"14":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":12}},{"start":{"line":111,"column":12},"end":{"line":111,"column":12}}]},"15":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":11},"end":{"line":140,"column":15}},{"start":{"line":140,"column":19},"end":{"line":140,"column":21}}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":11},"end":{"line":170,"column":15}},{"start":{"line":170,"column":19},"end":{"line":170,"column":21}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","/**"," * provides a mechanism to transform code in the scope of `require` or `vm.createScript`."," * This mechanism is general and relies on a user-supplied `matcher` function that determines when transformations should be"," * performed and a user-supplied `transformer` function that performs the actual transform."," * Instrumenting code for coverage is one specific example of useful hooking."," *"," * Note that both the `matcher` and `transformer` must execute synchronously."," *"," * For the common case of matching filesystem paths based on inclusion/ exclusion patterns, use the `matcherFor`"," * function in the istanbul API to get a matcher."," *"," * It is up to the transformer to perform processing with side-effects, such as caching, storing the original"," * source code to disk in case of dynamically generated scripts etc. The `Store` class can help you with this."," *"," * Usage"," * -----"," *"," *      var hook = require('istanbul').hook,"," *          myMatcher = function (file) { return file.match(/foo/); },"," *          myTransformer = function (code, file) { return 'console.log(\"' + file + '\");' + code; };"," *"," *      hook.hookRequire(myMatcher, myTransformer);"," *"," *      var foo = require('foo'); //will now print foo's module path to console"," *"," * @class Hook"," * @module main"," */","var path = require('path'),","    fs = require('fs'),","    Module = require('module'),","    vm = require('vm'),","    originalLoaders = {},","    originalCreateScript = vm.createScript,","    originalRunInThisContext = vm.runInThisContext;","","function transformFn(matcher, transformer, verbose) {","","    return function (code, filename) {","        var shouldHook = typeof filename === 'string' && matcher(path.resolve(filename)),","            transformed,","            changed = false;","","        if (shouldHook) {","            if (verbose) {","                console.error('Module load hook: transform [' + filename + ']');","            }","            try {","                transformed = transformer(code, filename);","                changed = true;","            } catch (ex) {","                console.error('Transformation error; return original code');","                console.error(ex);","                transformed = code;","            }","        } else {","            transformed = code;","        }","        return { code: transformed, changed: changed };","    };","}","","function unloadRequireCache(matcher) {","    if (matcher && typeof require !== 'undefined' && require && require.cache) {","        Object.keys(require.cache).forEach(function (filename) {","            if (matcher(filename)) {","                delete require.cache[filename];","            }","        });","    }","}","/**"," * hooks `require` to return transformed code to the node module loader."," * Exceptions in the transform result in the original code being used instead."," * @method hookRequire"," * @static"," * @param matcher {Function(filePath)} a function that is called with the absolute path to the file being"," *  `require`-d. Should return a truthy value when transformations need to be applied to the code, a falsy value otherwise"," * @param transformer {Function(code, filePath)} a function called with the original code and the associated path of the file"," *  from where the code was loaded. Should return the transformed code."," * @param options {Object} options Optional."," * @param {Boolean} [options.verbose] write a line to standard error every time the transformer is called"," * @param {Function} [options.postLoadHook] a function that is called with the name of the file being"," *  required. This is called after the require is processed irrespective of whether it was transformed."," */","function hookRequire(matcher, transformer, options) {","    options = options || {};","    var extensions,","        fn = transformFn(matcher, transformer, options.verbose),","        postLoadHook = options.postLoadHook &&","            typeof options.postLoadHook === 'function' ? options.postLoadHook : null;","","    extensions = options.extensions || ['.js'];","","    extensions.forEach(function(ext){","        if (!(ext in originalLoaders)) {","            originalLoaders[ext] = Module._extensions[ext] || Module._extensions['.js'];","        }","        Module._extensions[ext] = function (module, filename) {","            var ret = fn(fs.readFileSync(filename, 'utf8'), filename);","            if (ret.changed) {","                module._compile(ret.code, filename);","            } else {","                originalLoaders[ext](module, filename);","            }","            if (postLoadHook) {","                postLoadHook(filename);","            }","        };","    });","}","/**"," * unhook `require` to restore it to its original state."," * @method unhookRequire"," * @static"," */","function unhookRequire() {","    Object.keys(originalLoaders).forEach(function(ext) {","        Module._extensions[ext] = originalLoaders[ext];","    });","}","/**"," * hooks `vm.createScript` to return transformed code out of which a `Script` object will be created."," * Exceptions in the transform result in the original code being used instead."," * @method hookCreateScript"," * @static"," * @param matcher {Function(filePath)} a function that is called with the filename passed to `vm.createScript`"," *  Should return a truthy value when transformations need to be applied to the code, a falsy value otherwise"," * @param transformer {Function(code, filePath)} a function called with the original code and the filename passed to"," *  `vm.createScript`. Should return the transformed code."," * @param options {Object} options Optional."," * @param {Boolean} [options.verbose] write a line to standard error every time the transformer is called"," */","function hookCreateScript(matcher, transformer, opts) {","    opts = opts || {};","    var fn = transformFn(matcher, transformer, opts.verbose);","    vm.createScript = function (code, file) {","        var ret = fn(code, file);","        return originalCreateScript(ret.code, file);","    };","}","","/**"," * unhooks vm.createScript, restoring it to its original state."," * @method unhookCreateScript"," * @static"," */","function unhookCreateScript() {","    vm.createScript = originalCreateScript;","}","","","/**"," * hooks `vm.runInThisContext` to return transformed code."," * @method hookRunInThisContext"," * @static"," * @param matcher {Function(filePath)} a function that is called with the filename passed to `vm.createScript`"," *  Should return a truthy value when transformations need to be applied to the code, a falsy value otherwise"," * @param transformer {Function(code, filePath)} a function called with the original code and the filename passed to"," *  `vm.createScript`. Should return the transformed code."," * @param options {Object} options Optional."," * @param {Boolean} [options.verbose] write a line to standard error every time the transformer is called"," */","function hookRunInThisContext(matcher, transformer, opts) {","    opts = opts || {};","    var fn = transformFn(matcher, transformer, opts.verbose);","    vm.runInThisContext = function (code, file) {","        var ret = fn(code, file);","        return originalRunInThisContext(ret.code, file);","    };","}","","/**"," * unhooks vm.runInThisContext, restoring it to its original state."," * @method unhookRunInThisContext"," * @static"," */","function unhookRunInThisContext() {","    vm.runInThisContext = originalRunInThisContext;","}","","","module.exports = {","    hookRequire: hookRequire,","    unhookRequire: unhookRequire,","    hookCreateScript: hookCreateScript,","    unhookCreateScript: unhookCreateScript,","    hookRunInThisContext : hookRunInThisContext,","    unhookRunInThisContext : unhookRunInThisContext,","    unloadRequireCache: unloadRequireCache","};","","",""],"l":{"34":1,"42":1,"44":0,"45":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"57":0,"58":0,"59":0,"62":0,"64":0,"68":1,"69":0,"70":0,"71":0,"72":0,"91":1,"92":0,"93":0,"98":0,"100":0,"101":0,"102":0,"104":0,"105":0,"106":0,"107":0,"109":0,"111":0,"112":0,"122":1,"123":0,"124":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"153":1,"154":0,"169":1,"170":0,"171":0,"172":0,"173":0,"174":0,"183":1,"184":0,"188":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/reporter.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/reporter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"Reporter","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":28}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":9},"end":{"line":46,"column":24}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":12},"end":{"line":66,"column":28}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":21},"end":{"line":68,"column":34}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":11},"end":{"line":80,"column":48}}},"6":{"name":"(anonymous_6)","line":87,"loc":{"start":{"line":87,"column":37},"end":{"line":87,"column":53}}},"7":{"name":"(anonymous_7)","line":103,"loc":{"start":{"line":103,"column":16},"end":{"line":103,"column":36}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":47}},"2":{"start":{"line":33,"column":0},"end":{"line":37,"column":1}},"3":{"start":{"line":34,"column":4},"end":{"line":34,"column":50}},"4":{"start":{"line":35,"column":4},"end":{"line":35,"column":50}},"5":{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},"6":{"start":{"line":39,"column":0},"end":{"line":109,"column":2}},"7":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"8":{"start":{"line":48,"column":12},"end":{"line":48,"column":19}},"9":{"start":{"line":50,"column":8},"end":{"line":51,"column":67}},"10":{"start":{"line":52,"column":8},"end":{"line":52,"column":43}},"11":{"start":{"line":53,"column":8},"end":{"line":53,"column":33}},"12":{"start":{"line":54,"column":8},"end":{"line":54,"column":61}},"13":{"start":{"line":55,"column":8},"end":{"line":59,"column":9}},"14":{"start":{"line":56,"column":12},"end":{"line":56,"column":62}},"15":{"start":{"line":58,"column":12},"end":{"line":58,"column":75}},"16":{"start":{"line":67,"column":8},"end":{"line":67,"column":24}},"17":{"start":{"line":68,"column":8},"end":{"line":70,"column":11}},"18":{"start":{"line":69,"column":12},"end":{"line":69,"column":24}},"19":{"start":{"line":81,"column":8},"end":{"line":83,"column":59}},"20":{"start":{"line":85,"column":8},"end":{"line":85,"column":54}},"21":{"start":{"line":87,"column":8},"end":{"line":94,"column":11}},"22":{"start":{"line":88,"column":12},"end":{"line":88,"column":39}},"23":{"start":{"line":89,"column":12},"end":{"line":91,"column":13}},"24":{"start":{"line":90,"column":16},"end":{"line":90,"column":55}},"25":{"start":{"line":92,"column":12},"end":{"line":92,"column":39}},"26":{"start":{"line":93,"column":12},"end":{"line":93,"column":48}},"27":{"start":{"line":104,"column":8},"end":{"line":104,"column":29}},"28":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"29":{"start":{"line":106,"column":12},"end":{"line":106,"column":30}},"30":{"start":{"line":111,"column":0},"end":{"line":111,"column":26}}},"branchMap":{"1":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":18},"end":{"line":34,"column":21}},{"start":{"line":34,"column":25},"end":{"line":34,"column":49}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":15},"end":{"line":35,"column":18}},{"start":{"line":35,"column":22},"end":{"line":35,"column":49}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"4":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":24},"end":{"line":51,"column":60}},{"start":{"line":51,"column":64},"end":{"line":51,"column":66}}]},"5":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":12}},{"start":{"line":89,"column":12},"end":{"line":89,"column":12}}]},"6":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]}},"code":["/*"," Copyright (c) 2014, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","var Report = require('./report'),","    configuration = require('./config'),","    inputError = require('./util/input-error');","","/**"," * convenience mechanism to write one or more reports ensuring that config"," * options are respected."," * Usage"," * -----"," *"," *      var fs = require('fs'),"," *          reporter = new require('istanbul').Reporter(),"," *          collector = new require('istanbul').Collector(),"," *          sync = true;"," *"," *      collector.add(JSON.parse(fs.readFileSync('coverage.json', 'utf8')));"," *      reporter.add('lcovonly');"," *      reporter.addAll(['clover', 'cobertura']);"," *      reporter.write(collector, sync, function () { console.log('done'); });"," *"," * @class Reporter"," * @param {Configuration} cfg  the config object, a falsy value will load the"," *  default configuration instead"," * @param {String} dir  the directory in which to write the reports, may be falsy"," *  to use config or global defaults"," * @constructor"," * @module main"," */","function Reporter(cfg, dir) {","    this.config = cfg || configuration.loadFile();","    this.dir = dir || this.config.reporting.dir();","    this.reports = {};","}","","Reporter.prototype = {","    /**","     * adds a report to be generated. Must be one of the entries returned","     * by `Report.getReportList()`","     * @method add","     * @param {String} fmt the format of the report to generate","     */","    add: function (fmt) {","        if (this.reports[fmt]) { // already added","            return;","        }","        var config = this.config,","            rptConfig = config.reporting.reportConfig()[fmt] || {};","        rptConfig.verbose = config.verbose;","        rptConfig.dir = this.dir;","        rptConfig.watermarks = config.reporting.watermarks();","        try {","            this.reports[fmt] = Report.create(fmt, rptConfig);","        } catch (ex) {","            throw inputError.create('Invalid report format [' + fmt + ']');","        }","    },","    /**","     * adds an array of report formats to be generated","     * @method addAll","     * @param {Array} fmts an array of report formats","     */","    addAll: function (fmts) {","        var that = this;","        fmts.forEach(function (f) {","            that.add(f);","        });","    },","    /**","     * writes all reports added and calls the callback when done","     * @method write","     * @param {Collector} collector the collector having the coverage data","     * @param {Boolean} sync true to write reports synchronously","     * @param {Function} callback the callback to call when done. When `sync`","     * is true, the callback will be called in the same process tick.","     */","    write: function (collector, sync, callback) {","        var reports = this.reports,","            verbose = this.config.verbose,","            handler = this.handleDone.bind(this, callback);","","        this.inProgress = Object.keys(reports).length;","","        Object.keys(reports).forEach(function (name) {","            var report = reports[name];","            if (verbose) {","                console.error('Write report: ' + name);","            }","            report.on('done', handler);","            report.writeReport(collector, sync);","        });","    },","    /*","     * handles listening on all reports to be completed before calling the callback","     * @method handleDone","     * @private","     * @param {Function} callback the callback to call when all reports are","     * written","     */","    handleDone: function (callback) {","        this.inProgress -= 1;","        if (this.inProgress === 0) {","            return callback();","        }","    }","};","","module.exports = Reporter;",""],"l":{"5":1,"33":1,"34":0,"35":0,"36":0,"39":1,"47":0,"48":0,"50":0,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"67":0,"68":0,"69":0,"81":0,"85":0,"87":0,"88":0,"89":0,"90":0,"92":0,"93":0,"104":0,"105":0,"106":0,"111":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/help.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/help.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"showConfigHelp","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}},"2":{"name":"HelpCommand","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":23}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":14},"end":{"line":58,"column":26}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":11},"end":{"line":62,"column":23}}},"5":{"name":"(anonymous_5)","line":69,"loc":{"start":{"line":69,"column":41},"end":{"line":69,"column":56}}},"6":{"name":"(anonymous_6)","line":78,"loc":{"start":{"line":78,"column":9},"end":{"line":78,"column":35}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":12,"column":62}},"2":{"start":{"line":14,"column":0},"end":{"line":48,"column":1}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":47}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":42}},"5":{"start":{"line":18,"column":4},"end":{"line":22,"column":47}},"6":{"start":{"line":23,"column":4},"end":{"line":25,"column":112}},"7":{"start":{"line":26,"column":4},"end":{"line":29,"column":53}},"8":{"start":{"line":31,"column":4},"end":{"line":33,"column":41}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":66}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":93}},"11":{"start":{"line":36,"column":4},"end":{"line":39,"column":66}},"12":{"start":{"line":40,"column":4},"end":{"line":42,"column":59}},"13":{"start":{"line":43,"column":4},"end":{"line":46,"column":90}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":22}},"15":{"start":{"line":50,"column":0},"end":{"line":52,"column":1}},"16":{"start":{"line":51,"column":4},"end":{"line":51,"column":23}},"17":{"start":{"line":54,"column":0},"end":{"line":54,"column":26}},"18":{"start":{"line":55,"column":0},"end":{"line":55,"column":36}},"19":{"start":{"line":57,"column":0},"end":{"line":97,"column":3}},"20":{"start":{"line":59,"column":8},"end":{"line":59,"column":28}},"21":{"start":{"line":64,"column":8},"end":{"line":64,"column":99}},"22":{"start":{"line":65,"column":8},"end":{"line":65,"column":78}},"23":{"start":{"line":66,"column":8},"end":{"line":66,"column":51}},"24":{"start":{"line":68,"column":8},"end":{"line":68,"column":23}},"25":{"start":{"line":69,"column":8},"end":{"line":73,"column":11}},"26":{"start":{"line":70,"column":12},"end":{"line":70,"column":45}},"27":{"start":{"line":71,"column":12},"end":{"line":71,"column":68}},"28":{"start":{"line":72,"column":12},"end":{"line":72,"column":32}},"29":{"start":{"line":74,"column":8},"end":{"line":74,"column":101}},"30":{"start":{"line":75,"column":8},"end":{"line":75,"column":63}},"31":{"start":{"line":76,"column":8},"end":{"line":76,"column":28}},"32":{"start":{"line":79,"column":8},"end":{"line":79,"column":20}},"33":{"start":{"line":80,"column":8},"end":{"line":94,"column":9}},"34":{"start":{"line":81,"column":12},"end":{"line":81,"column":25}},"35":{"start":{"line":83,"column":12},"end":{"line":93,"column":13}},"36":{"start":{"line":84,"column":16},"end":{"line":84,"column":48}},"37":{"start":{"line":86,"column":16},"end":{"line":92,"column":17}},"38":{"start":{"line":87,"column":20},"end":{"line":87,"column":54}},"39":{"start":{"line":88,"column":20},"end":{"line":88,"column":83}},"40":{"start":{"line":90,"column":20},"end":{"line":90,"column":65}},"41":{"start":{"line":91,"column":20},"end":{"line":91,"column":33}},"42":{"start":{"line":95,"column":8},"end":{"line":95,"column":26}},"43":{"start":{"line":100,"column":0},"end":{"line":100,"column":29}}},"branchMap":{"1":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"2":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":12},"end":{"line":83,"column":12}},{"start":{"line":83,"column":12},"end":{"line":83,"column":12}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var Command = require('./index.js'),","    util = require('util'),","    formatOption = require('../util/help-formatter').formatOption,","    VERSION = require('../../index').VERSION,","    configuration = require('../config'),","    yaml = require('js-yaml'),","    formatPara = require('../util/help-formatter').formatPara;","","function showConfigHelp(toolName) {","","    console.error('\\nConfiguring ' + toolName);","    console.error('====================');","    console.error('\\n' +","        formatPara(toolName + ' can be configured globally using a .istanbul.yml YAML file ' +","            'at the root of your source tree. Every command also accepts a --config=<config-file> argument to ' +","            'customize its location per command. The alternate config file can be in YAML, JSON or node.js ' +","            '(exporting the config object).'));","    console.error('\\n' +","        formatPara('The config file currently has four sections for instrumentation, reporting, hooks, ' +","            'and checking. Note that certain commands (like `cover`) use information from multiple sections.'));","    console.error('\\n' +","        formatPara('Keys in the config file usually correspond to command line parameters with the same name. ' +","            'The verbose option for every command shows you the exact configuration used. See the api ' +","            'docs for an explanation of each key.'));","","    console.error('\\n' +","        formatPara('You only need to specify the keys that you want to override. Your overrides will be merged ' +","            'with the default config.'));","    console.error('\\nThe default configuration is as follows:\\n');","    console.error(yaml.safeDump(configuration.defaultConfig(), { indent: 4, flowLevel: 3 }));","    console.error('\\n' +","        formatPara('The `watermarks` section does not have a command line equivalent. It allows you to set up ' +","            'low and high watermark percentages for reporting. These are honored by all reporters that colorize ' +","            'their output based on low/ medium/ high coverage.'));","    console.error('\\n' +","        formatPara('The `reportConfig` section allows you to configure each report format independently ' +","            'and has no command-line equivalent either.'));","    console.error('\\n' +","        formatPara('The `check` section configures minimum threshold enforcement for coverage results. ' +","            '`global` applies to all files together and `each` on a per-file basis. A list of files can ' +","            'be excluded from enforcement relative to root via the `exclude` property.'));","    console.error('');","}","","function HelpCommand() {","    Command.call(this);","}","","HelpCommand.TYPE = 'help';","util.inherits(HelpCommand, Command);","","Command.mix(HelpCommand, {","    synopsis: function () {","        return \"shows help\";","    },","","    usage: function () {","","        console.error('\\nUsage: ' + this.toolName() + ' ' + this.type() + ' config | <command>\\n');","        console.error('`config` provides help with istanbul configuration\\n');","        console.error('Available commands are:\\n');","","        var commandObj;","        Command.getCommandList().forEach(function (cmd) {","            commandObj = Command.create(cmd);","            console.error(formatOption(cmd, commandObj.synopsis()));","            console.error(\"\\n\");","        });","        console.error(\"Command names can be abbreviated as long as the abbreviation is unambiguous\");","        console.error(this.toolName() + ' version:' + VERSION);","        console.error(\"\\n\");","    },","    run: function (args, callback) {","        var command;","        if (args.length === 0) {","            this.usage();","        } else {","            if (args[0] === 'config') {","                showConfigHelp(this.toolName());","            } else {","                try {","                    command = Command.create(args[0]);","                    command.usage('istanbul', Command.resolveCommandName(args[0]));","                } catch (ex) {","                    console.error('Invalid command: ' + args[0]);","                    this.usage();","                }","            }","        }","        return callback();","    }","});","","","module.exports = HelpCommand;","","",""],"l":{"6":1,"14":1,"16":0,"17":0,"18":0,"23":0,"26":0,"31":0,"34":0,"35":0,"36":0,"40":0,"43":0,"47":0,"50":1,"51":0,"54":1,"55":1,"57":1,"59":0,"64":0,"65":0,"66":0,"68":0,"69":0,"70":0,"71":0,"72":0,"74":0,"75":0,"76":0,"79":0,"80":0,"81":0,"83":0,"84":0,"86":0,"87":0,"88":0,"90":0,"91":0,"95":0,"100":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/instrument.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/instrument.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":1,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"BaselineCollector","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":26},"end":{"line":35,"column":38}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":29}}},"4":{"name":"processFiles","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":84}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":20},"end":{"line":56,"column":46}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":47},"end":{"line":72,"column":68}}},"7":{"name":"(anonymous_7)","line":74,"loc":{"start":{"line":74,"column":61},"end":{"line":74,"column":91}}},"8":{"name":"(anonymous_8)","line":76,"loc":{"start":{"line":76,"column":71},"end":{"line":76,"column":86}}},"9":{"name":"(anonymous_9)","line":91,"loc":{"start":{"line":91,"column":37},"end":{"line":91,"column":48}}},"10":{"name":"(anonymous_10)","line":101,"loc":{"start":{"line":101,"column":26},"end":{"line":101,"column":47}}},"11":{"name":"(anonymous_11)","line":117,"loc":{"start":{"line":117,"column":14},"end":{"line":117,"column":26}}},"12":{"name":"InstrumentCommand","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":29}}},"13":{"name":"synopsis","line":136,"loc":{"start":{"line":136,"column":14},"end":{"line":136,"column":34}}},"14":{"name":"(anonymous_14)","line":140,"loc":{"start":{"line":140,"column":11},"end":{"line":140,"column":23}}},"15":{"name":"(anonymous_15)","line":161,"loc":{"start":{"line":161,"column":9},"end":{"line":161,"column":35}}},"16":{"name":"(anonymous_16)","line":213,"loc":{"start":{"line":213,"column":46},"end":{"line":213,"column":60}}},"17":{"name":"(anonymous_17)","line":229,"loc":{"start":{"line":229,"column":31},"end":{"line":229,"column":43}}},"18":{"name":"(anonymous_18)","line":246,"loc":{"start":{"line":246,"column":15},"end":{"line":246,"column":37}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":20,"column":12}},"2":{"start":{"line":27,"column":0},"end":{"line":27,"column":37}},"3":{"start":{"line":29,"column":0},"end":{"line":46,"column":1}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":37}},"5":{"start":{"line":31,"column":4},"end":{"line":31,"column":37}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":70}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":57}},"8":{"start":{"line":35,"column":4},"end":{"line":43,"column":6}},"9":{"start":{"line":36,"column":8},"end":{"line":39,"column":26}},"10":{"start":{"line":40,"column":8},"end":{"line":40,"column":43}},"11":{"start":{"line":41,"column":8},"end":{"line":41,"column":37}},"12":{"start":{"line":42,"column":8},"end":{"line":42,"column":19}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":65}},"14":{"start":{"line":48,"column":0},"end":{"line":52,"column":2}},"15":{"start":{"line":50,"column":8},"end":{"line":50,"column":49}},"16":{"start":{"line":55,"column":0},"end":{"line":125,"column":1}},"17":{"start":{"line":56,"column":4},"end":{"line":99,"column":41}},"18":{"start":{"line":57,"column":12},"end":{"line":62,"column":40}},"19":{"start":{"line":64,"column":12},"end":{"line":64,"column":38}},"20":{"start":{"line":65,"column":12},"end":{"line":65,"column":30}},"21":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"22":{"start":{"line":68,"column":16},"end":{"line":68,"column":44}},"23":{"start":{"line":71,"column":12},"end":{"line":94,"column":13}},"24":{"start":{"line":72,"column":16},"end":{"line":80,"column":19}},"25":{"start":{"line":73,"column":20},"end":{"line":73,"column":60}},"26":{"start":{"line":73,"column":31},"end":{"line":73,"column":58}},"27":{"start":{"line":74,"column":20},"end":{"line":79,"column":23}},"28":{"start":{"line":75,"column":24},"end":{"line":75,"column":66}},"29":{"start":{"line":75,"column":36},"end":{"line":75,"column":64}},"30":{"start":{"line":76,"column":24},"end":{"line":78,"column":27}},"31":{"start":{"line":77,"column":28},"end":{"line":77,"column":55}},"32":{"start":{"line":84,"column":16},"end":{"line":84,"column":98}},"33":{"start":{"line":85,"column":16},"end":{"line":85,"column":63}},"34":{"start":{"line":87,"column":16},"end":{"line":87,"column":49}},"35":{"start":{"line":88,"column":16},"end":{"line":88,"column":50}},"36":{"start":{"line":90,"column":16},"end":{"line":90,"column":45}},"37":{"start":{"line":91,"column":16},"end":{"line":93,"column":19}},"38":{"start":{"line":92,"column":20},"end":{"line":92,"column":41}},"39":{"start":{"line":101,"column":4},"end":{"line":115,"column":7}},"40":{"start":{"line":102,"column":8},"end":{"line":102,"column":34}},"41":{"start":{"line":103,"column":8},"end":{"line":108,"column":9}},"42":{"start":{"line":104,"column":12},"end":{"line":104,"column":78}},"43":{"start":{"line":105,"column":12},"end":{"line":105,"column":53}},"44":{"start":{"line":106,"column":12},"end":{"line":106,"column":55}},"45":{"start":{"line":107,"column":12},"end":{"line":107,"column":69}},"46":{"start":{"line":109,"column":8},"end":{"line":113,"column":9}},"47":{"start":{"line":110,"column":12},"end":{"line":110,"column":46}},"48":{"start":{"line":112,"column":12},"end":{"line":112,"column":65}},"49":{"start":{"line":112,"column":37},"end":{"line":112,"column":63}},"50":{"start":{"line":114,"column":8},"end":{"line":114,"column":19}},"51":{"start":{"line":117,"column":4},"end":{"line":124,"column":6}},"52":{"start":{"line":118,"column":8},"end":{"line":118,"column":43}},"53":{"start":{"line":119,"column":8},"end":{"line":119,"column":114}},"54":{"start":{"line":120,"column":8},"end":{"line":123,"column":9}},"55":{"start":{"line":121,"column":12},"end":{"line":121,"column":104}},"56":{"start":{"line":122,"column":12},"end":{"line":122,"column":32}},"57":{"start":{"line":128,"column":0},"end":{"line":130,"column":1}},"58":{"start":{"line":129,"column":4},"end":{"line":129,"column":23}},"59":{"start":{"line":132,"column":0},"end":{"line":132,"column":38}},"60":{"start":{"line":133,"column":0},"end":{"line":133,"column":42}},"61":{"start":{"line":135,"column":0},"end":{"line":262,"column":3}},"62":{"start":{"line":137,"column":8},"end":{"line":137,"column":120}},"63":{"start":{"line":141,"column":8},"end":{"line":157,"column":35}},"64":{"start":{"line":158,"column":8},"end":{"line":158,"column":28}},"65":{"start":{"line":163,"column":8},"end":{"line":202,"column":33}},"66":{"start":{"line":204,"column":8},"end":{"line":204,"column":33}},"67":{"start":{"line":205,"column":8},"end":{"line":207,"column":9}},"68":{"start":{"line":206,"column":12},"end":{"line":206,"column":122}},"69":{"start":{"line":209,"column":8},"end":{"line":216,"column":9}},"70":{"start":{"line":210,"column":12},"end":{"line":210,"column":32}},"71":{"start":{"line":213,"column":12},"end":{"line":215,"column":15}},"72":{"start":{"line":214,"column":16},"end":{"line":214,"column":36}},"73":{"start":{"line":218,"column":8},"end":{"line":224,"column":11}},"74":{"start":{"line":226,"column":8},"end":{"line":233,"column":9}},"75":{"start":{"line":227,"column":12},"end":{"line":227,"column":52}},"76":{"start":{"line":228,"column":12},"end":{"line":228,"column":63}},"77":{"start":{"line":229,"column":12},"end":{"line":232,"column":15}},"78":{"start":{"line":230,"column":16},"end":{"line":230,"column":76}},"79":{"start":{"line":231,"column":16},"end":{"line":231,"column":99}},"80":{"start":{"line":235,"column":8},"end":{"line":235,"column":40}},"81":{"start":{"line":236,"column":8},"end":{"line":236,"column":34}},"82":{"start":{"line":237,"column":8},"end":{"line":260,"column":9}},"83":{"start":{"line":238,"column":12},"end":{"line":238,"column":130}},"84":{"start":{"line":238,"column":27},"end":{"line":238,"column":128}},"85":{"start":{"line":239,"column":12},"end":{"line":239,"column":133}},"86":{"start":{"line":239,"column":35},"end":{"line":239,"column":131}},"87":{"start":{"line":240,"column":12},"end":{"line":240,"column":32}},"88":{"start":{"line":241,"column":12},"end":{"line":249,"column":15}},"89":{"start":{"line":247,"column":16},"end":{"line":247,"column":50}},"90":{"start":{"line":247,"column":27},"end":{"line":247,"column":48}},"91":{"start":{"line":248,"column":16},"end":{"line":248,"column":84}},"92":{"start":{"line":251,"column":12},"end":{"line":255,"column":13}},"93":{"start":{"line":252,"column":16},"end":{"line":252,"column":54}},"94":{"start":{"line":254,"column":16},"end":{"line":254,"column":40}},"95":{"start":{"line":256,"column":12},"end":{"line":256,"column":91}},"96":{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},"97":{"start":{"line":258,"column":16},"end":{"line":258,"column":29}},"98":{"start":{"line":264,"column":0},"end":{"line":264,"column":35}}},"branchMap":{"1":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":12}},{"start":{"line":67,"column":12},"end":{"line":67,"column":12}}]},"2":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":12}},{"start":{"line":71,"column":12},"end":{"line":71,"column":12}}]},"3":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":20},"end":{"line":73,"column":20}},{"start":{"line":73,"column":20},"end":{"line":73,"column":20}}]},"4":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":24},"end":{"line":75,"column":24}},{"start":{"line":75,"column":24},"end":{"line":75,"column":24}}]},"5":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":8}},{"start":{"line":103,"column":8},"end":{"line":103,"column":8}}]},"6":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":45},"end":{"line":104,"column":56}},{"start":{"line":104,"column":60},"end":{"line":104,"column":74}}]},"7":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":8}},{"start":{"line":109,"column":8},"end":{"line":109,"column":8}}]},"8":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":112,"column":12}},{"start":{"line":112,"column":12},"end":{"line":112,"column":12}}]},"9":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":8}},{"start":{"line":120,"column":8},"end":{"line":120,"column":8}}]},"10":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":8}},{"start":{"line":205,"column":8},"end":{"line":205,"column":8}}]},"11":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":8}},{"start":{"line":209,"column":8},"end":{"line":209,"column":8}}]},"12":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":226,"column":8}},{"start":{"line":226,"column":8},"end":{"line":226,"column":8}}]},"13":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":8}},{"start":{"line":237,"column":8},"end":{"line":237,"column":8}}]},"14":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":12},"end":{"line":238,"column":12}},{"start":{"line":238,"column":12},"end":{"line":238,"column":12}}]},"15":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":12},"end":{"line":239,"column":12}},{"start":{"line":239,"column":12},"end":{"line":239,"column":12}}]},"16":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":26},"end":{"line":244,"column":32}},{"start":{"line":244,"column":36},"end":{"line":244,"column":57}}]},"17":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":16},"end":{"line":247,"column":16}},{"start":{"line":247,"column":16},"end":{"line":247,"column":16}}]},"18":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":12},"end":{"line":251,"column":12}},{"start":{"line":251,"column":12},"end":{"line":251,"column":12}}]},"19":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":12},"end":{"line":257,"column":12}},{"start":{"line":257,"column":12},"end":{"line":257,"column":12}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var path = require('path'),","    mkdirp = require('mkdirp'),","    once = require('once'),","    async = require('async'),","    fs = require('fs'),","    filesFor = require('../util/file-matcher').filesFor,","    nopt = require('nopt'),","    Instrumenter = require('../instrumenter'),","    inputError = require('../util/input-error'),","    formatOption = require('../util/help-formatter').formatOption,","    util = require('util'),","    Command = require('./index'),","    Collector = require('../collector'),","    configuration = require('../config'),","    verbose;","","","/*"," * Chunk file size to use when reading non JavaScript files in memory"," * and copying them over when using complete-copy flag."," */","var READ_FILE_CHUNK_SIZE = 64 * 1024;","","function BaselineCollector(instrumenter) {","    this.instrumenter = instrumenter;","    this.collector = new Collector();","    this.instrument = instrumenter.instrument.bind(this.instrumenter);","","    var origInstrumentSync = instrumenter.instrumentSync;","    this.instrumentSync = function () {","        var args = Array.prototype.slice.call(arguments),","            ret = origInstrumentSync.apply(this.instrumenter, args),","            baseline = this.instrumenter.lastFileCoverage(),","            coverage = {};","        coverage[baseline.path] = baseline;","        this.collector.add(coverage);","        return ret;","    };","    //monkey patch the instrumenter to call our version instead","    instrumenter.instrumentSync = this.instrumentSync.bind(this);","}","","BaselineCollector.prototype = {","    getCoverage: function () {","        return this.collector.getFinalCoverage();","    }","};","","","function processFiles(instrumenter, inputDir, outputDir, relativeNames, extensions) {","    var processor = function (name, callback) {","            var inputFile = path.resolve(inputDir, name),","                outputFile = path.resolve(outputDir, name),","                inputFileExtenstion = path.extname(inputFile),","                isJavaScriptFile = extensions.indexOf(inputFileExtenstion) > -1,","                oDir = path.dirname(outputFile),","                readStream, writeStream;","","            callback = once(callback);","            mkdirp.sync(oDir);","","            if (fs.statSync(inputFile).isDirectory()) {","                return callback(null, name);","            }","","            if (isJavaScriptFile) {","                fs.readFile(inputFile, 'utf8', function (err, data) {","                    if (err) { return callback(err, name); }","                    instrumenter.instrument(data, inputFile, function (iErr, instrumented) {","                        if (iErr) { return callback(iErr, name); }","                        fs.writeFile(outputFile, instrumented, 'utf8', function (err) {","                            return callback(err, name);","                        });","                    });","                });","            }","            else {","                // non JavaScript file, copy it as is","                readStream = fs.createReadStream(inputFile, {'bufferSize': READ_FILE_CHUNK_SIZE});","                writeStream = fs.createWriteStream(outputFile);","","                readStream.on('error', callback);","                writeStream.on('error', callback);","","                readStream.pipe(writeStream);","                readStream.on('end', function() {","                    callback(null, name);","                });","            }","        },","        q = async.queue(processor, 10),","        errors = [],","        count = 0,","        startTime = new Date().getTime();","","    q.push(relativeNames, function (err, name) {","        var inputFile, outputFile;","        if (err) {","            errors.push({ file: name, error: err.message || err.toString() });","            inputFile = path.resolve(inputDir, name);","            outputFile = path.resolve(outputDir, name);","            fs.writeFileSync(outputFile, fs.readFileSync(inputFile));","        }","        if (verbose) {","            console.log('Processed: ' + name);","        } else {","            if (count % 100 === 0) { process.stdout.write('.'); }","        }","        count += 1;","    });","","    q.drain = function () {","        var endTime = new Date().getTime();","        console.log('\\nProcessed [' + count + '] files in ' + Math.floor((endTime - startTime) / 1000) + ' secs');","        if (errors.length > 0) {","            console.log('The following ' + errors.length + ' file(s) had errors and were copied as-is');","            console.log(errors);","        }","    };","}","","","function InstrumentCommand() {","    Command.call(this);","}","","InstrumentCommand.TYPE = 'instrument';","util.inherits(InstrumentCommand, Command);","","Command.mix(InstrumentCommand, {","    synopsis: function synopsis() {","        return \"instruments a file or a directory tree and writes the instrumented code to the desired output location\";","    },","","    usage: function () {","        console.error('\\nUsage: ' + this.toolName() + ' ' + this.type() + ' <options> <file-or-directory>\\n\\nOptions are:\\n\\n' +","            [","                formatOption('--config <path-to-config>', 'the configuration file to use, defaults to .istanbul.yml'),","                formatOption('--output <file-or-dir>', 'The output file or directory. This is required when the input is a directory, ' +","                    'defaults to standard output when input is a file'),","                formatOption('-x <exclude-pattern> [-x <exclude-pattern>]', 'one or more glob patterns (e.g. \"**/vendor/**\" to ignore all files ' +","                    'under a vendor directory). Also see the --default-excludes option'),","                formatOption('--variable <global-coverage-variable-name>', 'change the variable name of the global coverage variable from the ' +","                    'default value of `__coverage__` to something else'),","                formatOption('--embed-source', 'embed source code into the coverage object, defaults to false'),","                formatOption('--[no-]compact', 'produce [non]compact output, defaults to compact'),","                formatOption('--[no-]preserve-comments', 'remove / preserve comments in the output, defaults to false'),","                formatOption('--[no-]complete-copy', 'also copy non-javascript files to the ouput directory as is, defaults to false'),","                formatOption('--save-baseline', 'produce a baseline coverage.json file out of all files instrumented'),","                formatOption('--baseline-file <file>', 'filename of baseline file, defaults to coverage/coverage-baseline.json'),","                formatOption('--es-modules', 'source code uses es import/export module syntax')","            ].join('\\n\\n') + '\\n');","        console.error('\\n');","    },","","    run: function (args, callback) {","","        var template = {","                config: path,","                output: path,","                x: [Array, String],","                variable: String,","                compact: Boolean,","                'complete-copy': Boolean,","                verbose: Boolean,","                'save-baseline': Boolean,","                'baseline-file': path,","                'embed-source': Boolean,","                'preserve-comments': Boolean,","                'es-modules': Boolean","            },","            opts = nopt(template, { v : '--verbose' }, args, 0),","            overrides = {","                verbose: opts.verbose,","                instrumentation: {","                    variable: opts.variable,","                    compact: opts.compact,","                    'embed-source': opts['embed-source'],","                    'preserve-comments': opts['preserve-comments'],","                    excludes: opts.x,","                    'complete-copy': opts['complete-copy'],","                    'save-baseline': opts['save-baseline'],","                    'baseline-file': opts['baseline-file'],","                    'es-modules': opts['es-modules']","                }","            },","            config = configuration.loadFile(opts.config, overrides),","            iOpts = config.instrumentation,","            cmdArgs = opts.argv.remain,","            file,","            stats,","            stream,","            includes,","            instrumenter,","            needBaseline = iOpts.saveBaseline(),","            baselineFile = path.resolve(iOpts.baselineFile()),","            output = opts.output;","","        verbose = config.verbose;","        if (cmdArgs.length !== 1) {","            return callback(inputError.create('Need exactly one filename/ dirname argument for the instrument command!'));","        }","","        if (iOpts.completeCopy()) {","            includes = ['**/*'];","        }","        else {","            includes = iOpts.extensions().map(function(ext) {","                return '**/*' + ext;","            });","        }","","        instrumenter = new Instrumenter({","            coverageVariable: iOpts.variable(),","            embedSource: iOpts.embedSource(),","            noCompact: !iOpts.compact(),","            preserveComments: iOpts.preserveComments(),","            esModules: iOpts.esModules()","        });","","        if (needBaseline) {","            mkdirp.sync(path.dirname(baselineFile));","            instrumenter = new BaselineCollector(instrumenter);","            process.on('exit', function () {","                console.log('Saving baseline coverage at: ' + baselineFile);","                fs.writeFileSync(baselineFile, JSON.stringify(instrumenter.getCoverage()), 'utf8');","            });","        }","","        file = path.resolve(cmdArgs[0]);","        stats = fs.statSync(file);","        if (stats.isDirectory()) {","            if (!output) { return callback(inputError.create('Need an output directory [-o <dir>] when input is a directory!')); }","            if (output === file) { return callback(inputError.create('Cannot instrument into the same directory/ file as input!')); }","            mkdirp.sync(output);","            filesFor({","                root: file,","                includes: includes,","                excludes: opts.x || iOpts.excludes(false), // backwards-compat, *sigh*","                relative: true","            }, function (err, files) {","                if (err) { return callback(err); }","                processFiles(instrumenter, file, output, files, iOpts.extensions());","            });","        } else {","            if (output) {","                stream = fs.createWriteStream(output);","            } else {","                stream = process.stdout;","            }","            stream.write(instrumenter.instrumentSync(fs.readFileSync(file, 'utf8'), file));","            if (stream !== process.stdout) {","                stream.end();","            }","        }","    }","});","","module.exports = InstrumentCommand;","",""],"l":{"6":1,"27":1,"29":1,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"40":0,"41":0,"42":0,"45":0,"48":1,"50":0,"55":1,"56":0,"57":0,"64":0,"65":0,"67":0,"68":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"84":0,"85":0,"87":0,"88":0,"90":0,"91":0,"92":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"109":0,"110":0,"112":0,"114":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"128":1,"129":0,"132":1,"133":1,"135":1,"137":0,"141":0,"158":0,"163":0,"204":0,"205":0,"206":0,"209":0,"210":0,"213":0,"214":0,"218":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"247":0,"248":0,"251":0,"252":0,"254":0,"256":0,"257":0,"258":0,"264":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/report.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/report.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"ReportCommand","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}}},"2":{"name":"printDeprecationMessage","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":43}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":14},"end":{"line":36,"column":26}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":11},"end":{"line":40,"column":23}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":39},"end":{"line":52,"column":55}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":9},"end":{"line":64,"column":35}}},"7":{"name":"(anonymous_7)","line":107,"loc":{"start":{"line":107,"column":11},"end":{"line":107,"column":33}}},"8":{"name":"(anonymous_8)","line":109,"loc":{"start":{"line":109,"column":26},"end":{"line":109,"column":42}}},"9":{"name":"(anonymous_9)","line":113,"loc":{"start":{"line":113,"column":45},"end":{"line":113,"column":60}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":18,"column":41}},"2":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":21,"column":4},"end":{"line":21,"column":23}},"4":{"start":{"line":24,"column":0},"end":{"line":24,"column":30}},"5":{"start":{"line":25,"column":0},"end":{"line":25,"column":38}},"6":{"start":{"line":27,"column":0},"end":{"line":33,"column":1}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":92}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":102}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":104}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":86}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":92}},"12":{"start":{"line":35,"column":0},"end":{"line":119,"column":3}},"13":{"start":{"line":37,"column":8},"end":{"line":37,"column":85}},"14":{"start":{"line":41,"column":8},"end":{"line":48,"column":28}},"15":{"start":{"line":50,"column":8},"end":{"line":50,"column":28}},"16":{"start":{"line":51,"column":8},"end":{"line":51,"column":45}},"17":{"start":{"line":52,"column":8},"end":{"line":54,"column":11}},"18":{"start":{"line":53,"column":11},"end":{"line":53,"column":77}},"19":{"start":{"line":55,"column":8},"end":{"line":55,"column":26}},"20":{"start":{"line":56,"column":8},"end":{"line":60,"column":22}},"21":{"start":{"line":61,"column":8},"end":{"line":61,"column":28}},"22":{"start":{"line":66,"column":8},"end":{"line":84,"column":44}},"23":{"start":{"line":87,"column":8},"end":{"line":92,"column":9}},"24":{"start":{"line":89,"column":12},"end":{"line":89,"column":40}},"25":{"start":{"line":90,"column":12},"end":{"line":90,"column":37}},"26":{"start":{"line":91,"column":12},"end":{"line":91,"column":64}},"27":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"28":{"start":{"line":96,"column":12},"end":{"line":96,"column":49}},"29":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"30":{"start":{"line":99,"column":12},"end":{"line":99,"column":33}},"31":{"start":{"line":101,"column":8},"end":{"line":101,"column":33}},"32":{"start":{"line":103,"column":8},"end":{"line":103,"column":42}},"33":{"start":{"line":104,"column":8},"end":{"line":117,"column":11}},"34":{"start":{"line":108,"column":12},"end":{"line":108,"column":35}},"35":{"start":{"line":108,"column":23},"end":{"line":108,"column":33}},"36":{"start":{"line":109,"column":12},"end":{"line":112,"column":15}},"37":{"start":{"line":110,"column":16},"end":{"line":110,"column":80}},"38":{"start":{"line":111,"column":16},"end":{"line":111,"column":46}},"39":{"start":{"line":113,"column":12},"end":{"line":116,"column":15}},"40":{"start":{"line":114,"column":16},"end":{"line":114,"column":36}},"41":{"start":{"line":115,"column":16},"end":{"line":115,"column":37}},"42":{"start":{"line":121,"column":0},"end":{"line":121,"column":31}}},"branchMap":{"1":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":29},"end":{"line":74,"column":41}},{"start":{"line":74,"column":45},"end":{"line":74,"column":64}}]},"2":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"3":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":32}},{"start":{"line":88,"column":16},"end":{"line":88,"column":62}}]},"4":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"5":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]},"6":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":15},"end":{"line":103,"column":24}},{"start":{"line":103,"column":28},"end":{"line":103,"column":41}}]},"7":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var nopt = require('nopt'),","    Report = require('../report'),","    Reporter = require('../reporter'),","    path = require('path'),","    fs = require('fs'),","    Collector = require('../collector'),","    helpFormatter = require('../util/help-formatter'),","    formatOption = helpFormatter.formatOption,","    formatPara = helpFormatter.formatPara,","    filesFor = require('../util/file-matcher').filesFor,","    util = require('util'),","    Command = require('./index'),","    configuration = require('../config');","","function ReportCommand() {","    Command.call(this);","}","","ReportCommand.TYPE = 'report';","util.inherits(ReportCommand, Command);","","function printDeprecationMessage(pat, fmt) {","    console.error('**********************************************************************');","    console.error('DEPRECATION WARNING! You are probably using the old format of the report command');","    console.error('This will stop working soon, see `istanbul help report` for the new command format');","    console.error('Assuming you meant: istanbul report --include=' + pat + ' ' + fmt);","    console.error('**********************************************************************');","}","","Command.mix(ReportCommand, {","    synopsis: function () {","        return \"writes reports for coverage JSON objects produced in a previous run\";","    },","","    usage: function () {","        console.error('\\nUsage: ' + this.toolName() + ' ' + this.type() + ' <options> [ <format> ... ]\\n\\nOptions are:\\n\\n' +","            [","                formatOption('--config <path-to-config>', 'the configuration file to use, defaults to .istanbul.yml'),","                formatOption('--root <input-directory>', 'The input root directory for finding coverage files'),","                formatOption('--dir <report-directory>', 'The output directory where files will be written. This defaults to ./coverage/'),","                formatOption('--include <glob>', 'The glob pattern to select one or more coverage files, defaults to **/coverage*.json'),","                formatOption('--verbose, -v', 'verbose mode')","            ].join('\\n\\n'));","","        console.error('\\n');","        console.error('<format> is one of ');","        Report.getReportList().forEach(function (name) {","           console.error(formatOption(name, Report.create(name).synopsis()));","        });","        console.error(\"\");","        console.error(formatPara([","            'Default format is lcov unless otherwise specified in the config file.',","            'In addition you can tweak the file names for various reports using the config file.',","            'Type `istanbul help config` to see what can be tweaked.'","        ].join(' ')));","        console.error('\\n');","    },","","    run: function (args, callback) {","","        var template = {","                config: path,","                root: path,","                dir: path,","                include: String,","                verbose: Boolean","            },","            opts = nopt(template, { v : '--verbose' }, args, 0),","            includePattern = opts.include || '**/coverage*.json',","            root,","            collector = new Collector(),","            config = configuration.loadFile(opts.config, {","                verbose: opts.verbose,","                reporting: {","                    dir: opts.dir","                }","            }),","            formats = opts.argv.remain,","            reporter = new Reporter(config);","","        // Start: backward compatible processing","        if (formats.length === 2 &&","                Report.getReportList().indexOf(formats[1]) < 0) {","            includePattern = formats[1];","            formats = [ formats[0] ];","            printDeprecationMessage(includePattern, formats[0]);","        }","        // End: backward compatible processing","","        if (formats.length === 0) {","            formats = config.reporting.reports();","        }","        if (formats.length === 0) {","            formats = [ 'lcov' ];","        }","        reporter.addAll(formats);","","        root = opts.root || process.cwd();","        filesFor({","            root: root,","            includes: [ includePattern ]","        }, function (err, files) {","            if (err) { throw err; }","            files.forEach(function (file) {","                var coverageObject =  JSON.parse(fs.readFileSync(file, 'utf8'));","                collector.add(coverageObject);","            });","            reporter.write(collector, false, function (err) {","                console.log('Done');","                return callback(err);","            });","        });","    }","});","","module.exports = ReportCommand;","","",""],"l":{"6":1,"20":1,"21":0,"24":1,"25":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"35":1,"37":0,"41":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"61":0,"66":0,"87":0,"89":0,"90":0,"91":0,"95":0,"96":0,"98":0,"99":0,"101":0,"103":0,"104":0,"108":0,"109":0,"110":0,"111":0,"113":0,"114":0,"115":0,"121":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/command/test.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"TestCommand","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":23}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":26}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":23}}},"4":{"name":"(anonymous_4)","line":26,"loc":{"start":{"line":26,"column":9},"end":{"line":26,"column":35}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":8,"column":33}},"2":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":23}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"6":{"start":{"line":17,"column":0},"end":{"line":29,"column":3}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":129}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":57}},"9":{"start":{"line":27,"column":8},"end":{"line":27,"column":89}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":29}}},"branchMap":{},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var runWithCover = require('./common/run-with-cover'),","    util = require('util'),","    Command = require('./index');","","function TestCommand() {","    Command.call(this);","}","","TestCommand.TYPE = 'test';","util.inherits(TestCommand, Command);","","Command.mix(TestCommand, {","    synopsis: function () {","        return \"cover a node command only when npm_config_coverage is set. Use in an `npm test` script for conditional coverage\";","    },","","    usage: function () {","        runWithCover.usage(this.toolName(), this.type());","    },","","    run: function (args, callback) {","        runWithCover.run(args, this.type(), !!process.env.npm_config_coverage, callback);","    }","});","","module.exports = TestCommand;",""],"l":{"6":1,"10":1,"11":0,"14":1,"15":1,"17":1,"19":0,"23":0,"27":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/yui-load-hook.js":{"path":"/home/travis/build/npmtest/node-npmtest-istanbul/node_modules/istanbul/lib/util/yui-load-hook.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":58}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":27}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":45},"end":{"line":26,"column":58}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":30},"end":{"line":29,"column":55}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":9,"column":34}},"2":{"start":{"line":11,"column":0},"end":{"line":48,"column":2}},"3":{"start":{"line":12,"column":4},"end":{"line":47,"column":6}},"4":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"5":{"start":{"line":14,"column":12},"end":{"line":14,"column":19}},"6":{"start":{"line":16,"column":8},"end":{"line":19,"column":20}},"7":{"start":{"line":21,"column":8},"end":{"line":46,"column":9}},"8":{"start":{"line":22,"column":12},"end":{"line":22,"column":28}},"9":{"start":{"line":23,"column":12},"end":{"line":23,"column":118}},"10":{"start":{"line":24,"column":12},"end":{"line":24,"column":38}},"11":{"start":{"line":24,"column":29},"end":{"line":24,"column":36}},"12":{"start":{"line":25,"column":12},"end":{"line":25,"column":72}},"13":{"start":{"line":25,"column":27},"end":{"line":25,"column":70}},"14":{"start":{"line":26,"column":12},"end":{"line":45,"column":14}},"15":{"start":{"line":27,"column":16},"end":{"line":27,"column":39}},"16":{"start":{"line":28,"column":16},"end":{"line":28,"column":38}},"17":{"start":{"line":29,"column":16},"end":{"line":43,"column":18}},"18":{"start":{"line":30,"column":20},"end":{"line":41,"column":21}},"19":{"start":{"line":31,"column":24},"end":{"line":33,"column":25}},"20":{"start":{"line":32,"column":28},"end":{"line":32,"column":70}},"21":{"start":{"line":34,"column":24},"end":{"line":40,"column":25}},"22":{"start":{"line":35,"column":28},"end":{"line":35,"column":58}},"23":{"start":{"line":37,"column":28},"end":{"line":37,"column":98}},"24":{"start":{"line":38,"column":28},"end":{"line":38,"column":60}},"25":{"start":{"line":39,"column":28},"end":{"line":39,"column":70}},"26":{"start":{"line":39,"column":44},"end":{"line":39,"column":68}},"27":{"start":{"line":42,"column":20},"end":{"line":42,"column":58}},"28":{"start":{"line":44,"column":16},"end":{"line":44,"column":25}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":80},"end":{"line":23,"column":110}},{"start":{"line":23,"column":113},"end":{"line":23,"column":117}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":23},"end":{"line":23,"column":30}},{"start":{"line":23,"column":34},"end":{"line":23,"column":46}},{"start":{"line":23,"column":50},"end":{"line":23,"column":77}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":12}},{"start":{"line":24,"column":12},"end":{"line":24,"column":12}}]},"6":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":12}},{"start":{"line":25,"column":12},"end":{"line":25,"column":12}}]},"7":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":20},"end":{"line":30,"column":20}},{"start":{"line":30,"column":20},"end":{"line":30,"column":20}}]},"8":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":24},"end":{"line":30,"column":36}},{"start":{"line":30,"column":40},"end":{"line":30,"column":66}}]},"9":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":24},"end":{"line":31,"column":24}},{"start":{"line":31,"column":24},"end":{"line":31,"column":24}}]},"10":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":42},"end":{"line":38,"column":52}},{"start":{"line":38,"column":56},"end":{"line":38,"column":58}}]},"11":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":28},"end":{"line":39,"column":28}},{"start":{"line":39,"column":28},"end":{"line":39,"column":28}}]}},"code":["/*"," Copyright (c) 2012, Yahoo! Inc.  All rights reserved."," Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","//EXPERIMENTAL code: do not rely on this in anyway until the docs say it is allowed","","var path = require('path'),","    yuiRegexp = /yui-nodejs\\.js$/;","","module.exports = function (matchFn, transformFn, verbose) {","    return function (file) {","        if (!file.match(yuiRegexp)) {","            return;","        }","        var YMain = require(file),","            YUI,","            loaderFn,","            origGet;","","        if (YMain.YUI) {","            YUI = YMain.YUI;","            loaderFn = YUI.Env && YUI.Env.mods && YUI.Env.mods['loader-base'] ? YUI.Env.mods['loader-base'].fn : null;","            if (!loaderFn) { return; }","            if (verbose) { console.log('Applying YUI load post-hook'); }","            YUI.Env.mods['loader-base'].fn = function (Y) {","                loaderFn.call(null, Y);","                origGet = Y.Get._exec;","                Y.Get._exec = function (data, url, cb) {","                    if (matchFn(url) || matchFn(path.resolve(url))) { //allow for relative paths as well","                        if (verbose) {","                            console.log('Transforming [' + url + ']');","                        }","                        try {","                            data = transformFn(data, url);","                        } catch (ex) {","                            console.error('Error transforming: ' + url + ' return original code');","                            console.error(ex.message || ex);","                            if (ex.stack) { console.error(ex.stack); }","                        }","                    }","                    return origGet.call(Y, data, url, cb);","                };","                return Y;","            };","        }","    };","};","",""],"l":{"8":1,"11":1,"12":0,"13":0,"14":0,"16":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"39":0,"42":0,"44":0}}}